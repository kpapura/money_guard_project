{"version":3,"file":"StatisticsTab-e6e1e33c.js","sources":["../../src/pages/StatisticsTab/StatisticsTable/StatisticsTable.jsx","../../src/pages/StatisticsTab/Chart/Chart.jsx","../../src/pages/StatisticsTab/StatisticsDashboard/StatisticsDashboard.jsx","../../src/pages/StatisticsTab/StatisticsTab.jsx"],"sourcesContent":["import React from 'react';\n\nimport s from './StatisticsTable.module.css';\n\nconst StatisticsTable = ({\n  transactionsSummary,\n  colors,\n  incomeSummary,\n  expenseSummary,\n}) => {\n  const formattedIncome = incomeSummary.toLocaleString('ru-RU', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n  const formattedExpense = expenseSummary.toLocaleString('ru-RU', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n\n  return (\n    <div className={s.tableParagraphContainer}>\n      <div className={s.tableContainer}>\n        <table className={s.table}>\n          <thead>\n            <tr className={s.tableHeader}>\n              <th style={{ textAlign: 'left' }} className={s.tableCellHead}>\n                Category\n              </th>\n              <th style={{ textAlign: 'right' }} className={s.tableCellHead}>\n                Sum\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {transactionsSummary.map((category, index) => (\n              <tr key={index} className={s.tableRow}>\n                <td className={s.tableCell}>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div\n                      className={s.colorSquare}\n                      style={{\n                        marginRight: '16px',\n                        width: '24px',\n                        height: '24px',\n                        backgroundColor: colors[category.name],\n                      }}\n                    ></div>\n                    {category.name}\n                  </div>\n                </td>\n                <td style={{ textAlign: 'right' }} className={s.tableCell}>\n                  {category.total\n                    .toLocaleString('ru-RU', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2,\n                    })\n                    .replace('-', '')}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className={s.paragraphContainer}>\n        <p className={s.paragraph}>\n          Income:\n          <span className={s.income}>{formattedIncome}</span>\n        </p>\n        <p className={s.paragraph}>\n          Expenses:\n          <span className={s.expense}>\n            {formattedExpense.toString().replace('-', '')}\n          </span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticsTable;\n","import React from 'react';\n\nimport { Doughnut } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\n\nimport s from './Chart.module.css';\n\nconst DoughnutChart = ({ transactions, colors, period }) => {\n  if (!transactions || !colors) {\n    return <div>No data available</div>;\n  }\n\n  const formattedPeriod = period.toFixed(2);\n\n  const data = {\n    datasets: [\n      {\n        data: transactions?.map(transaction => transaction.total),\n        backgroundColor: transactions?.map(\n          transaction => colors[transaction.name]\n        ),\n        hoverBackgroundColor: transactions?.map(\n          transaction => colors[transaction.name]\n        ),\n        cutout: '75%',\n        borderWidth: 0,\n        hoverOffset: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className={s.chartContainer}>\n      <div className={s.chartWrapper}>\n        <Doughnut data={data} className={s.doughnut} />\n        <p className={s.periodText}> â‚´ {formattedPeriod}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DoughnutChart;\n","import React, { useState } from 'react';\nimport Select from 'react-select';\n\nimport s from './StatisticsDashboard.module.css';\nimport './select.css';\n\nconst StatisticsDashboard = ({ onMonthChange, onYearChange }) => {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n\n  const [selectedMonth, setSelectedMonth] = useState(\n    currentDate.getMonth() + 1\n  );\n  const [selectedYear, setSelectedYear] = useState(currentYear);\n\n  const handleMonthChange = selectedOption => {\n    setSelectedMonth(selectedOption.value);\n    onMonthChange(selectedOption.value);\n  };\n\n  const handleYearChange = selectedOption => {\n    setSelectedYear(selectedOption.value);\n    onYearChange(selectedOption.value);\n  };\n\n  const years = Array.from(\n    { length: currentYear - 2019 },\n    (_, i) => currentYear - i\n  ).reverse();\n  const months = [\n    { value: 1, label: 'January' },\n    { value: 2, label: 'February' },\n    { value: 3, label: 'March' },\n    { value: 4, label: 'April' },\n    { value: 5, label: 'May' },\n    { value: 6, label: 'June' },\n    { value: 7, label: 'July' },\n    { value: 8, label: 'August' },\n    { value: 9, label: 'September' },\n    { value: 10, label: 'October' },\n    { value: 11, label: 'November' },\n    { value: 12, label: 'December' },\n  ];\n\n  const yearOptions = years.map(year => ({ value: year, label: year }));\n\n  return (\n    <div className={s.selectContainers}>\n      <Select\n        className=\"react_select_container_special\"\n        classNamePrefix=\"react_select\"\n        value={months.find(month => month.value === selectedMonth)}\n        options={months}\n        onChange={handleMonthChange}\n      />\n      <Select\n        className=\"react_select_container\"\n        classNamePrefix=\"react_select\"\n        value={yearOptions.find(option => option.value === selectedYear)}\n        options={yearOptions}\n        onChange={handleYearChange}\n      />\n    </div>\n  );\n};\n\nexport default StatisticsDashboard;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport StatisticsTable from './StatisticsTable/StatisticsTable';\nimport DoughnutChart from './Chart/Chart';\nimport StatisticsDashboard from './StatisticsDashboard/StatisticsDashboard';\n\nimport { fetchTransactionSummaryControllerThunk } from '../../redux/transactions/operations';\nimport {\n  selectCategoriesSummary,\n  selectExpenseSummary,\n  selectIncomeSummary,\n  selectPeriodTotal,\n  selectMonth,\n  selectYear,\n} from '../../redux/transactions/transactionsSlice';\n\nimport s from './StatisticsTab.module.css';\n\nconst StatisticsTab = () => {\n  const dispatch = useDispatch();\n  const transactionsSummaryList = useSelector(selectCategoriesSummary);\n  const incomeTotal = useSelector(selectIncomeSummary);\n  const expenceTotal = useSelector(selectExpenseSummary);\n  const periodTotal = useSelector(selectPeriodTotal);\n  const selectedMonth = useSelector(selectMonth);\n  const selectedYear = useSelector(selectYear);\n\n  const [colors, setColors] = useState({});\n\n  useEffect(() => {\n    dispatch(\n      fetchTransactionSummaryControllerThunk({\n        month: selectedMonth,\n        year: selectedYear,\n      })\n    );\n  }, [selectedMonth, selectedYear, dispatch]);\n\n  const generateColors = () => {\n    const generatedColors = {};\n    transactionsSummaryList?.forEach(({ name, index }) => {\n      generatedColors[name] = `#${Math.floor(Math.random() * 16777215).toString(\n        16\n      )}`;\n    });\n    setColors(generatedColors);\n  };\n  useEffect(() => {\n    generateColors();\n  }, [transactionsSummaryList]);\n\n  const handleMonthChange = month => {\n    dispatch(\n      fetchTransactionSummaryControllerThunk({ month, year: selectedYear })\n    );\n  };\n\n  const handleYearChange = year => {\n    dispatch(\n      fetchTransactionSummaryControllerThunk({ month: selectedMonth, year })\n    );\n  };\n\n  return (\n    <section className={s.statisticsContainer}>\n      <h2 className={s.title}>Statistics</h2>\n\n      <div className={s.contentContainer}>\n        <DoughnutChart\n          transactions={transactionsSummaryList}\n          period={periodTotal}\n          colors={colors}\n        />\n\n        <div className={s.tableContainer}>\n          <StatisticsDashboard\n            onMonthChange={handleMonthChange}\n            onYearChange={handleYearChange}\n          />\n          <StatisticsTable\n            transactionsSummary={transactionsSummaryList}\n            colors={colors}\n            incomeSummary={incomeTotal}\n            expenseSummary={expenceTotal}\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default StatisticsTab;\n"],"names":["StatisticsTable","transactionsSummary","colors","incomeSummary","expenseSummary","formattedIncome","formattedExpense","React","s","category","index","DoughnutChart","transactions","period","formattedPeriod","data","transaction","Doughnut","StatisticsDashboard","onMonthChange","onYearChange","currentDate","currentYear","selectedMonth","setSelectedMonth","useState","selectedYear","setSelectedYear","handleMonthChange","selectedOption","handleYearChange","years","_","i","months","yearOptions","year","Select","month","option","StatisticsTab","dispatch","useDispatch","transactionsSummaryList","useSelector","selectCategoriesSummary","incomeTotal","selectIncomeSummary","expenceTotal","selectExpenseSummary","periodTotal","selectPeriodTotal","selectMonth","selectYear","setColors","useEffect","fetchTransactionSummaryControllerThunk","generateColors","generatedColors","name"],"mappings":"uvBAIMA,EAAkB,CAAC,CACvB,oBAAAC,EACA,OAAAC,EACA,cAAAC,EACA,eAAAC,CACF,IAAM,CACE,MAAAC,EAAkBF,EAAc,eAAe,QAAS,CAC5D,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EACKG,EAAmBF,EAAe,eAAe,QAAS,CAC9D,sBAAuB,EACvB,sBAAuB,CAAA,CACxB,EAED,OACGG,EAAA,cAAA,MAAA,CAAI,UAAWC,EAAE,yBACfD,EAAA,cAAA,MAAA,CAAI,UAAWC,EAAE,gBACfD,EAAA,cAAA,QAAA,CAAM,UAAWC,EAAE,OACjBD,EAAA,cAAA,QAAA,KACEA,EAAA,cAAA,KAAA,CAAG,UAAWC,EAAE,WAAA,EACdD,EAAA,cAAA,KAAA,CAAG,MAAO,CAAE,UAAW,MAAO,EAAG,UAAWC,EAAE,eAAe,UAE9D,kBACC,KAAG,CAAA,MAAO,CAAE,UAAW,SAAW,UAAWA,EAAE,aAAA,EAAe,KAE/D,CACF,CACF,EACAD,EAAA,cAAC,aACEN,EAAoB,IAAI,CAACQ,EAAUC,IACjCH,EAAA,cAAA,KAAA,CAAG,IAAKG,EAAO,UAAWF,EAAE,QAAA,EAC1BD,EAAA,cAAA,KAAA,CAAG,UAAWC,EAAE,SAAA,EACdD,EAAA,cAAA,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,WAAY,WACzCA,EAAA,cAAC,MAAA,CACC,UAAWC,EAAE,YACb,MAAO,CACL,YAAa,OACb,MAAO,OACP,OAAQ,OACR,gBAAiBN,EAAOO,EAAS,IAAI,CACvC,CAAA,CAAA,EAEDA,EAAS,IACZ,CACF,EACAF,EAAA,cAAC,MAAG,MAAO,CAAE,UAAW,SAAW,UAAWC,EAAE,WAC7CC,EAAS,MACP,eAAe,QAAS,CACvB,sBAAuB,EACvB,sBAAuB,CACxB,CAAA,EACA,QAAQ,IAAK,EAAE,CACpB,CACF,CACD,CACH,CACF,CACF,EACCF,EAAA,cAAA,MAAA,CAAI,UAAWC,EAAE,kBAChB,EAAAD,EAAA,cAAC,KAAE,UAAWC,EAAE,SAAW,EAAA,UAExBD,EAAA,cAAA,OAAA,CAAK,UAAWC,EAAE,MAAA,EAASH,CAAgB,CAC9C,EACAE,EAAA,cAAC,KAAE,UAAWC,EAAE,WAAW,YAExBD,EAAA,cAAA,OAAA,CAAK,UAAWC,EAAE,OAAA,EAChBF,EAAiB,WAAW,QAAQ,IAAK,EAAE,CAC9C,CACF,CACF,CACF,CAEJ,oKCtEMK,EAAgB,CAAC,CAAE,aAAAC,EAAc,OAAAV,EAAQ,OAAAW,KAAa,CACtD,GAAA,CAACD,GAAgB,CAACV,EACb,OAAAK,EAAA,cAAC,WAAI,mBAAiB,EAGzB,MAAAO,EAAkBD,EAAO,QAAQ,CAAC,EAElCE,EAAO,CACX,SAAU,CACR,CACE,KAAMH,GAAA,YAAAA,EAAc,IAAII,GAAeA,EAAY,OACnD,gBAAiBJ,GAAA,YAAAA,EAAc,IAC7BI,GAAed,EAAOc,EAAY,IAAI,GAExC,qBAAsBJ,GAAA,YAAAA,EAAc,IAClCI,GAAed,EAAOc,EAAY,IAAI,GAExC,OAAQ,MACR,YAAa,EACb,YAAa,CACf,CACF,CAAA,EAIA,OAAAT,EAAA,cAAC,MAAI,CAAA,UAAWC,EAAE,cAAA,kBACf,MAAI,CAAA,UAAWA,EAAE,YAAA,EACfD,EAAA,cAAAU,EAAA,CAAS,KAAAF,EAAY,UAAWP,EAAE,QAAU,CAAA,EAC5CD,EAAA,cAAA,IAAA,CAAE,UAAWC,EAAE,UAAY,EAAA,MAAIM,CAAgB,CAClD,CACF,CAEJ,mHCjCA,MAAMI,GAAsB,CAAC,CAAE,cAAAC,EAAe,aAAAC,KAAmB,CACzD,MAAAC,MAAkB,KAClBC,EAAcD,EAAY,cAE1B,CAACE,EAAeC,CAAgB,EAAIC,EAAA,SACxCJ,EAAY,WAAa,CAAA,EAErB,CAACK,EAAcC,CAAe,EAAIF,WAASH,CAAW,EAEtDM,EAAsCC,GAAA,CAC1CL,EAAiBK,EAAe,KAAK,EACrCV,EAAcU,EAAe,KAAK,CAAA,EAG9BC,EAAqCD,GAAA,CACzCF,EAAgBE,EAAe,KAAK,EACpCT,EAAaS,EAAe,KAAK,CAAA,EAG7BE,EAAQ,MAAM,KAClB,CAAE,OAAQT,EAAc,IAAK,EAC7B,CAACU,EAAGC,IAAMX,EAAcW,GACxB,QAAQ,EACJC,EAAS,CACb,CAAE,MAAO,EAAG,MAAO,SAAU,EAC7B,CAAE,MAAO,EAAG,MAAO,UAAW,EAC9B,CAAE,MAAO,EAAG,MAAO,OAAQ,EAC3B,CAAE,MAAO,EAAG,MAAO,OAAQ,EAC3B,CAAE,MAAO,EAAG,MAAO,KAAM,EACzB,CAAE,MAAO,EAAG,MAAO,MAAO,EAC1B,CAAE,MAAO,EAAG,MAAO,MAAO,EAC1B,CAAE,MAAO,EAAG,MAAO,QAAS,EAC5B,CAAE,MAAO,EAAG,MAAO,WAAY,EAC/B,CAAE,MAAO,GAAI,MAAO,SAAU,EAC9B,CAAE,MAAO,GAAI,MAAO,UAAW,EAC/B,CAAE,MAAO,GAAI,MAAO,UAAW,CAAA,EAG3BC,EAAcJ,EAAM,IAAIK,IAAS,CAAE,MAAOA,EAAM,MAAOA,CAAA,EAAO,EAEpE,OACG7B,EAAA,cAAA,MAAA,CAAI,UAAWC,GAAE,kBAChBD,EAAA,cAAC8B,EAAA,CACC,UAAU,iCACV,gBAAgB,eAChB,MAAOH,EAAO,KAAcI,GAAAA,EAAM,QAAUf,CAAa,EACzD,QAASW,EACT,SAAUN,CAAA,CAEZ,EAAArB,EAAA,cAAC8B,EAAA,CACC,UAAU,yBACV,gBAAgB,eAChB,MAAOF,EAAY,KAAeI,GAAAA,EAAO,QAAUb,CAAY,EAC/D,QAASS,EACT,SAAUL,CAAA,CAAA,CAEd,CAEJ,iMC7CMU,GAAgB,IAAM,CAC1B,MAAMC,EAAWC,IACXC,EAA0BC,EAAYC,CAAuB,EAC7DC,EAAcF,EAAYG,CAAmB,EAC7CC,EAAeJ,EAAYK,CAAoB,EAC/CC,EAAcN,EAAYO,CAAiB,EAC3C5B,EAAgBqB,EAAYQ,CAAW,EACvC1B,EAAekB,EAAYS,CAAU,EAErC,CAACnD,EAAQoD,CAAS,EAAI7B,EAAA,SAAS,CAAE,CAAA,EAEvC8B,EAAAA,UAAU,IAAM,CACdd,EACEe,EAAuC,CACrC,MAAOjC,EACP,KAAMG,CAAA,CACP,CAAA,CAEF,EAAA,CAACH,EAAeG,EAAce,CAAQ,CAAC,EAE1C,MAAMgB,EAAiB,IAAM,CAC3B,MAAMC,EAAkB,CAAA,EACxBf,GAAA,MAAAA,EAAyB,QAAQ,CAAC,CAAE,KAAAgB,EAAM,MAAAjD,KAAY,CACpCgD,EAAAC,CAAI,EAAI,IAAI,KAAK,MAAM,KAAK,OAAA,EAAW,QAAQ,EAAE,SAC/D,EACD,CAAA,EAAA,GAEHL,EAAUI,CAAe,CAAA,EAE3BH,EAAAA,UAAU,IAAM,CACCE,GAAA,EACd,CAACd,CAAuB,CAAC,EAE5B,MAAMf,EAA6BU,GAAA,CACjCG,EACEe,EAAuC,CAAE,MAAAlB,EAAO,KAAMZ,EAAc,CAAA,CACtE,EAGII,EAA2BM,GAAA,CAC/BK,EACEe,EAAuC,CAAE,MAAOjC,EAAe,KAAAa,EAAM,CAAA,CACvE,EAGF,uBACG,UAAQ,CAAA,UAAW5B,EAAE,mBAAA,kBACnB,KAAG,CAAA,UAAWA,EAAE,OAAO,YAAU,EAElCD,EAAA,cAAC,MAAI,CAAA,UAAWC,EAAE,gBAChB,EAAAD,EAAA,cAACI,EAAA,CACC,aAAcgC,EACd,OAAQO,EACR,OAAAhD,CAAA,CAAA,EAGFK,EAAA,cAAC,MAAI,CAAA,UAAWC,EAAE,gBAChBD,EAAA,cAACW,GAAA,CACC,cAAeU,EACf,aAAcE,CAAA,CAEhB,EAAAvB,EAAA,cAACP,EAAA,CACC,oBAAqB2C,EACrB,OAAAzC,EACA,cAAe4C,EACf,eAAgBE,CAAA,CAEpB,CAAA,CACF,CACF,CAEJ"}