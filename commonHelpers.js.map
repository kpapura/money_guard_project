{"version":3,"file":"commonHelpers.js","sources":["../src/components/LoginRegisterForm/InputField.jsx","../src/components/LoginRegisterForm/ProgressBar.jsx","../src/components/LoginRegisterForm/PassInputField.jsx","../src/components/LoginRegisterForm/LoginRegisterForm.jsx","../src/axiosConfig/walletApi.js","../src/redux/auth/operations.js","../src/Schemas/loginShema.js","../src/pages/Login/Login.jsx","../src/redux/auth/authSlice.js","../src/components/Exit/Exit.jsx","../src/components/Modal/Modal.jsx","../src/hooks/useModal.jsx","../src/components/Header/Header.jsx","../src/components/Layout.jsx","../src/Schemas/registerShema.js","../src/pages/Register/Register.jsx","../src/redux/transactions/operations.js","../src/redux/transactions/transactionsSlice.js","../src/img/sprite.svg","../src/hooks/useDashboard.jsx","../src/components/Transactions/TransactionItem/TransactionsItem.jsx","../src/components/Form/TransactionSwitcher/TransactionSwitcher.jsx","../src/helpers/addLeadingzero.js","../src/components/Form/FormFields/FormFields.jsx","../src/components/Form/Form.jsx","../src/components/Form/EditTransactionForm/EditTransactionForm.jsx","../src/components/Form/AddTransactionForm/AddTransactionForm.jsx","../src/components/Transactions/TransactionsList.jsx","../src/pages/HomeTab/HomeTab.jsx","../src/components/App.jsx","../src/redux/currencyRate/operations.js","../src/redux/currencyRate/currencyRateSlice.js","../src/redux/store.js","../src/index.jsx"],"sourcesContent":["import React from 'react';\nimport s from './LoginRegisterForm.module.css';\n\nconst InputField = ({ register, errors, name, placeholder, className }) => {\n  return (\n    <>\n      <div className={s.error_container}>\n        <label className={s.name_label}>\n          {name === 'username' ? (\n            <div className={s.name_user_icon}>\n              <svg width=\"20\" height=\"24\">\n                <use href=\"../../img/sprite.svg#icon-user\"></use>\n              </svg>{' '}\n            </div>\n          ) : (\n            <div className={s.icon_email_cont}>\n              <svg width=\"20\" height=\"24\">\n                <use href=\"../../img/sprite.svg#icon-email\"></use>\n              </svg>\n            </div>\n          )}\n          <input\n            className={s.name_input}\n            autoComplete=\"none\"\n            {...register(name)}\n            type=\"text\"\n            placeholder={placeholder}\n          />\n        </label>{' '}\n        {errors?.[name] && (\n          <span className={s[className]}>{errors[name].message}</span>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default InputField;\n","import React from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport s from './LoginRegisterForm.module.css';\n\nconst ProgressBar = ({ password }) => {\n  return (\n    <div className={s.porgress_container}>\n      <PasswordStrengthBar\n        password={password}\n        minLength={6}\n        scoreWordStyle={{ display: 'none' }}\n        className={s.strengthBar}\n      />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport { PiEyeClosedThin, PiEyeThin } from 'react-icons/pi';\nimport ProgressBar from './ProgressBar';\nimport s from './LoginRegisterForm.module.css';\n\nconst PassInputField = ({\n  register,\n  errors,\n  name,\n  placeholder,\n  getValues,\n  formType,\n  className,\n}) => {\n  const [type, setType] = useState('password');\n  const [confPassword, setConfPassword] = useState('');\n\n  function handleChange(e) {\n    setConfPassword(e.target.value);\n  }\n  return (\n    <>\n      <div className={s.error_container}>\n        <label className={s.password_label}>\n          <div className={s.password_icon}>\n            <svg width=\"20\" height=\"20\">\n              <use href=\"../../img/sprite.svg#icon-lock\"></use>\n            </svg>\n          </div>\n          <input\n            autoComplete={name}\n            {...register(name, {\n              required: 'Password is required',\n              validate: value =>\n                value === getValues('password') || 'Passwords do not match',\n            })}\n            type={type}\n            placeholder={placeholder}\n            onChange={handleChange}\n            className={s.password_input}\n          />{' '}\n          <div\n            className={s.eye}\n            onClick={() => {\n              setType(type === 'password' ? 'text' : 'password');\n            }}\n          >\n            {type === 'password' ? (\n              <PiEyeClosedThin style={{ color: 'rgba(255, 255, 255, 0.4)' }} />\n            ) : (\n              <PiEyeThin style={{ color: 'rgba(255, 255, 255, 0.6)' }} />\n            )}\n          </div>\n        </label>\n        {errors?.[name] && (\n          <span className={s[className]}>{errors[name].message}</span>\n        )}\n      </div>\n      {name === 'password' && formType !== 'login' && (\n        <ProgressBar password={confPassword} />\n      )}\n    </>\n  );\n};\n\nexport default PassInputField;\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { NavLink } from 'react-router-dom';\nimport s from './LoginRegisterForm.module.css';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputField from './InputField';\nimport PassInputField from './PassInputField';\n\nconst LoginRegisterForm = ({ onDataSubmit, formType, schema }) => {\n  const [size, setSize] = useState(0);\n  useEffect(() => {\n    const handleResize = () => {\n      setSize(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n  const submit = dataS => {\n    const { passwordConfirmation, ...data } = dataS;\n    onDataSubmit(data);\n    reset();\n  };\n\n  return (\n    <section\n      className={\n        formType === 'login'\n          ? `${s.login_register_section}`\n          : `${s.register_login_section}`\n      }\n    >\n      {' '}\n      <div className={s.background_container}>\n        <div\n          className={s.form_container}\n          style={{\n            padding:\n              size < 768 && formType === 'login'\n                ? '98px 20px'\n                : size > 768 && formType === 'login'\n                ? '80px 62px'\n                : '40px 62px',\n          }}\n        >\n          <a\n            href=\"\"\n            className={s.logo_wrapper}\n            style={{ paddingBottom: formType === 'login' ? '11px' : '0px' }}\n          >\n            {size < 768 ? (\n              <svg width=\"25.5\" height=\"25.5\">\n                <use href=\"../../img/sprite.svg#icon-logo\"></use>\n              </svg>\n            ) : (\n              <svg width=\"36\" height=\"36\">\n                <use href=\"../../img/sprite.svg#icon-logo\"></use>\n              </svg>\n            )}\n            Money Guard\n          </a>\n          <form className={s.form} onSubmit={handleSubmit(submit)}>\n            {formType === 'register' && (\n              <InputField\n                register={register}\n                errors={errors}\n                name=\"username\"\n                placeholder=\"Name\"\n                className=\"username\"\n              />\n            )}\n            <InputField\n              register={register}\n              errors={errors}\n              name=\"email\"\n              placeholder=\"E-mail\"\n              className=\"email\"\n            />\n            <PassInputField\n              register={register}\n              errors={errors}\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={e => handleChange(e)}\n              formType={formType}\n              className=\"password\"\n            />\n            {formType === 'register' && (\n              <>\n                <PassInputField\n                  register={register}\n                  errors={errors}\n                  name=\"passwordConfirmation\"\n                  placeholder=\"Confirm password\"\n                  className=\"cpassword\"\n                />\n              </>\n            )}\n            {formType === 'login' ? (\n              <div className={s.button_cont}>\n                <button className={s.submit_btn} type=\"submit\">\n                  log in\n                </button>\n                <NavLink className={s.inactive_btn} to=\"/register\">\n                  register\n                </NavLink>\n              </div>\n            ) : (\n              <div className={s.button_cont}>\n                <button className={s.submit_btn} type=\"submit\">\n                  register\n                </button>\n                <NavLink className={s.inactive_btn} to=\"/login\">\n                  log in\n                </NavLink>\n              </div>\n            )}{' '}\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default LoginRegisterForm;\n","import axios from 'axios';\n\nexport const walletApi = axios.create({\n  baseURL: 'https://wallet.b.goit.study/api/',\n});\n\nexport const setToken = token => {\n  walletApi.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\nexport const removeToken = () => {\n  walletApi.defaults.headers.common.Authorization = ``;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { walletApi, setToken, removeToken } from '../../axiosConfig/walletApi';\n\nexport const registerThunk = createAsyncThunk(\n  'register',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('auth/sign-up', credentials);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const loginThunk = createAsyncThunk(\n  'login',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('auth/sign-in', credentials);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logoutThunk = createAsyncThunk('logout', async (_, thunkAPI) => {\n  try {\n    const { data } = await walletApi.delete('auth/sign-out');\n    removeToken();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nexport const refreshThunk = createAsyncThunk('refresh', async (_, thunkApi) => {\n  const savedToken = thunkApi.getState().auth.token;\n  if (!savedToken) {\n    return thunkApi.rejectWithValue('Token is not exist!');\n  }\n  try {\n    setToken(savedToken);\n    const { data } = await walletApi.get('users/current');\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\n","import * as yup from 'yup';\n\nexport const loginSchema = yup\n  .object({\n    password: yup\n      .string()\n      .required()\n      .min(6, 'Must be more then 6 symbols')\n      .max(12, 'Must be less then 12 symbols'),\n    email: yup.string().required().email('Email is not valid'),\n  })\n  .required();\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport LoginRegisterForm from '../../components/LoginRegisterForm/LoginRegisterForm';\nimport { loginThunk } from '../../redux/auth/operations';\nimport { loginSchema } from '../../Schemas/loginShema';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = data => {\n    dispatch(loginThunk(data))\n      .unwrap()\n      .then(() => {\n        navigate('/');\n      })\n      .catch(error => {\n        console.log(error.message);\n        toast(error);\n      });\n  };\n  const values = {\n    email: 'tomato9@gmail.com',\n    password: '0000000',\n  };\n  return (\n    <div>\n      <LoginRegisterForm\n        formType={'login'}\n        onDataSubmit={handleSubmit}\n        values={values}\n        schema={loginSchema}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  loginThunk,\n  logoutThunk,\n  refreshThunk,\n  registerThunk,\n} from './operations';\n\nconst initialState = {\n  user: {\n    username: '',\n    email: '',\n  },\n  token: null,\n  loading: false,\n  error: false,\n  isLoggedIn: false,\n  isRefresh: false,\n  balance: 0,\n};\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState,\n  selectors: {\n    selectUser: state => state.user,\n    selectIsLoggedIn: state => state.isLoggedIn,\n    selectToken: state => state.isLoggedIn,\n    selectIsRefresh: state => state.isRefresh,\n    selectBalance: state => state.balance,\n  },\n  reducers: {\n    logout: state => {\n      return initialState;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(logoutThunk.fulfilled, state => {\n        return initialState;\n      })\n      .addCase(refreshThunk.fulfilled, (state, { payload }) => {\n        state.user.username = payload.username;\n        state.user.email = payload.email;\n        state.balance = payload.balance;\n        state.isLoggedIn = true;\n        state.isRefresh = false;\n        state.loading = false;\n      })\n\n      .addMatcher(\n        isAnyOf(registerThunk.fulfilled, loginThunk.fulfilled),\n        (state, { payload }) => {\n          state.user.username = payload.user.username;\n          state.user.email = payload.user.email;\n          state.user.password = payload.user.password;\n          state.token = payload.token;\n          state.isLoggedIn = true;\n          state.loading = false;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          registerThunk.pending,\n          loginThunk.pending,\n          refreshThunk.pending\n        ),\n        state => {\n          state.loading = true;\n          state.error = null;\n          state.isRefresh = true;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          registerThunk.rejected,\n          loginThunk.rejected,\n          refreshThunk.rejected\n        ),\n        (state, { payload }) => {\n          state.error = payload;\n          state.loading = false;\n          state.isRefresh = false;\n        }\n      );\n  },\n});\n\nexport const authReducer = slice.reducer;\nexport const {\n  selectIsLoggedIn,\n  selectUser,\n  selectToken,\n  selectIsRefresh,\n  selectBalance,\n} = slice.selectors;\nexport const { logout } = slice.actions;\n","import React from 'react';\n\nimport s from './Exit.module.css';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../redux/auth/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { logoutThunk } from '../../redux/auth/operations';\n\nexport const Exit = ({ closeModal }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    dispatch(logoutThunk());\n    dispatch(logout());\n    closeModal();\n    navigate('/login');\n  };\n  return (\n    <div className={s.wrap}>\n      <a href=\"\" className={s.logo}>\n        <svg width=\"36\" height=\"36\">\n          <use href=\"../../img/sprite.svg#icon-logo\"></use>\n        </svg>\n        Money Guard\n      </a>\n      <p className={s.text}>Are you sure you want to log out?</p>\n\n      <button className=\"modalButtonColor\" onClick={onLogout}>\n        Logout\n      </button>\n      <button className=\"modalButton\" onClick={closeModal}>\n        Cancel\n      </button>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal');\n\nconst Modal = ({ closeModal, children }) => {\n  const handleKeyDown = useCallback(\n    e => {\n      if (e.key === 'Escape') {\n        closeModal();\n      }\n    },\n    [closeModal]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal, handleKeyDown]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n  return ReactDOM.createPortal(\n    <div onClick={handleBackdropClick} className={s.modalWrapper}>\n      <div className={s.modalContent}>\n        <button className={s.closeButton} onClick={closeModal}>\n          <svg width=\"16\" height=\"16\">\n            <use href=\"../../img/sprite.svg#icon-close\"></use>\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react'\n\nexport const useModal = () => {\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst close = () => setIsOpen(false)\n\tconst open = () => setIsOpen(true)\n\tconst toggle = () => setIsOpen(prev => !prev)\n\treturn { isOpen, close, open, toggle }\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n\nimport { Exit } from '../Exit/Exit';\nimport Modal from '../Modal/Modal';\n\nimport { selectUser } from '../../redux/auth/authSlice';\nimport { useModal } from '../../hooks/useModal';\nimport s from './Header.module.css';\n\nexport const Header = () => {\n  const { isOpen, toggle } = useModal();\n\n  const user = useSelector(selectUser);\n\n  const index = user.email.indexOf('@');\n  const userEmail = user.email.slice(0, index);\n\n  return (\n    <header className={s.header}>\n      <div className={s.hederContainer}>\n        {/* <Link to=\"/\" className={s.logo}> */}\n        <a href=\"\" className={s.logo}>\n          <svg width=\"24\" height=\"23\">\n            <use href=\"../../img/sprite.svg#icon-logo\"></use>\n          </svg>\n          Money Guard\n        </a>\n        {/* </Link > */}\n        <div className={s.wrap}>\n          {' '}\n          <p className={s.user}>{userEmail}</p>\n          <button className={s.button} onClick={toggle}>\n            <svg width=\"18\" height=\"18\" className={s.icon}>\n              <use href=\"../../img/sprite.svg#icon-exit\"></use>\n            </svg>{' '}\n            Exit\n          </button>\n        </div>\n        {isOpen && (\n          <Modal closeModal={toggle}>\n            <Exit closeModal={toggle} />\n          </Modal>\n        )}\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { Header } from './Header/Header';\n\nexport const Layout = () => {\n  return (\n    <>\n      <Header />\n      <Outlet />\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nexport const registerSchema = yup\n  .object({\n    username: yup.string().required(),\n    password: yup\n      .string()\n      .required()\n      .min(6, 'Must be more then 6 symbols')\n      .max(12, 'Must be less then 12 symbols'),\n    email: yup.string().required().email('Email is not valid'),\n    passwordConfirmation: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'Passwords must match'),\n  })\n  .required();\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Login_RegisterForm from '../../components/LoginRegisterForm/LoginRegisterForm';\nimport { registerThunk } from '../../redux/auth/operations';\nimport { registerSchema } from '../../Schemas/registerShema';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigate();\n  const handleSubmit = data => {\n    dispatch(registerThunk(data))\n      .unwrap()\n      .then(() => {\n        navigation('/login');\n      })\n      .catch(error => {\n        console.log(error);\n        toast(error);\n      });\n  };\n\n  return (\n    <div>\n      <Login_RegisterForm\n        onDataSubmit={handleSubmit}\n        formType={'register'}\n        schema={registerSchema}\n      />\n    </div>\n  );\n};\n\nexport default Register;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { walletApi } from '../../axiosConfig/walletApi';\n\nexport const fetchTransactionsDataThunk = createAsyncThunk(\n  'fetchTransactionsData',\n  async (_, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get('transactions');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const deleteTransactionThunk = createAsyncThunk(\n  'deleteTransaction',\n  async (id, thunkAPI) => {\n    try {\n      await walletApi.delete(`transactions/${id}`);\n      return id;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const addTransactionThunk = createAsyncThunk(\n  'addTransaction',\n  async (body, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('transactions', body);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const editTransactionThunk = createAsyncThunk(\n  'editTransaction',\n  async (body, thunkAPI) => {\n    try {\n      const { data } = await walletApi.patch(\n        `/transactions/${body.id}`,\n        body.content\n      );\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchTransactionCategoriesThunk = createAsyncThunk(\n  'fetchTransactionCategories',\n  async (_, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get('transaction-categories');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchTransactionSummaryControllerThunk = createAsyncThunk(\n  'fetchTransactionSummaryController',\n  async (query, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get(\n        `transactions-summary?month=${query.month}&year=${query.year}`\n      );\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  addTransactionThunk,\n  deleteTransactionThunk,\n  editTransactionThunk,\n  fetchTransactionCategoriesThunk,\n  fetchTransactionsDataThunk,\n  fetchTransactionSummaryControllerThunk,\n} from './operations';\n\nconst initialState = {\n  transactionsList: [],\n  transactionCategories: [],\n  categoriesSummary: [],\n  expenseSummary: 0,\n  incomeSummary: 0,\n  month: new Date().getMonth() + 1,\n  year: new Date().getFullYear(),\n  periodTotal: 0,\n  loading: false,\n  error: false,\n};\n\nconst transactionsSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  selectors: {\n    selectTransactions: state => state.transactionsList,\n    selectIsLoading: state => state.loading,\n    selectIsError: state => state.error,\n    selectTransactionCategories: state => state.transactionCategories,\n    selectMonth: state => state.month,\n    selectYear: state => state.year,\n    selectCategoriesSummary: state => state.categoriesSummary,\n    selectExpenseSummary: state => state.expenseSummary,\n    selectIncomeSummary: state => state.incomeSummary,\n    selectPeriodTotal: state => state.periodTotal,\n  },\n  reducers: {\n    selectedYear: (state, { payload }) => {\n      state.year = payload;\n    },\n    selectedMonth: (state, { payload }) => {\n      state.month = payload;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchTransactionsDataThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList = payload;\n        state.loading = false;\n      })\n      .addCase(deleteTransactionThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList = state.transactionsList.filter(\n          transaction => transaction.id !== payload\n        );\n        state.loading = false;\n      })\n      .addCase(addTransactionThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList.push(payload);\n        state.loading = false;\n      })\n      .addCase(editTransactionThunk.fulfilled, (state, { payload }) => {\n        const transactionIndex = state.transactionsList.findIndex(\n          transaction => transaction.id === payload.id\n        );\n        state.transactionsList.splice(transactionIndex, 1, payload);\n        state.loading = false;\n      })\n      .addCase(\n        fetchTransactionCategoriesThunk.fulfilled,\n        (state, { payload }) => {\n          state.transactionCategories = payload;\n          state.loading = false;\n        }\n      )\n      .addCase(\n        fetchTransactionSummaryControllerThunk.fulfilled,\n        (state, { payload }) => {\n          state.categoriesSummary = payload.categoriesSummary;\n          state.expenseSummary = payload.expenseSummary;\n          state.incomeSummary = payload.incomeSummary;\n          state.periodTotal = payload.periodTotal;\n          state.loading = false;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          fetchTransactionsDataThunk.pending,\n          deleteTransactionThunk.pending,\n          addTransactionThunk.pending,\n          editTransactionThunk.pending,\n          fetchTransactionCategoriesThunk.pending,\n          fetchTransactionSummaryControllerThunk.pending\n        ),\n        (state, { payload }) => {\n          state.loading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          fetchTransactionsDataThunk.rejected,\n          deleteTransactionThunk.rejected,\n          addTransactionThunk.rejected,\n          editTransactionThunk.rejected,\n          fetchTransactionCategoriesThunk.rejected,\n          fetchTransactionSummaryControllerThunk.rejected\n        ),\n        (state, { payload }) => {\n          state.error = payload;\n          state.loading = false;\n        }\n      );\n  },\n});\n\nexport const transactionsReducer = transactionsSlice.reducer;\nexport const { selectedYear, selectedMonth } = transactionsSlice.actions;\nexport const {\n  selectTransactions,\n  selectIsLoading,\n  selectIsError,\n  selectTransactionCategories,\n  selectYear,\n  selectMonth,\n  selectCategoriesSummary,\n  selectExpenseSummary,\n  selectIncomeSummary,\n  selectPeriodTotal,\n} = transactionsSlice.selectors;\n","export default \"__VITE_ASSET__4192010f__\"","import React from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const useDashboard = () => {\n  const isBigScreenOrTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 768px)' });\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' });\n  const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' });\n  return {\n    isBigScreenOrTablet,\n    isBigScreen,\n    isMobile,\n    isTabletOrMobile,\n    isPortrait,\n    isRetina,\n  };\n};\n","import React from 'react';\nimport s from './TransactionsItem.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTransactionThunk } from '../../../redux/transactions/operations';\nimport { selectTransactionCategories } from '../../../redux/transactions/transactionsSlice';\nimport sprite from '../../../img/sprite.svg';\nimport { useDashboard } from '../../../hooks/useDashboard';\n\nconst TransactionsItem = ({ transaction, handleEditItem }) => {\n  const { id, transactionDate, type, categoryId, comment, amount } = transaction;\n\n  const { isBigScreenOrTablet, isMobile } = useDashboard();\n\n  const dispatch = useDispatch();\n  const categories = useSelector(selectTransactionCategories);\n\n  function getCategoryName(id) {\n    const category = categories.find(category => category.id === id);\n    return category ? category.name : 'Unknown Category';\n  }\n\n  const handleDeleteTransaction = id => {\n    dispatch(deleteTransactionThunk(id));\n  };\n\n  const signType = type.toLowerCase() === 'income' ? '+' : '-';\n\n  const transactionBorderColor =\n    type.toLowerCase() === 'income' ? s.income_border : s.expense_border;\n\n  const transactionTextColor =\n    type.toLowerCase() === 'income' ? s.income_text : s.expense_text;\n\n  return (\n    <>\n      {isMobile && (\n        <li\n          key={id}\n          className={`${s.transaction_item} ${transactionBorderColor}`}\n        >\n          <table className={s.transactions_table_mobile}>\n            <tbody>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Date</td>\n                <td>{transactionDate}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Type</td>\n                <td>{signType}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Category</td>\n                <td>{getCategoryName(categoryId)}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Comment</td>\n                <td>{comment}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Sum</td>\n                <td className={transactionTextColor}>{amount}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td>\n                  <button\n                    className={s.btn_delete}\n                    onClick={() => handleDeleteTransaction(id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n                <td>\n                  <button\n                    onClick={() =>\n                      handleEditItem({ categoryId, type, amount, comment, transactionDate }, id)} className={s.btn_edit}>\n                    {' '}\n                    <svg className={s.icon_edit}>\n                      <use xlinkHref={`${sprite}#icon-edit`} />\n                    </svg>{' '}\n                     Edit\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </li>\n      )}\n      {isBigScreenOrTablet && (\n        <tr className={s.transaction_row}>\n          <td className={s.transaction_colum}>{transactionDate}</td>\n          <td className={s.transaction_colum} style={{ textAlign: 'center' }}>\n            {signType}\n          </td>\n          <td className={s.transaction_colum}>{getCategoryName(categoryId)}</td>\n          <td className={s.transaction_colum}>{comment}</td>\n          <td\n            className={`${s.transaction_colum} ${transactionTextColor}`}\n            style={{ textAlign: 'right' }}\n          >\n            {amount}\n          </td>\n          <td className={s.transaction_colum}>\n            {' '}\n            <div className={s.btn_wrapper}>\n              <button onClick={() => handleEditItem({ categoryId, type, amount, comment, transactionDate }, id)} className={s.btn_edit}>Edit</button>\n              <button\n                className={s.btn_delete}\n                onClick={() => handleDeleteTransaction(id)}\n              >\n                Delete\n              </button>\n            </div>\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nexport default TransactionsItem;\n","import React, { useState } from 'react';\nimport styles from './TransactionSwitcher.module.css';\n\nconst TransactionSwitcher = ({ onChange }) => {\n  const [isIncome, setIsIncome] = useState(false);\n\n  const handleSwitch = () => {\n    setIsIncome(!isIncome);\n    onChange(!isIncome);\n  };\n  return (\n    <div className={styles['transaction-switcher']}>\n      <span className={styles.labelIncome}>Income</span>\n\n      <label\n        className={`${styles.switch} ${\n          isIncome ? styles.income : styles.expense\n        }`}\n      >\n        <input type=\"checkbox\" onChange={handleSwitch} checked={!isIncome} />\n        <span className={`${styles.slider} ${styles.round}`}></span>\n      </label>\n      <span className={styles.labelExpense}>Expense</span>\n    </div>\n  );\n};\n\nexport default TransactionSwitcher;\n","\nconst addLeadingZero = number => {\n    return number < 10 ? '0' + number : number;\n  };\n  export const formatDate = (date)=>{\n  const year = date.getFullYear();\n  const month = addLeadingZero(date.getMonth() + 1);\n  const day = addLeadingZero(date.getDate());\n  const formattedDate = `${year}-${month}-${day}`;\n  return formattedDate\n  }\n\n","import React from 'react';\nimport s from \"../Form.module.css\"\n\nconst FormInput = ({ name, register, errors, placeholder, className }) => {\n  return (\n    <div className={s.inputContainer}>\n      <input\n        className={className}\n        {...register(name)}\n        placeholder={placeholder}\n      />\n      {errors[name] && <span>{errors[name].message}</span>}\n    </div>\n  );\n};\n\nexport default FormInput;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useForm } from 'react-hook-form';\nimport TransactionSwitcher from './TransactionSwitcher/TransactionSwitcher';\nimport s from './Form.module.css';\nimport { formatDate } from '../../helpers/addLeadingzero';\nimport Select from 'react-select';\nimport FormInput from './FormFields/FormFields';\n//import { yupResolver } from '@hookform/resolvers/yup';\nimport { useDashboard } from '../../hooks/useDashboard';\n\nexport function Form({\n  content,\n  categories,\n  toggle,\n  typeForm,\n  onDataSubmit,\n}) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n  } = useForm();\n\n  const [selectedOption, setSelectedOption] = useState('');\n  const [type, setType] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n\n  useEffect(() => {\n    content ? setType(content.type) : setType('EXPENSE');\n  }, [content]);\n\n  useEffect(() => {\n    setValue('amount', content && content.amount);\n  }, [content, setValue]);\n\n  useEffect(() => {\n    setValue('comment', content && content.comment);\n  }, [content, setValue]);\n\n  const categoriesValues = useMemo(() => {\n    return categories.map(({ id, name }) => {\n      return { value: id, label: name };\n    });\n  }, [categories]);\n\n  const defaultValue = useMemo(() => {\n    return categoriesValues.find(option => {\n      return content?.categoryId === option.value;\n    });\n  }, [content, categoriesValues]);\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n  const submit = data => {\n    if (typeForm === 'add') {\n      onDataSubmit({\n        transactionDate: formatDate(startDate),\n        amount: +data.amount,\n        comment: data.comment,\n        type: type,\n        categoryId:\n          type === 'EXPENSE'\n            ? selectedOption.value || categoriesValues[0].value\n            : '063f1132-ba5d-42b4-951d-44011ca46262',\n      });\n    } else {\n      onDataSubmit({\n        transactionDate: formatDate(startDate),\n        amount: +data.amount,\n        comment: data.comment,\n      });\n    }\n  };\n  const toggleTransaction = type => {\n    if (type) {\n      setType('INCOME');\n    } else {\n      setType('EXPENSE');\n    }\n  };\n  return (\n    <div>\n      <form className={s.formWrapper} onSubmit={handleSubmit(submit)}>\n        <h1 className={s.header}>\n          {typeForm === 'add' ? 'Add transaction' : 'Edit transaction'}\n        </h1>\n        {typeForm === 'add' ? (\n          <TransactionSwitcher onChange={toggleTransaction} />\n        ) : (\n          <div>\n            <ul className={s.checkBox}>\n              <li\n                onClick={() => {\n                  if (!(typeForm === 'edit' && type === 'EXPENSE')) {\n                    toggleTransaction(true);\n                  }\n                }}\n                className={\n                  content.type === 'INCOME' || type === 'INCOME'\n                    ? s.activeIncome\n                    : ''\n                }\n                disabled={typeForm === 'edit' && type === 'EXPENSE'}\n              >\n                {' '}\n                Income\n              </li>\n              <span>/</span>\n              <li\n                onClick={() => {\n                  if (!(typeForm === 'edit' && type === 'INCOME')) {\n                    toggleTransaction(false);\n                  }\n                }}\n                className={type === 'EXPENSE' ? s.activeExpense : ''}\n                disabled={typeForm === 'edit' && type === 'INCOME'}\n              >\n                {' '}\n                Expense{' '}\n              </li>\n            </ul>\n          </div>\n        )}\n        <div>\n          {type === 'EXPENSE' && (\n            <div className={s.inputContainer}>\n              <Select\n                name=\"category\"\n                //className={s.selectExpense}\n                options={categoriesValues}\n                defaultValue={defaultValue ? defaultValue : categoriesValues[0]}\n                onChange={handleChange}\n                isDisabled={typeForm === 'edit'}\n              />\n            {errors['category'] && <span>{errors['category'].message}</span>}\n            </div>\n          )}\n\n          <div className={s.boxDate}>\n            <FormInput\n              className={s.incomeInput}\n              name=\"amount\"\n              placeholder=\"0.00\"\n              errors={errors}\n              register={register}\n            />\n\n            <div className={s.inputContainer}>\n              <DatePicker\n                className={s.customInput}\n                selected={content ? content.transactionDate : startDate}\n                onChange={date => {\n                  setValue('transactionDate', date);\n                  setStartDate(date);\n                }}\n              />\n              {errors['transactionDate'] && (\n                <span>{errors['transactionDate'].message}</span>\n              )}\n            </div>\n          </div>\n          \n          <FormInput\n            className={s.comment}\n            name=\"comment\"\n            placeholder=\"Comment\"\n            errors={errors}\n            register={register}\n          />\n\n          <div className={s.btnBox}>\n            <button className={s.btn}>\n              {typeForm === 'add' ? 'ADD' : 'EDIT'}\n            </button>\n            <button type=\"button\" onClick={toggle} className={s.btn}>\n              CANCEL\n            </button>\n          </div>\n\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Form } from '../Form';\nimport { editTransactionThunk } from '../../../redux/transactions/operations';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function EditTransactionForm({ categories, editContent, toggle }) {\n  const dispatch = useDispatch();\n\n  const handleSubmit = data => {\n    dispatch(editTransactionThunk({ content:{...data}, id:editContent.id }))\n      .unwrap()\n      .then(data => {\n        toast.success(`Changed!`);\n        toggle()\n      })\n      .catch(err => {\n        toast.error('Credentials is not valid!');\n      });\n  };\n\n  return (\n    <Form\n      toggle={toggle}\n      content={editContent.content}\n      categories={categories}\n      onDataSubmit={handleSubmit}\n      typeForm=\"edit\"\n    />\n  );\n}\n","import React from 'react';\nimport { Form } from '../Form';\nimport { useDispatch } from 'react-redux';\nimport { addTransactionThunk } from '../../../redux/transactions/operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function AddTransactionForm({ categories, toggle }) {\n  const dispatch = useDispatch()\n  \n  const handleSubmit = data => {\n    dispatch(addTransactionThunk(data)).unwrap()\n      .then(() => {\n        toast.success(\"Transaction was successfully added\")   \n        toggle()\n      }) .catch(err => {\n        toast.error('Credentials is not valid!');\n      });\n  }\n  return (\n<Form  categories={categories} onDataSubmit={handleSubmit} toggle={toggle} typeForm=\"add\"/>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport {\n  fetchTransactionsDataThunk,\n  fetchTransactionCategoriesThunk,\n} from '../../redux/transactions/operations';\nimport {\n  selectTransactionCategories,\n  selectTransactions,\n} from '../../redux/transactions/transactionsSlice';\nimport TransactionsItem from './TransactionItem/TransactionsItem.jsx';\nimport s from './TransactionList.module.css';\nimport { useModal } from '../../hooks/useModal.jsx';\nimport Modal from '../Modal/Modal.jsx';\nimport { EditTransactionForm } from '../Form/EditTransactionForm/EditTransactionForm.jsx';\nimport { AddTransactionForm } from '../Form/AddTransactionForm/AddTransactionForm.jsx';\nimport sprite from '../../img/sprite.svg';\nimport { useDashboard } from '../../hooks/useDashboard';\n\nconst TransactionsList = () => {\n  const { isOpen, toggle } = useModal();\n  const [editContent, setEditContent] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionsDataThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchTransactionCategoriesThunk());\n  }, [dispatch]);\n\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectTransactionCategories);\n\n  const { isBigScreenOrTablet, isMobile } = useDashboard();\n\n  const handleEditItem = (content, id, name) => {\n    toggle();\n    setEditContent({ content, id, name });\n  };\n  const handleAddItem = () => {\n    toggle();\n    setEditContent(null);\n  };\n  return (\n    <section className={s.transactions_section}>\n      <div className={s.transactions_container}>\n        {isMobile && (\n          <ul className={s.transactions_list}>\n            {transactions.length > 0 ? (\n              transactions.map(transaction => (\n                <TransactionsItem\n                  handleEditItem={handleEditItem}\n                  key={transaction.id}\n                  transaction={transaction}\n                />\n              ))\n            ) : (\n              <div className={s.empty_transactions}>No transactions</div>\n            )}\n          </ul>\n        )}\n        {isBigScreenOrTablet && (\n          <>\n            {transactions.length > 0 ? (\n              <table className={s.transactions_table}>\n                <thead>\n                  <tr className={s.transaction_row_head}>\n                    <th>Date</th>\n                    <th style={{ textAlign: 'center' }}>Type</th>\n                    <th>Category</th>\n                    <th>Comment</th>\n                    <th style={{ textAlign: 'right' }}>Sum</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody className={s.table_body}>\n                  {transactions.map(transaction => (\n                    <TransactionsItem\n                     handleEditItem={handleEditItem}\n                      key={transaction.id}\n                      transaction={transaction}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <>\n                <table className={s.transactions_table}>\n                  <thead>\n                    <tr className={s.transaction_row_head}>\n                      <th>Date</th>\n                      <th style={{ textAlign: 'center' }}>Type</th>\n                      <th>Category</th>\n                      <th>Comment</th>\n                      <th style={{ textAlign: 'right' }}>Sum</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                </table>\n                <div className={s.empty_transactions}>No transactions</div>\n              </>\n            )}\n          </>\n        )}\n\n        <button onClick={()=>handleAddItem()} className={s.btn_add}>\n          {' '}\n          <svg className={s.icon_plus}>\n            <use xlinkHref={`${sprite}#icon-plus`} />\n          </svg>\n        </button>\n      </div>\n      {isOpen && (\n        <Modal closeModal={toggle}>\n          {editContent ? (\n            <EditTransactionForm\n              editContent={editContent}\n              categories={categories}\n              toggle={toggle}\n            />\n          ) : (\n            <AddTransactionForm categories={categories} toggle={toggle} />\n          )}\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default TransactionsList;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport TransactionsList from '../../components/Transactions/TransactionsList';\nimport {\n  fetchTransactionCategoriesThunk,\n  fetchTransactionsDataThunk,\n} from '../../redux/transactions/operations';\n\nconst HomeTab = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionsDataThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchTransactionCategoriesThunk());\n  }, [dispatch]);\n\n  return <TransactionsList />;\n};\n\nexport default HomeTab;\n","import React, { useEffect } from 'react';\nimport Login from '../pages/Login/Login';\nimport { Route, Routes } from 'react-router-dom';\nimport { Layout } from './Layout';\nimport Register from '../pages/Register/Register';\nimport StatisticsTab from '../pages/StatisticsTab/StatisticsTab';\nimport 'modern-normalize';\nimport { refreshThunk } from '../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport HomeTab from '../pages/HomeTab/HomeTab';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(refreshThunk());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"register\" element={<Register />} />\n          <Route path=\"home\" element={<HomeTab />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchCurrencyRate = createAsyncThunk('currency/fetchCurrencyRate', async () => {\n  const savedData = localStorage.getItem('currencyRate');\n  const savedTime = localStorage.getItem('lastFetchTime');\n\n  if (savedData && savedTime) {\n    const currentTime = new Date().getTime();\n    const timeDifference = (currentTime - savedTime) / (1000 * 60 * 60);\n\n    if (timeDifference < 1) {\n      return JSON.parse(savedData);\n    }\n  }\n\n  try {\n    const response = await axios.get('https://api.monobank.ua/bank/currency');\n\n    localStorage.setItem('currencyRate', JSON.stringify(response.data));\n    localStorage.setItem('lastFetchTime', new Date().getTime().toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при виконанні запиту до Monobank:', error);\n  }\n});","import { createSlice } from '@reduxjs/toolkit';\nimport { fetchCurrencyRate } from './operations';\nconst initialState = {\n  usdRate: null,\n  eurRate: null,\n  lastFetchTime: null,\n};\nconst currencySlice = createSlice({\n  name: 'currency',\n  initialState,\n  selectors: {\n    selectUsdRate: state => state.usdRate,\n    selectEurRate: state => state.eurRate,\n    selectLastFetchTime: state => state.lastFetchTime,\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCurrencyRate.fulfilled, (state, { payload }) => {\n      state.usdRate = payload.find(\n        rate => rate.currencyCodeA === 840 && rate.currencyCodeB === 980\n      );\n      state.eurRate = payload.find(\n        rate => rate.currencyCodeA === 978 && rate.currencyCodeB === 980\n      );\n      state.lastFetchTime = new Date().getTime().toString();\n    });\n  },\n});\n\nexport const currencyReducer = currencySlice.reducer;\nexport const { selectUsdRate, selectEurRate, selectLastFetchTime } =\n  currencySlice.selectors;\n","import { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport { authReducer } from './auth/authSlice';\nimport { transactionsReducer } from './transactions/transactionsSlice';\nimport { currencyReducer } from '../redux/currencyRate/currencyRateSlice';\n\nconst persistConfig = {\n  key: 'auth',\n  version: 1,\n  storage,\n  whitelist: ['token'],\n};\n\nconst currencyPersistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authReducer),\n    transactions: transactionsReducer,\n     currency:  persistReducer(\n  currencyPersistConfig,\n  currencyReducer\n),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store)","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './components/App';\n\nimport { persistor, store } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n        <ToastContainer autoClose={1500} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>\n);\n\n//<React.StrictMode></React.StrictMode>\n"],"names":["InputField","register","errors","name","placeholder","className","React","s","ProgressBar","password","PasswordStrengthBar","PassInputField","getValues","formType","type","setType","useState","confPassword","setConfPassword","handleChange","e","value","PiEyeClosedThin","PiEyeThin","LoginRegisterForm","onDataSubmit","schema","size","setSize","useEffect","handleResize","reset","handleSubmit","useForm","yupResolver","submit","dataS","passwordConfirmation","data","NavLink","walletApi","axios","setToken","token","removeToken","registerThunk","createAsyncThunk","credentials","thunkAPI","error","loginThunk","logoutThunk","_","refreshThunk","thunkApi","savedToken","loginSchema","yup\n  .object","yup\n      .string","yup.string","Login","navigate","useNavigate","dispatch","useDispatch","toast","values","initialState","slice","createSlice","state","builder","payload","isAnyOf","authReducer","selectIsLoggedIn","selectUser","selectToken","selectIsRefresh","selectBalance","logout","Exit","closeModal","onLogout","modalRoot","Modal","children","handleKeyDown","useCallback","handleBackdropClick","ReactDOM","useModal","isOpen","setIsOpen","prev","Header","toggle","user","useSelector","index","userEmail","Layout","Outlet","registerSchema","yup.ref","Register","navigation","Login_RegisterForm","fetchTransactionsDataThunk","deleteTransactionThunk","id","addTransactionThunk","body","editTransactionThunk","fetchTransactionCategoriesThunk","fetchTransactionSummaryControllerThunk","query","transactionsSlice","transaction","transactionIndex","transactionsReducer","selectTransactions","selectIsLoading","selectIsError","selectTransactionCategories","selectYear","selectMonth","selectCategoriesSummary","selectExpenseSummary","selectIncomeSummary","selectPeriodTotal","sprite","useDashboard","isBigScreenOrTablet","useMediaQuery","isBigScreen","isTabletOrMobile","isMobile","isPortrait","isRetina","TransactionsItem","handleEditItem","transactionDate","categoryId","comment","amount","categories","getCategoryName","category","handleDeleteTransaction","signType","transactionBorderColor","transactionTextColor","TransactionSwitcher","onChange","isIncome","setIsIncome","handleSwitch","styles","addLeadingZero","number","formatDate","date","year","month","day","FormInput","Form","content","typeForm","setValue","selectedOption","setSelectedOption","startDate","setStartDate","categoriesValues","useMemo","defaultValue","option","toggleTransaction","Select","DatePicker","EditTransactionForm","editContent","err","AddTransactionForm","TransactionsList","setEditContent","transactions","handleAddItem","HomeTab","App","Routes","Route","fetchCurrencyRate","savedData","savedTime","response","currencySlice","rate","currencyReducer","persistConfig","storage","currencyPersistConfig","store","configureStore","persistReducer","getDefaultMiddleware","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","BrowserRouter","Provider","PersistGate","ToastContainer"],"mappings":"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"}