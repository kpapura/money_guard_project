{"version":3,"file":"commonHelpers.js","sources":["../src/axiosConfig/walletApi.js","../src/redux/auth/operations.js","../src/redux/transactions/operations.js","../src/redux/auth/authSlice.js","../src/components/Exit/Exit.jsx","../src/components/Modal/Modal.jsx","../src/hooks/useModal.jsx","../src/img/sprite.svg","../src/hooks/useDashboard.jsx","../src/components/Header/Header.jsx","../src/hooks/useResize.js","../src/components/NavBar/NavBar.jsx","../src/components/Balance/Balance.jsx","../src/redux/currencyRate/operations.js","../src/redux/currencyRate/currencyRateSlice.js","../src/components/CurrencyRates/CurrencyImages.jsx","../src/components/CurrencyRates/CurrenceRate.jsx","../src/components/Loader/Loader.jsx","../src/components/Layout/Layout.jsx","../src/components/LoginRegisterForm/InputField.jsx","../src/components/LoginRegisterForm/ProgressBar.jsx","../src/components/LoginRegisterForm/PassInputField.jsx","../src/components/LoginRegisterForm/LoginRegisterForm.jsx","../src/Schemas/loginShema.js","../src/pages/Login/Login.jsx","../src/Schemas/registerShema.js","../src/pages/Register/Register.jsx","../src/redux/transactions/transactionsSlice.js","../src/components/Form/TransactionSwitcher/TransactionSwitcher.jsx","../src/components/Form/FormFields/FormFields.jsx","../src/helpers/addLeadingzero.js","../src/components/Form/Form.jsx","../src/Schemas/EditTransactionShema.js","../src/components/Form/EditTransactionForm/EditTransactionForm.jsx","../src/Schemas/addTransactionShema.js","../src/components/Form/AddTransactionForm/AddTransactionForm.jsx","../src/components/Transactions/TransactionItem/TransactionsItem.jsx","../src/components/Transactions/TransactionsList.jsx","../src/pages/HomeTab/HomeTab.jsx","../src/pages/StatisticsTab/StatisticsDashboard/StatisticsDashboard.jsx","../src/pages/StatisticsTab/StatisticsTable/StatisticsTable.jsx","../src/pages/StatisticsTab/Chart/Chart.jsx","../src/pages/StatisticsTab/StatisticsTab.jsx","../src/authRoutes/PrivateRoute.jsx","../src/authRoutes/RestrictedRoute.jsx","../src/components/App.jsx","../src/redux/store.js","../src/index.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const walletApi = axios.create({\n  baseURL: 'https://wallet.b.goit.study/api/',\n});\n\nexport const setToken = token => {\n  walletApi.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\nexport const removeToken = () => {\n  walletApi.defaults.headers.common.Authorization = ``;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { walletApi, setToken, removeToken } from '../../axiosConfig/walletApi';\n\nexport const registerThunk = createAsyncThunk(\n  'register',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('auth/sign-up', credentials);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data.message);\n    }\n  }\n);\n\nexport const loginThunk = createAsyncThunk(\n  'login',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('auth/sign-in', credentials);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      console.log(error);\n      return thunkAPI.rejectWithValue(error.response.data.message);\n    }\n  }\n);\n\nexport const logoutThunk = createAsyncThunk('logout', async (_, thunkAPI) => {\n  try {\n    const { data } = await walletApi.delete('auth/sign-out');\n    removeToken();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nexport const refreshThunk = createAsyncThunk('refresh', async (_, thunkApi) => {\n  const savedToken = thunkApi.getState().auth.token;\n  if (!savedToken) {\n    return thunkApi.rejectWithValue('Token is not exist!');\n  }\n  try {\n    setToken(savedToken);\n    const { data } = await walletApi.get('users/current');\n    console.log(data);\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\n\nexport const getBalanceThunk = createAsyncThunk(\n  'getBalance',\n  async (_, thunkApi) => {\n    try {\n      const { data } = await walletApi.get('users/current');\n      return data;\n    } catch (error) {\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { walletApi } from '../../axiosConfig/walletApi';\nimport { refreshThunk } from '../auth/operations';\n\nexport const fetchTransactionsDataThunk = createAsyncThunk(\n  'fetchTransactionsData',\n  async (_, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get('transactions');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const deleteTransactionThunk = createAsyncThunk(\n  'deleteTransaction',\n  async (transaction, thunkAPI) => {\n    try {\n      await walletApi.delete(`transactions/${transaction.id}`);\n      return transaction;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const addTransactionThunk = createAsyncThunk(\n  'addTransaction',\n  async (body, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('transactions', body);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const editTransactionThunk = createAsyncThunk(\n  'editTransaction',\n  async (body, thunkAPI) => {\n    try {\n      const { data } = await walletApi.patch(\n        `/transactions/${body.id}`,\n        body.content\n      );\n      thunkAPI.dispatch(refreshThunk());\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchTransactionCategoriesThunk = createAsyncThunk(\n  'fetchTransactionCategories',\n  async (_, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get('transaction-categories');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchTransactionSummaryControllerThunk = createAsyncThunk(\n  'fetchTransactionSummaryController',\n  async (query, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get(\n        `transactions-summary?month=${query.month}&year=${query.year}`\n      );\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  getBalanceThunk,\n  loginThunk,\n  logoutThunk,\n  refreshThunk,\n  registerThunk,\n} from './operations';\nimport {\n  addTransactionThunk,\n  deleteTransactionThunk,\n} from '../transactions/operations';\n\nconst initialState = {\n  user: {\n    username: '',\n    email: '',\n  },\n  token: null,\n  loading: false,\n  error: false,\n  isLoggedIn: false,\n  isRefresh: false,\n  balance: 0,\n};\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState,\n  selectors: {\n    selectUser: state => state.user,\n    selectIsLoggedIn: state => state.isLoggedIn,\n    selectToken: state => state.isLoggedIn,\n    selectIsRefresh: state => state.isRefresh,\n    selectBalance: state => state.balance,\n    selectIsLoading: state => state.loading,\n  },\n  reducers: {\n    logout: state => {\n      return initialState;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getBalanceThunk.fulfilled, (state, { payload }) => {\n        state.balance = payload.balance;\n      })\n      .addCase(addTransactionThunk.fulfilled, (state, { payload }) => {\n        state.balance = state.balance + payload.amount;\n      })\n      .addCase(deleteTransactionThunk.fulfilled, (state, { payload }) => {\n        state.balance = state.balance - payload.amount;\n      })\n      .addCase(logoutThunk.fulfilled, state => {\n        return initialState;\n      })\n      .addCase(refreshThunk.fulfilled, (state, { payload }) => {\n        state.user.username = payload.username;\n        state.user.email = payload.email;\n        state.balance = payload.balance;\n        state.isLoggedIn = true;\n        state.loading = false;\n        state.isRefresh = false;\n        state.loading = false;\n      })\n\n      .addMatcher(\n        isAnyOf(registerThunk.fulfilled, loginThunk.fulfilled),\n        (state, { payload }) => {\n          state.user.username = payload.user.username;\n          state.user.email = payload.user.email;\n          state.user.password = payload.user.password;\n          state.token = payload.token;\n          state.loading = false;\n          state.isLoggedIn = true;\n          state.loading = false;\n          state.isRefresh = false;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          registerThunk.pending,\n          loginThunk.pending,\n          refreshThunk.pending\n        ),\n        state => {\n          state.loading = true;\n          state.error = null;\n          state.isRefresh = true;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          registerThunk.rejected,\n          loginThunk.rejected,\n          refreshThunk.rejected\n        ),\n        (state, { payload }) => {\n          state.error = payload;\n          state.loading = false;\n          state.isRefresh = false;\n        }\n      );\n  },\n});\n\nexport const authReducer = slice.reducer;\nexport const {\n  selectIsLoggedIn,\n  selectUser,\n  selectToken,\n  selectIsRefresh,\n  selectBalance,\n  selectIsLoading,\n} = slice.selectors;\nexport const { logout } = slice.actions;\n","import React from 'react';\n\nimport s from './Exit.module.css';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../redux/auth/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { logoutThunk } from '../../redux/auth/operations';\n\nexport const Exit = ({ closeModal }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    dispatch(logoutThunk());\n    dispatch(logout());\n    closeModal();\n    navigate('/');\n  };\n  return (\n    <div className={s.wrap}>\n      <a href=\"\" className={s.logo}>\n        <svg width=\"36\" height=\"36\">\n          <use href=\"../../img/sprite.svg#icon-logo\"></use>\n        </svg>\n        Money Guard\n      </a>\n      <p className={s.text}>Are you sure you want to log out?</p>\n\n      <button className=\"modalButtonColor\" onClick={onLogout}>\n        Logout\n      </button>\n      <button className=\"modalButton\" onClick={closeModal}>\n        Cancel\n      </button>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal');\n\nconst Modal = ({ closeModal, children }) => {\n  const handleKeyDown = useCallback(\n    e => {\n      if (e.key === 'Escape') {\n        closeModal();\n      }\n    },\n    [closeModal]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal, handleKeyDown]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n  return ReactDOM.createPortal(\n    <div onClick={handleBackdropClick} className={s.modalWrapper}>\n      <div className={s.modalContent}>\n        <button className={s.closeButton} onClick={closeModal}>\n          <svg width=\"16\" height=\"16\">\n            <use href=\"../../img/sprite.svg#icon-close\"></use>\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react'\n\nexport const useModal = () => {\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst close = () => setIsOpen(false)\n\tconst open = () => setIsOpen(true)\n\tconst toggle = () => setIsOpen(prev => !prev)\n\treturn { isOpen, close, open, toggle }\n}","export default \"__VITE_ASSET__4192010f__\"","import React from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const useDashboard = () => {\n  const isBigScreenOrTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 768px)' });\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' });\n  const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' });\n  return {\n    isBigScreenOrTablet,\n    isBigScreen,\n    isMobile,\n    isTabletOrMobile,\n    isPortrait,\n    isRetina,\n  };\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { Exit } from '../Exit/Exit';\nimport Modal from '../Modal/Modal';\n\nimport { selectUser } from '../../redux/auth/authSlice';\nimport { useModal } from '../../hooks/useModal';\nimport s from './Header.module.css';\nimport sprite from '../../img/sprite.svg';\nimport { useDashboard } from '../../hooks/useDashboard';\n\nexport const Header = () => {\n  const { isOpen, toggle } = useModal();\n  const { isBigScreenOrTablet, isMobile } = useDashboard();\n  const user = useSelector(selectUser);\n\n  const index = user.email.indexOf('@');\n  const userEmail = user.email.slice(0, index);\n\n  return (\n    <header className={s.header}>\n      <div className={s.hederContainer}>\n        <Link to=\"/\" className={s.logo}>\n          {isBigScreenOrTablet ? (\n            <svg width=\"24\" height=\"23\">\n              <use xlinkHref={`${sprite}#icon-logo`}></use>\n            </svg>\n          ) : (\n            <svg width=\"17\" height=\"17\">\n              <use xlinkHref={`${sprite}#icon-logo`}></use>\n            </svg>\n          )}\n          Money Guard\n        </Link>\n        <div className={s.wrap}>\n          {' '}\n          <p className={s.user}>{userEmail}</p>\n          <button className={s.button} onClick={toggle}>\n            <svg width=\"18\" height=\"18\" className={s.icon}>\n              <use href={`${sprite}#icon-exit`}></use>\n            </svg>\n            {isBigScreenOrTablet ? 'Exit' : ''}\n          </button>\n        </div>\n        {isOpen && (\n          <Modal closeModal={toggle}>\n            <Exit closeModal={toggle} />\n          </Modal>\n        )}\n      </div>\n    </header>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nconst useResize = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return { windowWidth };\n};\n\nexport default useResize;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport useResize from '../../hooks/useResize';\n\nimport clsx from 'clsx';\nimport s from './NavBar.module.css';\nimport sprite from '../../img/sprite.svg';\n\nconst NavBar = () => {\n  const screenWidth = useResize().windowWidth;\n\n  return (\n    <div className={s.navLinkContainer}>\n      <div className={s.navLinkWrapper}>\n        {screenWidth < 768 ? (\n          <NavLink\n            to=\"home\"\n            className={({ isActive }) =>\n              clsx(s.navLinkTitle, isActive && s.active)\n            }\n          >\n            <div className={s.navLinkIconBg}>\n              <svg width=\"38\" height=\"38\" className={s.navLinkIcon}>\n                <use xlinkHref={`${sprite}#icon-home`} />\n              </svg>\n            </div>\n          </NavLink>\n        ) : (\n          <NavLink\n            to=\"home\"\n            className={({ isActive }) =>\n              clsx(s.navLinkTitle, isActive && s.active)\n            }\n          >\n            <div className={s.navLinkIconBg}>\n            <svg width=\"18\" height=\"18\" className={s.navLinkIcon}>\n              <use xlinkHref={`${sprite}#icon-home`} />\n            </svg>\n            </div>\n            Home\n          </NavLink>\n        )}\n\n        {screenWidth < 768 ? (\n          <NavLink\n            to=\"statistics\"\n            className={({ isActive }) =>\n              clsx(s.navLinkTitle, isActive && s.active)\n            }\n          >\n            <div className={s.navLinkIconBg}>\n              <svg width=\"32\" height=\"32\" className={s.navLinkIcon}>\n                <use xlinkHref={`${sprite}#icon-statistics`} />\n              </svg>\n            </div>\n          </NavLink>\n        ) : (\n          <NavLink\n            to=\"statistics\"\n            className={({ isActive }) =>\n              clsx(s.navLinkTitle, isActive && s.active)\n            }\n          >\n            <div className={s.navLinkIconBg}>\n              <svg width=\"16\" height=\"16\" className={s.navLinkIcon}>\n                <use xlinkHref={`${sprite}#icon-statistics`}></use>\n              </svg>\n            </div>\n            Statistics\n          </NavLink>\n        )}\n\n        {screenWidth < 768 && (\n          <NavLink\n            to=\"/currency\"\n            className={({ isActive }) =>\n              clsx(s.navLinkTitle, isActive && s.active)\n            }\n          >\n            <div className={s.navLinkIconBg}>\n              <svg width=\"38\" height=\"38\" className={s.navLinkIcon}>\n              <use xlinkHref={`${sprite}#icon-currency`} />\n              </svg>\n            </div>\n          </NavLink>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectBalance } from '../../redux/auth/authSlice'; \nimport s from './Balance.module.css'\n\nfunction Balance() {\n  const balance = useSelector(selectBalance);\n\n  return (\n      <div className={s.wrapper}>\n          <p className={s.title}>YOUR BALANCE</p>\n          <p className={s.text}>₴ {balance}</p>\n       </div>\n  );\n}\n\nexport default Balance;\n\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchCurrencyRate = createAsyncThunk('currency/fetchCurrencyRate', async () => {\n  const savedData = localStorage.getItem('currencyRate');\n  const savedTime = localStorage.getItem('lastFetchTime');\n\n  if (savedData && savedTime) {\n    const currentTime = new Date().getTime();\n    const timeDifference = (currentTime - savedTime) / (1000 * 60 * 60);\n\n    if (timeDifference < 1) {\n      return JSON.parse(savedData);\n    }\n  }\n\n  try {\n    const response = await axios.get('https://api.monobank.ua/bank/currency');\n\n    localStorage.setItem('currencyRate', JSON.stringify(response.data));\n    localStorage.setItem('lastFetchTime', new Date().getTime().toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при виконанні запиту до Monobank:', error);\n  }\n});","import { createSlice } from '@reduxjs/toolkit';\nimport { fetchCurrencyRate } from './operations';\nconst initialState = {\n  usdRate: null,\n  eurRate: null,\n  lastFetchTime: null,\n};\nconst currencySlice = createSlice({\n  name: 'currency',\n  initialState,\n  selectors: {\n    selectUsdRate: state => state.usdRate,\n    selectEurRate: state => state.eurRate,\n    selectLastFetchTime: state => state.lastFetchTime,\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCurrencyRate.fulfilled, (state, { payload }) => {\n      state.usdRate = payload.find(\n        rate => rate.currencyCodeA === 840 && rate.currencyCodeB === 980\n      );\n      state.eurRate = payload.find(\n        rate => rate.currencyCodeA === 978 && rate.currencyCodeB === 980\n      );\n      state.lastFetchTime = new Date().getTime().toString();\n    });\n  },\n});\n\nexport const currencyReducer = currencySlice.reducer;\nexport const { selectUsdRate, selectEurRate, selectLastFetchTime } =\n  currencySlice.selectors;\n","function currencyImages(isRetina, isBigScreen, isTabletOrMobile) {\n  let imageSrc = \"\";\n  let secondImageSrc = \"\";\n\n  if (isRetina) {\n    if (isBigScreen) {\n      imageSrc = \"../../img/images/currency_desk@2x.webp\";\n      secondImageSrc = \"../../img/images/line_desc_2x.webp\";\n    } else if (isTabletOrMobile) {\n      imageSrc = \"../../img/images/currency_tablet@2x.webp\";\n      secondImageSrc = \"../../img/images/line_desc_tab_2x.webp\";\n    } else {\n      imageSrc = \"../../img/images/currency_mobile@2x.webp\";\n      secondImageSrc = \"../../img/images/line_desc_mob_2x.webp\";\n    }\n  } else {\n    if (isBigScreen) {\n      imageSrc = \"../../img/images/currency_desk.webp\";\n      secondImageSrc = \"../../img/images/line_desc_1x.webp\";\n    } else if (isTabletOrMobile) {\n      imageSrc = \"../../img/images/currency_tablet.webp\";\n      secondImageSrc = \"../../img/images/line_desc_tab_1x.webp\";\n    } else {\n      imageSrc = \"../../img/images/currency_mobile.webp\";\n      secondImageSrc = \"../../img/images/line_desc_mob_1x.webp\";\n    }\n  }\n\n  return { imageSrc, secondImageSrc };\n}\n\nexport default currencyImages","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useDashboard } from '../../hooks/useDashboard';\nimport {\n  selectUsdRate,\n  selectEurRate,\n  selectLastFetchTime,\n} from '../../redux/currencyRate/currencyRateSlice';\nimport {fetchCurrencyRate} from '../../redux/currencyRate/operations'\nimport s from './CurrenceRate.module.css';\nimport currencyImages from './CurrencyImages';\n\nfunction CurrencyRates() {\n  const dispatch = useDispatch();\n  const usdRate = useSelector(selectUsdRate);\n  const eurRate = useSelector(selectEurRate);\n  const savedTime = useSelector(selectLastFetchTime);\n  \n  const { isDesktopOrLaptop, isBigScreen, isTabletOrMobile, isRetina } = useDashboard();\n\n  const { imageSrc, secondImageSrc } = currencyImages(isRetina, isBigScreen, isTabletOrMobile);\n\n  useEffect(() => {\n    const currentTime = new Date().getTime();\n    const timeDifference = (currentTime - savedTime) / (1000 * 60 * 60);\n\n    if (timeDifference > 1) {\n      dispatch(fetchCurrencyRate());\n    }\n  }, [dispatch, savedTime]);\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.secondwrapper}>\n      <table className={s.table}>\n  <thead className={s.head}>\n    <tr className={s.titleRow}>\n      <th className={s.titleItem}>Currency</th>\n      <th className={s.titleItem}>Purchase</th>\n      <th className={s.titleItem}>Sale</th>\n    </tr>\n  </thead>\n  <tbody className={s.tableBody}>\n    {usdRate && (\n      <tr className={s.row}>\n        <td className={s.rowItem}>USD</td>\n        <td className={s.rowItem}>{usdRate.rateBuy}</td>\n        <td className={s.rowItem}>{usdRate.rateSell}</td>\n      </tr>\n    )}\n    {eurRate && (\n      <tr className={s.row}>\n        <td className={s.rowItem}>EUR</td>\n        <td className={s.rowItem}>{eurRate.rateBuy}</td>\n        <td className={s.rowItem}>{eurRate.rateSell}</td>\n      </tr>\n    )}\n  </tbody>\n</table>\n        {isBigScreen && (\n          <>\n            <p className={s.smallnumeur}> {eurRate.rateBuy}</p>\n            <p className={s.smallnumusd}> {usdRate.rateBuy}</p>\n          </>\n        )}\n        <div className={s.imgBox}>\n      <img className={s.image} src={imageSrc} alt=\"Currency rate\" />\n      <img className={s.secondimage} src={secondImageSrc} alt=\"Currency rate\" />    \n        </div>\n</div>\n    </div>\n  );\n}\nexport default CurrencyRates;","import React from 'react';\nimport s from './Loader.module.css';\n\nconst Loader = () => {\n\n  return (\n   \n    <div className={s.loaderWrapper}>\n      <div className={s.loader}>\n      <span className={s.loaderName}></span>\n    </div>\n    </div>\n    \n  );\n};\n\nexport default Loader;\n","import React, { Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\n\nimport { Header } from '../Header/Header';\nimport NavBar from '../NavBar/NavBar';\nimport Balance from '../Balance/Balance';\nimport CurrencyRates from '../CurrencyRates/CurrenceRate';\nimport Loader from '../Loader/Loader';\n\nimport useResize from '../../hooks/useResize';\nimport { selectIsLoggedIn, selectIsLoading } from '../../redux/auth/authSlice';\nimport s from './Layout.module.css';\n\nconst Layout = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const isAuth = useSelector(selectIsLoggedIn);\n  const screenWidth = useResize().windowWidth;\n\n  return !isAuth ? (\n    <>\n      <Outlet />\n    </>\n  ) : (\n    <>\n      {isLoading && <Loader />}\n      <Header />\n        <div className={s.walletContainer}>\n           <div className={s.backgroundContainer_home}>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n        <div className={s.backgroundContainer_statistic}>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n        <div className={s.mainContainer}>\n          <div className={s.commonInfo}>\n            <div className={s.wrap}>\n              <NavBar className={s.navBar} />\n              {screenWidth >= 768 && <Balance />}\n            </div>\n            {screenWidth >= 768 && <CurrencyRates />}\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport s from './LoginRegisterForm.module.css';\n\nconst InputField = ({ register, errors, name, placeholder, className }) => {\n  return (\n    <>\n      <div className={s.error_container}>\n        <label className={s.name_label}>\n          {name === 'username' ? (\n            <div className={s.name_user_icon}>\n              <svg width=\"20\" height=\"24\">\n                <use href=\"../../img/sprite.svg#icon-user\"></use>\n              </svg>{' '}\n            </div>\n          ) : (\n            <div className={s.icon_email_cont}>\n              <svg width=\"20\" height=\"24\">\n                <use href=\"../../img/sprite.svg#icon-email\"></use>\n              </svg>\n            </div>\n          )}\n          <input\n            className={s.name_input}\n            autoComplete=\"none\"\n            {...register(name)}\n            type=\"text\"\n            placeholder={placeholder}\n          />\n        </label>{' '}\n        {errors?.[name] && (\n          <span className={s[className]}>{errors[name].message}</span>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default InputField;\n","import React from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport s from './LoginRegisterForm.module.css';\n\nconst ProgressBar = ({ password }) => {\n  return (\n    <div className={s.porgress_container}>\n      <PasswordStrengthBar\n        password={password}\n        minLength={6}\n        scoreWordStyle={{ display: 'none' }}\n        className={s.strengthBar}\n      />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport { PiEyeClosedThin, PiEyeThin } from 'react-icons/pi';\nimport ProgressBar from './ProgressBar';\nimport s from './LoginRegisterForm.module.css';\n\nconst PassInputField = ({\n  register,\n  errors,\n  name,\n  placeholder,\n  getValues,\n  formType,\n  className,\n}) => {\n  const [type, setType] = useState('password');\n  const [confPassword, setConfPassword] = useState('');\n\n  function handleChange(e) {\n    setConfPassword(e.target.value);\n  }\n  return (\n    <>\n      <div className={s.error_container}>\n        <label className={s.password_label}>\n          <div className={s.password_icon}>\n            <svg width=\"20\" height=\"20\">\n              <use href=\"../../img/sprite.svg#icon-lock\"></use>\n            </svg>\n          </div>\n          <input\n            autoComplete={name}\n            {...register(name, {\n              required: 'Password is required',\n              validate: value =>\n                value === getValues('password') || 'Passwords do not match',\n            })}\n            type={type}\n            placeholder={placeholder}\n            onChange={handleChange}\n            className={s.password_input}\n          />{' '}\n          <div\n            className={s.eye}\n            onClick={() => {\n              setType(type === 'password' ? 'text' : 'password');\n            }}\n          >\n            {type === 'password' ? (\n              <PiEyeClosedThin style={{ color: 'rgba(255, 255, 255, 0.4)' }} />\n            ) : (\n              <PiEyeThin style={{ color: 'rgba(255, 255, 255, 0.6)' }} />\n            )}\n          </div>\n        </label>\n        {errors?.[name] && (\n          <span className={s[className]}>{errors[name].message}</span>\n        )}\n      </div>\n      {name === 'password' && formType !== 'login' && (\n        <ProgressBar password={confPassword} />\n      )}\n    </>\n  );\n};\n\nexport default PassInputField;\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { NavLink } from 'react-router-dom';\nimport s from './LoginRegisterForm.module.css';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputField from './InputField';\nimport PassInputField from './PassInputField';\nimport sprite from '../../img/sprite.svg';\n\nconst LoginRegisterForm = ({ onDataSubmit, formType, schema }) => {\n  const [size, setSize] = useState(0);\n  useEffect(() => {\n    const handleResize = () => {\n      setSize(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n  const submit = dataS => {\n    const { passwordConfirmation, ...data } = dataS;\n    onDataSubmit(data);\n    reset();\n  };\n\n  return (\n    <>\n      <section\n        className={\n          formType === 'login'\n            ? `${s.login_register_section}`\n            : `${s.register_login_section}`\n        }\n      >\n        {formType === 'login' ? (\n          <>\n            <div className={s.background_container_login}>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>{' '}\n            <div className={s.background_img_container_login}>\n              <div></div>\n              <div></div>\n            </div>\n          </>\n        ) : (\n          <>\n            <div className={s.background_container_registration}>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n            <div className={s.background_img_container_registration}>\n              <div></div>\n              <div></div>\n            </div>\n          </>\n        )}\n\n        <div\n          className={\n            formType === 'login'\n              ? s.form_container_login\n              : s.form_container_register\n          }\n        >\n          <a\n            href=\"\"\n            className={s.logo_wrapper}\n            style={{ paddingBottom: formType === 'login' ? '11px' : '0px' }}\n          >\n            {size < 768 ? (\n              <svg width=\"25.5\" height=\"25.5\">\n                <use xlinkHref={`${sprite}#icon-logo`} />\n              </svg>\n            ) : (\n              <svg width=\"36\" height=\"36\">\n                <use xlinkHref={`${sprite}#icon-logo`} />\n              </svg>\n            )}\n            Money Guard\n          </a>\n          <form className={s.form} onSubmit={handleSubmit(submit)}>\n            {formType === 'register' && (\n              <InputField\n                register={register}\n                errors={errors}\n                name=\"username\"\n                placeholder=\"Name\"\n                className=\"username\"\n              />\n            )}\n            <InputField\n              register={register}\n              errors={errors}\n              name=\"email\"\n              placeholder=\"E-mail\"\n              className=\"email\"\n            />\n            <PassInputField\n              register={register}\n              errors={errors}\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={e => handleChange(e)}\n              formType={formType}\n              className=\"password\"\n            />\n            {formType === 'register' && (\n              <>\n                <PassInputField\n                  register={register}\n                  errors={errors}\n                  name=\"passwordConfirmation\"\n                  placeholder=\"Confirm password\"\n                  className=\"cpassword\"\n                />\n              </>\n            )}\n            {formType === 'login' ? (\n              <div className={s.button_cont}>\n                <button className={s.submit_btn} type=\"submit\">\n                  log in\n                </button>\n                <NavLink className={s.inactive_btn} to=\"/register\">\n                  register\n                </NavLink>\n              </div>\n            ) : (\n              <div className={s.button_cont}>\n                <button className={s.submit_btn} type=\"submit\">\n                  register\n                </button>\n                <NavLink className={s.inactive_btn} to=\"/login\">\n                  log in\n                </NavLink>\n              </div>\n            )}{' '}\n          </form>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default LoginRegisterForm;\n","import * as yup from 'yup';\n\nexport const loginSchema = yup\n  .object({\n    password: yup\n      .string()\n      .required()\n      .min(6, 'Must be more then 6 symbols')\n      .max(12, 'Must be less then 12 symbols'),\n    email: yup.string().required().email('Email is not valid'),\n  })\n  .required();\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport LoginRegisterForm from '../../components/LoginRegisterForm/LoginRegisterForm';\nimport { loginThunk } from '../../redux/auth/operations';\nimport { loginSchema } from '../../Schemas/loginShema';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = data => {\n    dispatch(loginThunk(data))\n      .unwrap()\n      .then(() => {\n        navigate('/home');\n      })\n      .catch(error => {\n        console.log(error.message);\n        toast(error);\n      });\n  };\n  const values = {\n    email: 'tomato9@gmail.com',\n    password: '0000000',\n  };\n  return (\n    <>\n      <LoginRegisterForm\n        formType={'login'}\n        onDataSubmit={handleSubmit}\n        values={values}\n        schema={loginSchema}\n      />\n    </>\n  );\n};\n\nexport default Login;\n","import * as yup from 'yup';\n\nexport const registerSchema = yup\n  .object({\n    username: yup.string().required(),\n    password: yup\n      .string()\n      .required()\n      .min(6, 'Must be more then 6 symbols')\n      .max(12, 'Must be less then 12 symbols'),\n    email: yup.string().required().email('Email is not valid'),\n    passwordConfirmation: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'Passwords must match'),\n  })\n  .required();\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Login_RegisterForm from '../../components/LoginRegisterForm/LoginRegisterForm';\nimport { registerThunk } from '../../redux/auth/operations';\nimport { registerSchema } from '../../Schemas/registerShema';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './Register.module.css';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigate();\n  const handleSubmit = data => {\n    dispatch(registerThunk(data))\n      .unwrap()\n      .then(() => {\n        navigation('/home');\n      })\n      .catch(error => {\n        console.log(error);\n        toast(error);\n      });\n  };\n\n  return (\n    <>\n      <Login_RegisterForm\n        onDataSubmit={handleSubmit}\n        formType={'register'}\n        schema={registerSchema}\n      />\n    </>\n  );\n};\n\nexport default Register;\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  addTransactionThunk,\n  deleteTransactionThunk,\n  editTransactionThunk,\n  fetchTransactionCategoriesThunk,\n  fetchTransactionsDataThunk,\n  fetchTransactionSummaryControllerThunk,\n} from './operations';\n\nconst initialState = {\n  transactionsList: [],\n  transactionCategories: [],\n  categoriesSummary: [],\n  expenseSummary: 0,\n  incomeSummary: 0,\n  month: new Date().getMonth() + 1,\n  year: new Date().getFullYear(),\n  periodTotal: 0,\n  loading: false,\n  error: false,\n};\n\nconst transactionsSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  selectors: {\n    selectTransactions: state => state.transactionsList,\n    selectIsLoading: state => state.loading,\n    selectIsError: state => state.error,\n    selectTransactionCategories: state => state.transactionCategories,\n    selectMonth: state => state.month,\n    selectYear: state => state.year,\n    selectCategoriesSummary: state => state.categoriesSummary,\n    selectExpenseSummary: state => state.expenseSummary,\n    selectIncomeSummary: state => state.incomeSummary,\n    selectPeriodTotal: state => state.periodTotal,\n  },\n  reducers: {\n    selectedYear: (state, { payload }) => {\n      state.year = payload;\n    },\n    selectedMonth: (state, { payload }) => {\n      state.month = payload;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchTransactionsDataThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList = payload;\n        state.loading = false;\n      })\n      .addCase(deleteTransactionThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList = state.transactionsList.filter(\n          transaction => transaction.id !== payload.id\n        );\n        state.loading = false;\n      })\n      .addCase(addTransactionThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList.push(payload);\n        state.loading = false;\n      })\n      .addCase(editTransactionThunk.fulfilled, (state, { payload }) => {\n        const transactionIndex = state.transactionsList.findIndex(\n          transaction => transaction.id === payload.id\n        );\n        state.transactionsList.splice(transactionIndex, 1, payload);\n        state.loading = false;\n      })\n      .addCase(\n        fetchTransactionCategoriesThunk.fulfilled,\n        (state, { payload }) => {\n          state.transactionCategories = payload;\n          state.loading = false;\n        }\n      )\n      .addCase(\n        fetchTransactionSummaryControllerThunk.fulfilled,\n        (state, { payload }) => {\n          state.categoriesSummary = payload.categoriesSummary;\n          state.expenseSummary = payload.expenseSummary;\n          state.incomeSummary = payload.incomeSummary;\n          state.periodTotal = payload.periodTotal;\n          state.loading = false;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          fetchTransactionsDataThunk.pending,\n          deleteTransactionThunk.pending,\n          addTransactionThunk.pending,\n          editTransactionThunk.pending,\n          fetchTransactionCategoriesThunk.pending,\n          fetchTransactionSummaryControllerThunk.pending\n        ),\n        (state, { payload }) => {\n          state.loading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          fetchTransactionsDataThunk.rejected,\n          deleteTransactionThunk.rejected,\n          addTransactionThunk.rejected,\n          editTransactionThunk.rejected,\n          fetchTransactionCategoriesThunk.rejected,\n          fetchTransactionSummaryControllerThunk.rejected\n        ),\n        (state, { payload }) => {\n          state.error = payload;\n          state.loading = false;\n        }\n      );\n  },\n});\n\nexport const transactionsReducer = transactionsSlice.reducer;\nexport const { selectedYear, selectedMonth } = transactionsSlice.actions;\nexport const {\n  selectTransactions,\n  selectIsLoading,\n  selectIsError,\n  selectTransactionCategories,\n  selectYear,\n  selectMonth,\n  selectCategoriesSummary,\n  selectExpenseSummary,\n  selectIncomeSummary,\n  selectPeriodTotal,\n} = transactionsSlice.selectors;\n","import React, { useState } from 'react';\nimport styles from './TransactionSwitcher.module.css';\n\nconst TransactionSwitcher = ({ onChange }) => {\n  const [isIncome, setIsIncome] = useState(false);\n\n  const handleSwitch = () => {\n    setIsIncome(!isIncome);\n    onChange(!isIncome);\n  };\n  return (\n    <div className={styles['transaction-switcher']}>\n      <span className={ isIncome  ? styles.activeIncome : styles.labelIncome}>Income</span>\n\n      <label\n        className={`${styles.switch} ${\n          isIncome ? styles.income : styles.expense\n        }`}\n      >\n        <input type=\"checkbox\" onChange={handleSwitch} checked={!isIncome} />\n        <span className={`${styles.slider} ${styles.round}`}></span>\n      </label>\n      <span className={ !isIncome  ? styles.activeExpense : styles.labelExpense}>Expense</span>\n    </div>\n  );\n};\n\nexport default TransactionSwitcher;\n","import React from 'react';\nimport s from '../Form.module.css';\n\nconst FormInput = ({ name, register, errors, placeholder, className }) => {\n  return (\n    <div className={s.inputContainer}>\n      <input\n        autoComplete=\"off\"\n        className={className}\n        {...register(name)}\n        placeholder={placeholder}\n      />\n      {errors[name] && <span>{errors[name].message}</span>}\n    </div>\n  );\n};\n\nexport default FormInput;\n","\nconst addLeadingZero = number => {\n    return number < 10 ? '0' + number : number;\n  };\n  export const formatDate = (date)=>{\n  const year = date.getFullYear();\n  const month = addLeadingZero(date.getMonth() + 1);\n  const day = addLeadingZero(date.getDate());\n  const formattedDate = `${year}-${month}-${day}`;\n  return formattedDate\n  }\n\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Select from 'react-select';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport DatePicker from 'react-datepicker';\n\nimport TransactionSwitcher from './TransactionSwitcher/TransactionSwitcher';\nimport FormInput from './FormFields/FormFields';\n\nimport { formatDate } from '../../helpers/addLeadingzero';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport s from './Form.module.css';\nimport sprite from '../../img/sprite.svg';\n\nexport function Form({\n  content,\n  categories,\n  toggle,\n  typeForm,\n  onDataSubmit,\n  schema,\n}) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n  } = useForm({ resolver: yupResolver(schema), mode: 'onChange' });\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [type, setType] = useState('');\n  const [startDate, setStartDate] = useState(null);\n  const [isHidden, setIsHidden] = useState(true);\n\n  useEffect(() => {\n    content ? setType(content.type) : setType('EXPENSE');\n    setValue('amount', content && +content.amount.toString().replace('-', ''));\n    setValue('comment', content && content.comment);\n  }, [content, setValue]);\n\n  const categoriesValues = useMemo(() => {\n    return categories.map(({ id, name }) => {\n      return { value: id, label: name };\n    });\n  }, [categories]);\n\n  const defaultValue = useMemo(() => {\n    return categoriesValues.find(option => {\n      return content?.categoryId === option.value;\n    });\n  }, [content, categoriesValues]);\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n  // || categoriesValues[0].value\n  const submit = data => {\n    if (typeForm === 'add' && (type === 'EXPENSE' && selectedOption) || (type === 'INCOME')) {\n      onDataSubmit({\n        transactionDate: formatDate(startDate),\n        amount: type === 'EXPENSE' ? +`-${data.amount}` : +data.amount,\n        comment: data.comment,\n        type: type,\n        categoryId: \n          type === 'EXPENSE'\n            ? selectedOption?.value\n            : '063f1132-ba5d-42b4-951d-44011ca46262',\n      });\n      setIsHidden(true);\n    } else if (typeForm === 'add' && !selectedOption) {\n      setIsHidden(false);\n      return;\n    } else {\n      onDataSubmit({\n        transactionDate: content\n          ? content.transactionDate\n          : formatDate(startDate),\n        amount: type === 'EXPENSE' ? +`-${data.amount}` : +data.amount,\n        comment: data.comment,\n      });\n    }\n  };\n  const toggleTransaction = type => {\n    if (type) {\n      setType('INCOME');\n    } else {\n      setType('EXPENSE');\n    }\n  };\n  return (\n    <div className={s.container}>\n      <form className={s.formWrapper} onSubmit={handleSubmit(submit)}>\n        <h1 className={s.header}>\n          {typeForm === 'add' ? 'Add transaction' : 'Edit transaction'}\n        </h1>\n        {typeForm === 'add' ? (\n          <TransactionSwitcher onChange={toggleTransaction} />\n        ) : (\n          <div>\n            <ul className={s.checkBox}>\n              <li\n                onClick={() => {\n                  if (!(typeForm === 'edit' && type === 'EXPENSE')) {\n                    toggleTransaction(true);\n                  }\n                }}\n                className={\n                  content.type === 'INCOME' || type === 'INCOME'\n                    ? s.activeIncome\n                    : ''\n                }\n                disabled={typeForm === 'edit' && type === 'EXPENSE'}\n              >\n                {' '}\n                Income\n              </li>\n              <span>/</span>\n              <li\n                onClick={() => {\n                  if (!(typeForm === 'edit' && type === 'INCOME')) {\n                    toggleTransaction(false);\n                  }\n                }}\n                className={type === 'EXPENSE' ? s.activeExpense : ''}\n                disabled={typeForm === 'edit' && type === 'INCOME'}\n              >\n                {' '}\n                Expense{' '}\n              </li>\n            </ul>\n          </div>\n        )}\n        <div className={s.secondContainer}>\n          {type === 'EXPENSE' && (\n            <div className={s.category}>\n              <Select\n                name=\"category\"\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                options={categoriesValues}\n                placeholder=\"Select category\"\n                defaultValue={defaultValue && defaultValue}\n                // : categoriesValues[0]\n                onChange={handleChange}\n                isDisabled={typeForm === 'edit'}\n              />\n              <span className={!isHidden ? s.active : s.hidden}>\n                Please, choose the category\n              </span>\n            </div>\n          )}\n          <div className={s.boxDate}>\n            <FormInput\n              className={s.incomeInput}\n              name=\"amount\"\n              placeholder=\"0.00\"\n              autoComplete=\"false\"\n              errors={errors}\n              register={register}\n            />\n            <div className={s.svgBox}>\n              <DatePicker\n                className={s.customInput}\n                selected={content ? content.transactionDate : startDate}\n                placeholderText=\"Enter the date\"\n                onChange={date => {\n                  setValue('transactionDate', date);\n                  setStartDate(date);\n                }}\n              />\n              <svg width=\"36\" height=\"36\">\n                <use xlinkHref={`${sprite}#icon-date`} />\n              </svg>\n              {errors['transactionDate'] && (\n                <span>{errors['transactionDate'].message}</span>\n              )}\n            </div>\n          </div>\n\n          <FormInput\n            className={s.comment}\n            name=\"comment\"\n            placeholder=\"Comment\"\n            errors={errors}\n            register={register}\n          />\n\n          <div className={s.btnBox}>\n            <button className=\"modalButtonColor\">\n              {typeForm === 'add' ? 'ADD' : 'EDIT'}\n            </button>\n            <button type=\"button\" onClick={toggle} className=\"modalButton\">\n              CANCEL\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import * as yup from 'yup'\n\nexport const editTransactionShema = yup.object({\n  comment: yup\n    .string()\n    .min(5, 'Give more details'),\n  transactionDate: yup.date(),\n  amount: yup\n    .number()\n    .typeError('Please enter the number')\n    .min(1, 'Number must be at least 1 character')\n});","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { Form } from '../Form';\nimport { editTransactionThunk } from '../../../redux/transactions/operations';\nimport { editTransactionShema } from '../../../Schemas/EditTransactionShema';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function EditTransactionForm({ categories, editContent, toggle }) {\n  const dispatch = useDispatch();\n\n  const handleSubmit = data => {\n    dispatch(editTransactionThunk({ content: { ...data }, id: editContent.id }))\n      .unwrap()\n      .then(data => {\n        toast.success(`Changed!`);\n        toggle();\n      })\n      .catch(err => {\n        toast.error('Credentials is not valid!');\n      });\n  };\n\n  return (\n    <Form\n      schema={editTransactionShema}\n      toggle={toggle}\n      content={editContent.content}\n      categories={categories}\n      onDataSubmit={handleSubmit}\n      typeForm=\"edit\"\n    />\n  );\n}\n","import * as yup from 'yup';\n\nexport const addTransactionShema = yup.object({\n  comment: yup\n    .string()\n    .required(`Describe your transaction`)\n    .min(5, 'Give more details'),\n  transactionDate: yup.date().required('Please choose the date'),\n  amount: yup\n    .number()\n    .typeError('Please enter the number')\n    .min(1, 'Number must be at least 1 character')\n    .required('Sum is required'),\n});\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { Form } from '../Form';\nimport { addTransactionThunk } from '../../../redux/transactions/operations';\nimport { addTransactionShema } from '../../../Schemas/addTransactionShema';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function AddTransactionForm({ categories, toggle }) {\n  const dispatch = useDispatch()\n  \n  const handleSubmit = data => {\n    dispatch(addTransactionThunk(data)).unwrap()\n      .then(() => {\n        toast.success(\"Transaction was successfully added\")   \n        toggle()\n      }) .catch(err => {\n        toast.error('Credentials is not valid!');\n      });\n  }\n  return (\n<Form schema={addTransactionShema}  categories={categories} onDataSubmit={handleSubmit} toggle={toggle} typeForm=\"add\"/>\n  );\n}\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useDashboard } from '../../../hooks/useDashboard';\nimport { deleteTransactionThunk } from '../../../redux/transactions/operations';\nimport { selectTransactionCategories } from '../../../redux/transactions/transactionsSlice';\nimport sprite from '../../../img/sprite.svg';\nimport s from './TransactionsItem.module.css';\n\nconst TransactionsItem = ({ transaction, handleEditItem }) => {\n  const { id, transactionDate, type, categoryId, comment, amount } =\n    transaction;\n\n  const { isBigScreenOrTablet, isMobile } = useDashboard();\n\n  const dispatch = useDispatch();\n  const categories = useSelector(selectTransactionCategories);\n\n  function getCategoryName(id) {\n    const category = categories.find(category => category.id === id);\n    return category ? category.name : 'Unknown Category';\n  }\n\n  const handleDeleteTransaction = () => {\n    dispatch(deleteTransactionThunk(transaction));\n  };\n\n  const signType = type.toLowerCase() === 'income' ? '+' : '-';\n\n  const transactionBorderColor =\n    type.toLowerCase() === 'income' ? s.income_border : s.expense_border;\n\n  const transactionTextColor =\n    type.toLowerCase() === 'income' ? s.income_text : s.expense_text;\n\n  return (\n    <>\n      {isMobile && (\n        <li\n          key={id}\n          className={`${s.transaction_item} ${transactionBorderColor}`}\n        >\n          <table className={s.transactions_table_mobile}>\n            <tbody className={s.table_body}>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Date</td>\n                <td>{transactionDate}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Type</td>\n                <td>{signType}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Category</td>\n                <td>{getCategoryName(categoryId)}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Comment</td>\n                <td>{comment}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Sum</td>\n                <td className={transactionTextColor}>{amount}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td>\n                  <button\n                    className={s.btn_delete}\n                    onClick={handleDeleteTransaction}\n                  >\n                    Delete\n                  </button>\n                </td>\n                <td>\n                  <button\n                    onClick={() =>\n                      handleEditItem(\n                        { categoryId, type, amount, comment, transactionDate },\n                        id\n                      )\n                    }\n                    className={s.btn_edit}\n                  >\n                    <svg className={s.icon_edit}>\n                      <use xlinkHref={`${sprite}#icon-edit`} />\n                    </svg>{' '}\n                    Edit\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </li>\n      )}\n      {isBigScreenOrTablet && (\n        <tr className={s.transaction_row}>\n          <td className={s.transaction_colum}>{transactionDate}</td>\n          <td className={s.transaction_colum} style={{ textAlign: 'center' }}>\n            {signType}\n          </td>\n          <td className={s.transaction_colum}>{getCategoryName(categoryId)}</td>\n          <td className={s.transaction_colum}>{comment}</td>\n          <td\n            className={`${s.transaction_colum} ${transactionTextColor}`}\n            style={{ textAlign: 'right' }}\n          >\n            {amount}\n          </td>\n          <td className={s.transaction_colum}>\n            <div className={s.btn_wrapper}>\n              <button\n                onClick={() =>\n                  handleEditItem(\n                    { categoryId, type, amount, comment, transactionDate },\n                    id\n                  )\n                }\n                className={s.btn_edit}\n              >\n                <svg className={s.icon_edit}>\n                  <use xlinkHref={`${sprite}#icon-edit`} />\n                </svg>\n              </button>\n              <button\n                className={s.btn_delete}\n                onClick={handleDeleteTransaction}\n              >\n                Delete\n              </button>\n            </div>\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nexport default TransactionsItem;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useModal } from '../../hooks/useModal.jsx';\nimport { useDashboard } from '../../hooks/useDashboard';\nimport {\n  selectTransactionCategories,\n  selectTransactions,\n} from '../../redux/transactions/transactionsSlice';\nimport Modal from '../Modal/Modal.jsx';\nimport { EditTransactionForm } from '../Form/EditTransactionForm/EditTransactionForm.jsx';\nimport { AddTransactionForm } from '../Form/AddTransactionForm/AddTransactionForm.jsx';\nimport TransactionsItem from './TransactionItem/TransactionsItem.jsx';\nimport sprite from '../../img/sprite.svg';\nimport s from './TransactionList.module.css';\n\nconst TransactionsList = () => {\n  const { isOpen, toggle } = useModal();\n  const [editContent, setEditContent] = useState('');\n\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectTransactionCategories);\n\n  const { isBigScreenOrTablet, isMobile } = useDashboard();\n\n  if (isOpen) {\n    document.body.classList.add('modal-open');\n  }\n  else {\n    document.body.classList.remove('modal-open');\n  }\n  const handleEditItem = (content, id, name) => {\n    toggle();\n    setEditContent({ content, id, name });\n    isOpen && document.body.classList.add('modal-open');\n\n  };\n\n  const handleAddItem = () => {\n    toggle();\n    setEditContent(null);\n\n  };\n\n  return (\n    <section className={s.transactions_section}>\n      <div className={s.transactions_container}>\n        {isMobile && (\n          <ul className={s.transactions_list}>\n            {transactions.length > 0 ? (\n              transactions.map(transaction => (\n                <TransactionsItem\n                  handleEditItem={handleEditItem}\n                  key={transaction.id}\n                  transaction={transaction}\n                />\n              ))\n            ) : (\n              <div className={s.empty_transactions}>No transactions</div>\n            )}\n          </ul>\n        )}\n        {isBigScreenOrTablet && (\n          <>\n            {transactions.length > 0 ? (\n              <table className={s.transactions_table}>\n                <thead>\n                  <tr className={s.transaction_row_head}>\n                    <th>Date</th>\n                    <th style={{ textAlign: 'center' }}>Type</th>\n                    <th>Category</th>\n                    <th>Comment</th>\n                    <th style={{ textAlign: 'right' }}>Sum</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody className={s.table_body}>\n                  {transactions.map(transaction => (\n                    <TransactionsItem\n                      handleEditItem={handleEditItem}\n                      key={transaction.id}\n                      transaction={transaction}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <>\n                <table className={s.transactions_table}>\n                  <thead>\n                    <tr className={s.transaction_row_head}>\n                      <th>Date</th>\n                      <th style={{ textAlign: 'center' }}>Type</th>\n                      <th>Category</th>\n                      <th>Comment</th>\n                      <th style={{ textAlign: 'right' }}>Sum</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                </table>\n                <div className={s.empty_transactions}>No transactions</div>\n              </>\n            )}\n          </>\n        )}\n        <button onClick={() => handleAddItem()} className={s.btn_add}>\n          {' '}\n          <svg className={s.icon_plus}>\n            <use xlinkHref={`${sprite}#icon-plus`} />\n          </svg>\n        </button>\n      </div>\n      {isOpen && (\n        <Modal closeModal={toggle}>\n          {editContent ? (\n            <EditTransactionForm\n              editContent={editContent}\n              categories={categories}\n              toggle={toggle}\n            />\n          ) : (\n            <AddTransactionForm categories={categories} toggle={toggle} />\n          )}\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default TransactionsList;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactionsDataThunk } from '../../redux/transactions/operations';\n\nimport TransactionsList from '../../components/Transactions/TransactionsList';\nimport Balance from '../../components/Balance/Balance';\nimport useResize from '../../hooks/useResize';\n\nconst HomeTab = () => {\n  const dispatch = useDispatch();\n\n  const screenWidth = useResize().windowWidth;\n\n  useEffect(() => {\n    dispatch(fetchTransactionsDataThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      {screenWidth < 768 && <Balance />}\n      <TransactionsList />\n    </>\n  );\n};\n\nexport default HomeTab;\n","// StatisticsDashboard.jsx\nimport React, { useState } from 'react';\nimport s from './StatisticsDashboard.module.css';\n\nconst StatisticsDashboard = ({ onMonthChange, onYearChange }) => {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const [selectedMonth, setSelectedMonth] = useState(currentDate.getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(currentYear);\n\n  const handleMonthChange = e => {\n    setSelectedMonth(parseInt(e.target.value));\n    onMonthChange(parseInt(e.target.value));\n  };\n\n  const handleYearChange = e => {\n    setSelectedYear(parseInt(e.target.value));\n    onYearChange(parseInt(e.target.value));\n  };\n\n  const years = Array.from({ length: currentYear - 2019 }, (_, i) => currentYear - i).reverse();\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  return (\n    <div className={s.selectContainers}>\n      <select className={s.select} value={selectedMonth} onChange={handleMonthChange}>\n        {months.map((month, index) => (\n          <option className={s.option} key={index + 1} value={index + 1}>{month}</option>\n        ))}\n      </select>\n      <select className={s.select} value={selectedYear} onChange={handleYearChange}>\n        {years.map(year => (\n          <option className={s.option} key={year} value={year}>{year}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default StatisticsDashboard;\n","// StatisticsTable.jsx\n\nimport React from 'react';\nimport s from './StatisticsTable.module.css';\n\nconst StatisticsTable = ({ transactionsSummary, colors, incomeSummary, expenseSummary }) => {\n  \n\n  return (\n    <div className={s.tableContainer}>\n      <table className={s.table}>\n        <thead className={s.tableHeader}>\n          <tr className={s.tableRow}>\n            <th className={s.tableHeadCell}>Category</th>\n            <th className={s.tableHeadCellRight}>Sum</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactionsSummary.map((category, index) => (\n            <tr key={index} className={s.tableRow}>\n              <td className={s.tableCellBox} style={{ backgroundColor: colors[category.name] }}></td>\n              <td className={s.tableCell}>{category.name}</td>\n              <td className={s.tableCellRight}>{category.total}</td>\n              \n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className={s.paragraphContainer}>\n        <p className={s.paragraph}>Income:\n          <span className={s.income}>{incomeSummary}</span></p>\n        <p className={s.paragraph}>Expenses:\n          <span className={s.expense}>{expenseSummary.toString().replace('-', '')}</span></p>\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticsTable;\n","// Chart.jsx\nimport React from 'react';\n\nimport { Doughnut } from 'react-chartjs-2';\nimport s from './Chart.module.css';\nimport Chart from 'chart.js/auto';\n\nconst DoughnutChart = ({ transactions, colors, period }) => {\n  if (!transactions || !colors) {\n    return <div>No data available</div>;\n  }\n\n  const formattedPeriod = period.toFixed(2);\n\n  const data = {\n    datasets: [\n      {\n        data: transactions?.map(transaction => transaction.total),\n        backgroundColor: transactions?.map(\n          transaction => colors[transaction.name]\n        ),\n        hoverBackgroundColor: transactions?.map(\n          transaction => colors[transaction.name]\n        ),\n        cutout: 95,\n      },\n    ],\n  };\n\n  return (\n    <div className={s.chartWrapper}>\n      <Doughnut data={data} className={s.doughnut} />\n      <p className={s.periodText}> ₴ {formattedPeriod}</p>\n    </div>\n  );\n};\n\nexport default DoughnutChart;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport StatisticsDashboard from './StatisticsDashboard/StatisticsDashboard';\nimport { fetchTransactionSummaryControllerThunk } from '../../redux/transactions/operations';\nimport {\n  selectCategoriesSummary,\n  selectExpenseSummary,\n  selectIncomeSummary,\n  selectPeriodTotal,\n} from '../../redux/transactions/transactionsSlice';\nimport s from './StatisticsTab.module.css';\nimport StatisticsTable from './StatisticsTable/StatisticsTable';\nimport DoughnutChart from './Chart/Chart';\n\nconst StatisticsTab = () => {\n  const dispatch = useDispatch();\n  const transactionsSummaryList = useSelector(selectCategoriesSummary);\n  const incomeTotal = useSelector(selectIncomeSummary);\n  const expenceTotal = useSelector(selectExpenseSummary);\n  const periodTotal = useSelector(selectPeriodTotal);\n\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [colors, setColors] = useState({});\n\n  useEffect(() => {\n    dispatch(\n      fetchTransactionSummaryControllerThunk({\n        month: selectedMonth,\n        year: selectedYear,\n      })\n    );\n  }, [selectedMonth, selectedYear, dispatch]);\n\n  const generateColors = () => {\n    const generatedColors = {};\n    transactionsSummaryList?.forEach(({ name, index }) => {\n      generatedColors[name] = `#${Math.floor(Math.random() * 16777215).toString(\n        16\n      )}`;\n    });\n    setColors(generatedColors);\n  };\n  useEffect(() => {\n    generateColors();\n  }, [transactionsSummaryList]);\n\n  const handleMonthChange = month => {\n    setSelectedMonth(month);\n  };\n\n  const handleYearChange = year => {\n    setSelectedYear(year);\n  };\n\n  return (\n    <section className={s.statisticsContainer}>\n      <h2 className={s.title}>Statistics</h2>\n\n      <div className={s.contentContainer}>\n        <DoughnutChart\n          transactions={transactionsSummaryList}\n          period={periodTotal}\n          colors={colors}\n        />\n\n        <div className={s.tableContainer}>\n          <StatisticsDashboard\n            onMonthChange={handleMonthChange}\n            onYearChange={handleYearChange}\n          />\n          <StatisticsTable\n            transactionsSummary={transactionsSummaryList}\n            colors={colors}\n            incomeSummary={incomeTotal}\n            expenseSummary={expenceTotal}\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default StatisticsTab;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../redux/auth/authSlice';\n\nconst PrivateRoute = ({ component: Component, redirectTo = '/' }) => {\n\n  const isAuth = useSelector(selectIsLoggedIn);\n\n  return !isAuth ? <Navigate to={redirectTo} /> : <Component />;\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../redux/auth/authSlice';\n\nconst RestrictedRoute = ({ component: Component, redirectTo = '/' }) => {\n  const isAuth = useSelector(selectIsLoggedIn);\n\n  return isAuth ? <Navigate to={redirectTo} /> : <Component />;\n};\n\nexport default RestrictedRoute;\n","import React, { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport Layout from '../components/Layout/Layout.jsx';\nimport Login from '../pages/Login/Login';\nimport Register from '../pages/Register/Register';\nimport HomeTab from '../pages/HomeTab/HomeTab';\nimport Loader from '../components/Loader/Loader';\nimport CurrencyRates from './CurrencyRates/CurrenceRate';\nimport StatisticsTab from '../pages/StatisticsTab/StatisticsTab';\n\nimport PrivateRoute from '../../src/authRoutes/PrivateRoute';\nimport RestrictedRoute from '../../src/authRoutes/RestrictedRoute';\n\nimport { refreshThunk } from '../redux/auth/operations';\nimport { selectIsLoggedIn, selectIsRefresh } from '../redux/auth/authSlice';\nimport { fetchTransactionCategoriesThunk } from '../redux/transactions/operations';\nimport 'modern-normalize';\nimport { useDashboard } from '../hooks/useDashboard.jsx';\n\nfunction App() {\n  const isAuth = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefresh);\n  const {\n    isDesktopOrLaptop,\n    isBigScreen,\n    isTabletOrMobile,\n    isRetina,\n    isMobile,\n  } = useDashboard();\n  const dispatch = useDispatch();\n  if (isMobile) {\n    console.log('ok');\n  }\n  useEffect(() => {\n    dispatch(refreshThunk());\n    dispatch(fetchTransactionCategoriesThunk());\n  }, [dispatch]);\n\n  return isRefreshing ? (\n    <Loader />\n  ) : (\n    <>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route\n            index\n            element={<RestrictedRoute component={Login} redirectTo=\"/home\" />}\n          />\n          <Route\n            path=\"register\"\n            element={\n              <RestrictedRoute component={Register} redirectTo=\"/home\" />\n            }\n          />\n          <Route path=\"/\" element={<Layout />}>\n            <Route\n              path=\"/home\"\n              element={<PrivateRoute component={HomeTab} redirectTo=\"/\" />}\n            />\n            <Route\n              path=\"/statistics\"\n              element={\n                <PrivateRoute component={StatisticsTab} redirectTo=\"/\" />\n              }\n            />\n            {isMobile && (\n              <Route\n                path=\"/currency\"\n                element={\n                  <PrivateRoute component={CurrencyRates} redirectTo=\"/\" />\n                }\n              />\n            )}\n          </Route>\n          <Route\n            path=\"*\"\n            element={!isAuth ? <Navigate to=\"/\" /> : <Navigate to=\"/home\" />}\n          />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport { authReducer } from './auth/authSlice';\nimport { transactionsReducer } from './transactions/transactionsSlice';\nimport { currencyReducer } from '../redux/currencyRate/currencyRateSlice';\n\nconst persistConfig = {\n  key: 'auth',\n  version: 1,\n  storage,\n  whitelist: ['token'],\n};\n\nconst currencyPersistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authReducer),\n    transactions: transactionsReducer,\n     currency:  persistReducer(\n  currencyPersistConfig,\n  currencyReducer\n),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store)","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './components/App';\n\nimport { persistor, store } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  // <BrowserRouter basename='/money_guard_project'>\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n        <ToastContainer autoClose={1500} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>\n);\n\n//<React.StrictMode></React.StrictMode>\n"],"names":["walletApi","axios","setToken","token","removeToken","registerThunk","createAsyncThunk","credentials","thunkAPI","data","error","loginThunk","logoutThunk","_","refreshThunk","thunkApi","savedToken","getBalanceThunk","fetchTransactionsDataThunk","deleteTransactionThunk","transaction","addTransactionThunk","body","editTransactionThunk","fetchTransactionCategoriesThunk","fetchTransactionSummaryControllerThunk","query","initialState","slice","createSlice","state","builder","payload","isAnyOf","authReducer","selectIsLoggedIn","selectUser","selectToken","selectIsRefresh","selectBalance","selectIsLoading","logout","Exit","closeModal","navigate","useNavigate","dispatch","useDispatch","onLogout","React","s","modalRoot","Modal","children","handleKeyDown","useCallback","e","useEffect","handleBackdropClick","ReactDOM","useModal","isOpen","setIsOpen","useState","prev","sprite","useDashboard","isBigScreenOrTablet","useMediaQuery","isBigScreen","isTabletOrMobile","isMobile","isPortrait","isRetina","Header","toggle","user","useSelector","index","userEmail","Link","useResize","windowWidth","setWindowWidth","handleResize","NavBar","screenWidth","NavLink","isActive","clsx","Balance","balance","fetchCurrencyRate","savedData","savedTime","response","currencySlice","rate","currencyReducer","selectUsdRate","selectEurRate","selectLastFetchTime","currencyImages","imageSrc","secondImageSrc","CurrencyRates","usdRate","eurRate","isDesktopOrLaptop","Loader","Layout","isLoading","isAuth","Suspense","Outlet","InputField","register","errors","name","placeholder","className","ProgressBar","password","PasswordStrengthBar","PassInputField","getValues","formType","type","setType","confPassword","setConfPassword","handleChange","value","PiEyeClosedThin","PiEyeThin","LoginRegisterForm","onDataSubmit","schema","size","setSize","reset","handleSubmit","useForm","yupResolver","submit","dataS","passwordConfirmation","loginSchema","yup\n  .object","yup\n      .string","yup.string","Login","toast","values","registerSchema","yup.ref","Register","navigation","Login_RegisterForm","transactionsSlice","transactionIndex","transactionsReducer","selectTransactions","selectIsError","selectTransactionCategories","selectYear","selectMonth","selectCategoriesSummary","selectExpenseSummary","selectIncomeSummary","selectPeriodTotal","TransactionSwitcher","onChange","isIncome","setIsIncome","handleSwitch","styles","FormInput","addLeadingZero","number","formatDate","date","year","month","day","Form","content","categories","typeForm","setValue","selectedOption","setSelectedOption","startDate","setStartDate","isHidden","setIsHidden","categoriesValues","useMemo","id","defaultValue","option","toggleTransaction","Select","DatePicker","editTransactionShema","yup.object","yup\n    .string","yup.date","yup\n    .number","EditTransactionForm","editContent","err","addTransactionShema","AddTransactionForm","TransactionsItem","handleEditItem","transactionDate","categoryId","comment","amount","getCategoryName","category","handleDeleteTransaction","signType","transactionBorderColor","transactionTextColor","TransactionsList","setEditContent","transactions","handleAddItem","HomeTab","StatisticsDashboard","onMonthChange","onYearChange","currentDate","currentYear","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","handleMonthChange","handleYearChange","years","i","months","StatisticsTable","transactionsSummary","colors","incomeSummary","expenseSummary","DoughnutChart","period","formattedPeriod","Doughnut","StatisticsTab","transactionsSummaryList","incomeTotal","expenceTotal","periodTotal","setColors","generateColors","generatedColors","PrivateRoute","Component","redirectTo","Navigate","RestrictedRoute","App","isRefreshing","Routes","Route","persistConfig","storage","currencyPersistConfig","store","configureStore","persistReducer","getDefaultMiddleware","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","BrowserRouter","Provider","PersistGate","ToastContainer"],"mappings":"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"}