{"version":3,"file":"commonHelpers.js","sources":["../src/components/LoginRegisterForm/InputField.jsx","../src/components/LoginRegisterForm/ProgressBar.jsx","../src/components/LoginRegisterForm/PassInputField.jsx","../src/components/LoginRegisterForm/LoginRegisterForm.jsx","../src/axiosConfig/walletApi.js","../src/redux/auth/operations.js","../src/Schemas/loginShema.js","../src/pages/Login/Login.jsx","../src/redux/auth/authSlice.js","../src/components/Exit/Exit.jsx","../src/components/Modal/Modal.jsx","../src/hooks/useModal.jsx","../src/components/Header/Header.jsx","../src/components/Layout.jsx","../src/Schemas/registerShema.js","../src/pages/Register/Register.jsx","../src/redux/transactions/operations.js","../src/redux/transactions/transactionsSlice.js","../src/img/sprite.svg","../src/hooks/useDashboard.jsx","../src/components/Transactions/TransactionItem/TransactionsItem.jsx","../src/components/Form/TransactionSwitcher/TransactionSwitcher.jsx","../src/helpers/addLeadingzero.js","../src/components/Form/FormFields/FormFields.jsx","../src/components/Form/Form.jsx","../src/components/Form/EditTransactionForm/EditTransactionForm.jsx","../src/components/Form/AddTransactionForm/AddTransactionForm.jsx","../src/components/Transactions/TransactionsList.jsx","../src/pages/HomeTab/HomeTab.jsx","../src/components/App.jsx","../src/redux/store.js","../src/index.jsx"],"sourcesContent":["import React from 'react';\n\nconst InputField = ({ register, errors, name, placeholder }) => {\n  return (\n    <label>\n      <input\n        autoComplete={name}\n        {...register(name)}\n        type=\"text\"\n        placeholder={placeholder}\n      />\n      {errors?.[name] && <span>{errors[name].message}</span>}\n    </label>\n  );\n};\n\nexport default InputField;\n","import React from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\n\nconst ProgressBar = ({ password }) => {\n  return (\n    <>\n      <PasswordStrengthBar\n        password={password}\n        minLength={6}\n        scoreWordStyle={{ display: 'none' }}\n      />\n    </>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\nimport ProgressBar from './ProgressBar';\n\nconst PassInputField = ({ register, errors, name, placeholder, getValues }) => {\n  const [type, setType] = useState('password');\n  const [confPassword, setConfPassword] = useState('');\n\n  function handleChange(e) {\n    setConfPassword(e.target.value);\n  }\n\n  return (\n    <label>\n      <input\n        autoComplete={name}\n        {...register(name, {\n          required: 'Password is required',\n          validate: value => {\n            value === getValues('password') || 'Passwords do not match';\n          },\n        })}\n        type={type}\n        placeholder={placeholder}\n        onChange={handleChange}\n      />{' '}\n      <div\n        onClick={() => {\n          setType(type === 'password' ? 'text' : 'password');\n        }}\n      >\n        {type === 'password' ? <AiFillEyeInvisible /> : <AiFillEye />}\n      </div>\n      {errors?.[name] && <span>{errors[name].message}</span>}\n      {name === 'passwordConfirmation' && (\n        <ProgressBar password={confPassword} />\n      )}\n    </label>\n  );\n};\n\nexport default PassInputField;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { NavLink } from 'react-router-dom';\nimport s from './LoginRegisterForm.module.css';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputField from './InputField';\nimport PassInputField from './PassInputField';\n\nconst LoginRegisterForm = ({ onDataSubmit, formType, schema }) => {\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n  const submit = data => {\n    delete data.passwordConfirmation;\n    onDataSubmit(data);\n    console.log(data);\n    reset();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit(submit)}>\n      {formType === 'register' && (\n        <InputField\n          register={register}\n          errors={errors}\n          name=\"username\"\n          placeholder=\"Name\"\n        />\n      )}\n      <InputField\n        register={register}\n        errors={errors}\n        name=\"email\"\n        placeholder=\"Email\"\n      />\n      <PassInputField\n        register={register}\n        errors={errors}\n        name=\"password\"\n        placeholder=\"Password\"\n      />\n\n      {formType === 'register' && (\n        <>\n          <PassInputField\n            register={register}\n            errors={errors}\n            name=\"passwordConfirmation\"\n            placeholder=\"Confirm password\"\n          />\n        </>\n      )}\n      {formType === 'login' ? (\n        <>\n          <button type=\"submit\">LOG IN</button>\n          <NavLink to=\"/register\">REGISTER</NavLink>\n        </>\n      ) : (\n        <>\n          <button type=\"submit\">REGISTER</button>\n          <NavLink to=\"/login\">LOGIN</NavLink>\n        </>\n      )}\n      <button hidden></button>\n    </form>\n  );\n};\n\nexport default LoginRegisterForm;\n","import axios from 'axios';\n\nexport const walletApi = axios.create({\n  baseURL: 'https://wallet.b.goit.study/api/',\n});\n\nexport const setToken = token => {\n  walletApi.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\nexport const removeToken = () => {\n  walletApi.defaults.headers.common.Authorization = ``;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { walletApi, setToken, removeToken } from '../../axiosConfig/walletApi';\n\nexport const registerThunk = createAsyncThunk(\n  'register',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('auth/sign-up', credentials);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const loginThunk = createAsyncThunk(\n  'login',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('auth/sign-in', credentials);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logoutThunk = createAsyncThunk('logout', async (_, thunkAPI) => {\n  try {\n    const { data } = await walletApi.delete('auth/sign-out');\n    removeToken();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nexport const refreshThunk = createAsyncThunk('refresh', async (_, thunkApi) => {\n  const savedToken = thunkApi.getState().auth.token;\n  if (!savedToken) {\n    return thunkApi.rejectWithValue('Token is not exist!');\n  }\n  try {\n    setToken(savedToken);\n    const { data } = await walletApi.get('users/current');\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\n","import * as yup from 'yup';\n\nexport const loginSchema = yup\n  .object({\n    password: yup\n      .string()\n      .required()\n      .min(6, 'Must be more then 6 symbols')\n      .max(12, 'Must be less then 12 symbols'),\n    email: yup.string().required().email('Email is not valid'),\n  })\n  .required();\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport LoginRegisterForm from '../../components/LoginRegisterForm/LoginRegisterForm';\nimport { loginThunk } from '../../redux/auth/operations';\nimport { loginSchema } from '../../Schemas/loginShema';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = data => {\n    dispatch(loginThunk(data))\n      .unwrap()\n      .then(() => {\n        navigate('/');\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n  const values = {\n    email: 'tomato9@gmail.com',\n    password: '0000000',\n  };\n  return (\n    <div>\n      <LoginRegisterForm\n        formType={'login'}\n        onDataSubmit={handleSubmit}\n        values={values}\n        schema={loginSchema}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  loginThunk,\n  logoutThunk,\n  refreshThunk,\n  registerThunk,\n} from './operations';\n\nconst initialState = {\n  user: {\n    username: '',\n    email: '',\n  },\n  token: null,\n  loading: false,\n  error: false,\n  isLoggedIn: false,\n  isRefresh: false,\n};\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState,\n  selectors: {\n    selectUser: state => state.user,\n    selectIsLoggedIn: state => state.isLoggedIn,\n    selectToken: state => state.isLoggedIn,\n    selectIsRefresh: state => state.isRefresh,\n  },\n  reducers: {\n    logout: state => {\n      return initialState;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(logoutThunk.fulfilled, state => {\n        return initialState;\n      })\n      .addCase(refreshThunk.fulfilled, (state, { payload }) => {\n        state.user.username = payload.username;\n        state.user.email = payload.email;\n        state.isLoggedIn = true;\n        state.isRefresh = false;\n        state.loading = false;\n      })\n\n      .addMatcher(\n        isAnyOf(registerThunk.fulfilled, loginThunk.fulfilled),\n        (state, { payload }) => {\n          state.user.username = payload.user.username;\n          state.user.email = payload.user.email;\n          state.user.password = payload.user.password;\n          state.token = payload.token;\n          state.isLoggedIn = true;\n          state.loading = false;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          registerThunk.pending,\n          loginThunk.pending,\n          refreshThunk.pending\n        ),\n        state => {\n          state.loading = true;\n          state.error = null;\n          state.isRefresh = true;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          registerThunk.rejected,\n          loginThunk.rejected,\n          refreshThunk.rejected\n        ),\n        (state, { payload }) => {\n          state.error = payload;\n          state.loading = false;\n          state.isRefresh = false;\n        }\n      );\n  },\n});\n\nexport const authReducer = slice.reducer;\nexport const { selectIsLoggedIn, selectUser, selectToken, selectIsRefresh } =\n  slice.selectors;\nexport const { logout } = slice.actions;\n","import React from 'react';\n\nimport s from './Exit.module.css';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../redux/auth/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { logoutThunk } from '../../redux/auth/operations';\n\nexport const Exit = ({ closeModal }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    dispatch(logoutThunk());\n    dispatch(logout());\n    closeModal();\n    navigate('/login');\n  };\n  return (\n    <div className={s.wrap}>\n      <a href=\"\" className={s.logo}>\n        <svg width=\"36\" height=\"36\">\n          <use href=\"../../img/sprite.svg#icon-logo\"></use>\n        </svg>\n        Money Guard\n      </a>\n      <p className={s.text}>Are you sure you want to log out?</p>\n\n      <button className=\"modalButtonColor\" onClick={onLogout}>\n        Logout\n      </button>\n      <button className=\"modalButton\" onClick={closeModal}>\n        Cancel\n      </button>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal');\n\nconst Modal = ({ closeModal, children }) => {\n  const handleKeyDown = useCallback(\n    e => {\n      if (e.key === 'Escape') {\n        closeModal();\n      }\n    },\n    [closeModal]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal, handleKeyDown]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n  return ReactDOM.createPortal(\n    <div onClick={handleBackdropClick} className={s.modalWrapper}>\n      <div className={s.modalContent}>\n        <button className={s.closeButton} onClick={closeModal}>\n          <svg width=\"16\" height=\"16\">\n            <use href=\"../../img/sprite.svg#icon-close\"></use>\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react'\n\nexport const useModal = () => {\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst close = () => setIsOpen(false)\n\tconst open = () => setIsOpen(true)\n\tconst toggle = () => setIsOpen(prev => !prev)\n\treturn { isOpen, close, open, toggle }\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n\nimport { Exit } from '../Exit/Exit';\nimport Modal from '../Modal/Modal';\n\nimport { selectUser } from '../../redux/auth/authSlice';\nimport { useModal } from '../../hooks/useModal';\nimport s from './Header.module.css';\n\nexport const Header = () => {\n  const { isOpen, toggle } = useModal();\n\n  const user = useSelector(selectUser);\n\n  const index = user.email.indexOf('@');\n  const userEmail = user.email.slice(0, index);\n\n  return (\n    <header className={s.header}>\n      <div className={s.hederContainer}>\n        {/* <Link to=\"/\" className={s.logo}> */}\n        <a href=\"\" className={s.logo}>\n          <svg width=\"24\" height=\"23\">\n            <use href=\"../../img/sprite.svg#icon-logo\"></use>\n          </svg>\n          Money Guard\n        </a>\n        {/* </Link > */}\n        <div className={s.wrap}>\n          {' '}\n          <p className={s.user}>{userEmail}</p>\n          <button className={s.button} onClick={toggle}>\n            <svg width=\"18\" height=\"18\" className={s.icon}>\n              <use href=\"../../img/sprite.svg#icon-exit\"></use>\n            </svg>{' '}\n            Exit\n          </button>\n        </div>\n        {isOpen && (\n          <Modal closeModal={toggle}>\n            <Exit closeModal={toggle} />\n          </Modal>\n        )}\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { Header } from './Header/Header';\n\nexport const Layout = () => {\n  return (\n    <>\n      <Header />\n      <Outlet />\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nexport const registerSchema = yup\n  .object({\n    username: yup.string().required(),\n    password: yup\n      .string()\n      .required()\n      .min(6, 'Must be more then 6 symbols')\n      .max(12, 'Must be less then 12 symbols'),\n    email: yup.string().required().email('Email is not valid'),\n    passwordConfirmation: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'Passwords must match'),\n  })\n  .required();\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Login_RegisterForm from '../../components/LoginRegisterForm/LoginRegisterForm';\nimport { registerThunk } from '../../redux/auth/operations';\nimport { registerSchema } from '../../Schemas/registerShema';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigate();\n  const handleSubmit = data => {\n    dispatch(registerThunk(data));\n    navigation('/login');\n  };\n\n  return (\n    <div>\n      <Login_RegisterForm\n        onDataSubmit={handleSubmit}\n        formType={'register'}\n        schema={registerSchema}\n      />\n    </div>\n  );\n};\n\nexport default Register;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { walletApi } from '../../axiosConfig/walletApi';\n\nexport const fetchTransactionsDataThunk = createAsyncThunk(\n  'fetchTransactionsData',\n  async (_, thunkAPI) => {\n\n    try {\n      const { data } = await walletApi.get('transactions');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const deleteTransactionThunk = createAsyncThunk(\n  'deleteTransaction',\n  async (id, thunkAPI) => {\n    try {\n      await walletApi.delete(`transactions/${id}`);\n      return id;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const addTransactionThunk = createAsyncThunk(\n  'addTransaction',\n  async (body, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('transactions', body);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const editTransactionThunk = createAsyncThunk(\n  'editTransaction',\n  async (body, thunkAPI) => {\n    try {\n      const { data } = await walletApi.patch(`/transactions/${body.id}`, body.content);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchTransactionCategoriesThunk = createAsyncThunk(\n  'fetchTransactionCategories',\n  async (_, thunkAPI) => {\n\n    try {\n      const { data } = await walletApi.get('transaction-categories');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchTransactionSummaryControllerThunk = createAsyncThunk(\n  'fetchTransactionSummaryController',\n  async (_, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get('transactions-summary');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  addTransactionThunk,\n  deleteTransactionThunk,\n  editTransactionThunk,\n  fetchTransactionCategoriesThunk,\n  fetchTransactionsDataThunk,\n  fetchTransactionSummaryControllerThunk,\n} from './operations';\n\nconst initialState = {\n  transactionsList: [],\n  transactionCategories: [],\n  transactionSummaryController: null,\n  loading: false,\n  error: false,\n};\n\nconst transactionsSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  selectors: {\n    selectTransactions: state => state.transactionsList,\n    selectIsLoading: state => state.loading,\n    selectIsError: state => state.error,\n    selectTransactionCategories: state => state.transactionCategories,\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchTransactionsDataThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList = payload;\n        state.loading = false;\n      })\n      .addCase(deleteTransactionThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList = state.transactionsList.filter(\n          transaction => transaction.id !== payload\n        );\n        state.loading = false;\n      })\n      .addCase(addTransactionThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList.push(payload);\n        state.loading = false;\n      })\n      .addCase(editTransactionThunk.fulfilled, (state, { payload }) => {\n        const transactionIndex = state.transactionsList.findIndex(\n          transaction => transaction.id === payload.id\n        );\n        state.transactionsList.splice(transactionIndex, 1, payload);\n        state.loading = false;\n      })\n      .addCase(\n        fetchTransactionCategoriesThunk.fulfilled,\n        (state, { payload }) => {\n          state.transactionCategories = payload;\n          state.loading = false;\n        }\n      );\n    // .addCase(\n    //   fetchTransactionSummaryController.fulfilled,\n    //   (state, { payload }) => {\n    //     state.transactionSummaryController = payload;\n    //     state.loading = false;\n    //   }\n    // )\n    // .addMatcher(\n    //   isAnyOf(\n    //     fetchTransactionsDataThunk.pending,\n    //     deleteTransactionThunk.pending,\n    //     addTransactionThunk.pending,\n    //     editTransactionThunk.pending,\n    //     fetchTransactionCategoriesThunk.pending,\n    //     fetchTransactionSummaryController.pending\n    //   ),\n    //   (state, { payload }) => {\n    //     state.loading = true;\n    //     state.error = null;\n    //   }\n    // )\n    // .addMatcher(\n    //   isAnyOf(\n    //     fetchTransactionsDataThunk.rejected,\n    //     deleteTransactionThunk.rejected,\n    //     addTransactionThunk.rejected,\n    //     editTransactionThunk.rejected,\n    //     fetchTransactionCategoriesThunk.rejected,\n    //     fetchTransactionSummaryController.rejected\n    //   ),\n    //   (state, { payload }) => {\n    //     state.error = payload;\n    //     state.loading = false;\n    //   }\n    // );\n  },\n});\n\nexport const transactionsReducer = transactionsSlice.reducer;\nexport const {\n  selectTransactions,\n  selectIsLoading,\n  selectIsError,\n  selectTransactionCategories,\n} = transactionsSlice.selectors;\n","export default \"__VITE_ASSET__4192010f__\"","import React from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const useDashboard = () => {\n  const isBigScreenOrTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 768px)' });\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' });\n  const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' });\n  return {\n    isBigScreenOrTablet,\n    isBigScreen,\n    isMobile,\n    isTabletOrMobile,\n    isPortrait,\n    isRetina,\n  };\n};\n","import React from 'react';\nimport s from './TransactionsItem.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTransactionThunk } from '../../../redux/transactions/operations';\nimport { selectTransactionCategories } from '../../../redux/transactions/transactionsSlice';\nimport sprite from '../../../img/sprite.svg';\nimport { useDashboard } from '../../../hooks/useDashboard';\n\nconst TransactionsItem = ({ transaction, handleEditItem }) => {\n  const { id, transactionDate, type, categoryId, comment, amount } = transaction;\n\n  const { isBigScreenOrTablet, isMobile } = useDashboard();\n\n  const dispatch = useDispatch();\n  const categories = useSelector(selectTransactionCategories);\n\n  function getCategoryName(id) {\n    const category = categories.find(category => category.id === id);\n    return category ? category.name : 'Unknown Category';\n  }\n\n  const handleDeleteTransaction = id => {\n    dispatch(deleteTransactionThunk(id));\n  };\n\n  const signType = type.toLowerCase() === 'income' ? '+' : '-';\n\n  const transactionBorderColor =\n    type.toLowerCase() === 'income' ? s.income_border : s.expense_border;\n\n  const transactionTextColor =\n    type.toLowerCase() === 'income' ? s.income_text : s.expense_text;\n\n  return (\n    <>\n      {isMobile && (\n        <li\n          key={id}\n          className={`${s.transaction_item} ${transactionBorderColor}`}\n        >\n          <table className={s.transactions_table_mobile}>\n            <tbody>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Date</td>\n                <td>{transactionDate}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Type</td>\n                <td>{signType}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Category</td>\n                <td>{getCategoryName(categoryId)}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Comment</td>\n                <td>{comment}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Sum</td>\n                <td className={transactionTextColor}>{amount}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td>\n                  <button\n                    className={s.btn_delete}\n                    onClick={() => handleDeleteTransaction(id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n                <td>\n                  <button\n                    onClick={() =>\n                      handleEditItem(\n                        { categoryId, type, amount, comment, transactionDate }, id)\n                    } className={s.btn_edit}>\n                    {' '}\n                    <svg className={s.icon_edit}>\n                      <use xlinkHref={`${sprite}#icon-edit`} />\n                    </svg>{' '}\n                     Edit\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </li>\n      )}\n      {isBigScreenOrTablet && (\n        <tr className={s.transaction_row}>\n          <td className={s.transaction_colum}>{transactionDate}</td>\n          <td className={s.transaction_colum} style={{ textAlign: 'center' }}>\n            {signType}\n          </td>\n          <td className={s.transaction_colum}>{getCategoryName(categoryId)}</td>\n          <td className={s.transaction_colum}>{comment}</td>\n          <td\n            className={`${s.transaction_colum} ${transactionTextColor}`}\n            style={{ textAlign: 'right' }}\n          >\n            {amount}\n          </td>\n          <td className={s.transaction_colum}>\n            {' '}\n            <div className={s.btn_wrapper}>\n              <button className={s.btn_edit}>Edit</button>\n              <button\n                className={s.btn_delete}\n                onClick={() => handleDeleteTransaction(id)}\n              >\n                Delete\n              </button>\n            </div>\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nexport default TransactionsItem;\n","import React, { useState } from 'react';\nimport styles from './TransactionSwitcher.module.css';\n\nconst TransactionSwitcher = ({ onChange }) => {\n  const [isIncome, setIsIncome] = useState(false);\n\n  const handleSwitch = () => {\n    setIsIncome(!isIncome);\n    onChange(!isIncome);\n  };\n  return (\n    <div className={styles['transaction-switcher']}>\n      <span className={styles.labelIncome}>Income</span>\n\n      <label\n        className={`${styles.switch} ${\n          isIncome ? styles.income : styles.expense\n        }`}\n      >\n        <input type=\"checkbox\" onChange={handleSwitch} checked={!isIncome} />\n        <span className={`${styles.slider} ${styles.round}`}></span>\n      </label>\n      <span className={styles.labelExpense}>Expense</span>\n    </div>\n  );\n};\n\nexport default TransactionSwitcher;\n","\nconst addLeadingZero = number => {\n    return number < 10 ? '0' + number : number;\n  };\n  export const formatDate = (date)=>{\n  const year = date.getFullYear();\n  const month = addLeadingZero(date.getMonth() + 1);\n  const day = addLeadingZero(date.getDate());\n  const formattedDate = `${year}-${month}-${day}`;\n  return formattedDate\n  }\n\n","import React from 'react';\nimport s from \"../Form.module.css\"\n\nconst FormInput = ({ name, register, errors, placeholder, className }) => {\n  return (\n    <div className={s.inputContainer}>\n      <input\n        className={className}\n        {...register(name)}\n        placeholder={placeholder}\n      />\n      {errors[name] && <span>{errors[name].message}</span>}\n    </div>\n  );\n};\n\nexport default FormInput;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useForm } from 'react-hook-form';\nimport TransactionSwitcher from './TransactionSwitcher/TransactionSwitcher';\nimport s from './Form.module.css';\nimport { formatDate } from '../../helpers/addLeadingzero';\nimport Select from 'react-select';\nimport FormInput from './FormFields/FormFields';\n//import { yupResolver } from '@hookform/resolvers/yup';\n\nexport function Form({\n  content,\n  categories,\n  toggle,\n  typeForm,\n  onDataSubmit,\n}) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n  } = useForm();\n\n  const [selectedOption, setSelectedOption] = useState('');\n  const [type, setType] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n\n  useEffect(() => {\n    content ? setType(content.type) : setType('EXPENSE');\n  }, [content]);\n\n  useEffect(() => {\n    setValue('amount', content && content.amount);\n  }, [content, setValue]);\n\n  useEffect(() => {\n    setValue('comment', content && content.comment);\n  }, [content, setValue]);\n\n  const categoriesValues = useMemo(() => {\n    return categories.map(({ id, name }) => {\n      return { value: id, label: name };\n    });\n  }, [categories]);\n\n  const defaultValue = useMemo(() => {\n    return categoriesValues.find(option => {\n      return content?.categoryId === option.value;\n    });\n  }, [content, categoriesValues]);\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n  const submit = data => {\n    if (typeForm === 'add') {\n      onDataSubmit({\n        transactionDate: formatDate(startDate),\n        amount: +data.amount,\n        comment: data.comment,\n        type: type,\n        categoryId:\n          type === 'EXPENSE'\n            ? selectedOption.value || categoriesValues[0].value\n            : '063f1132-ba5d-42b4-951d-44011ca46262',\n      });\n    } else {\n      onDataSubmit({\n        transactionDate: formatDate(startDate),\n        amount: +data.amount,\n        comment: data.comment,\n      });\n    }\n  };\n  const toggleTransaction = type => {\n    if (type) {\n      setType('INCOME');\n    } else {\n      setType('EXPENSE');\n    }\n  };\n  return (\n    <div>\n      <form className={s.formWrapper} onSubmit={handleSubmit(submit)}>\n        <h1 className={s.header}>\n          {typeForm === 'add' ? 'Add transaction' : 'Edit transaction'}\n        </h1>\n        {typeForm === 'add' ? (\n          <TransactionSwitcher onChange={toggleTransaction} />\n        ) : (\n          <div>\n            <ul className={s.checkBox}>\n              <li\n                onClick={() => {\n                  if (!(typeForm === 'edit' && type === 'EXPENSE')) {\n                    toggleTransaction(true);\n                  }\n                }}\n                className={\n                  content.type === 'INCOME' || type === 'INCOME'\n                    ? s.activeIncome\n                    : ''\n                }\n                disabled={typeForm === 'edit' && type === 'EXPENSE'}\n              >\n                {' '}\n                Income\n              </li>\n              <span>/</span>\n              <li\n                onClick={() => {\n                  if (!(typeForm === 'edit' && type === 'INCOME')) {\n                    toggleTransaction(false);\n                  }\n                }}\n                className={type === 'EXPENSE' ? s.activeExpense : ''}\n                disabled={typeForm === 'edit' && type === 'INCOME'}\n              >\n                {' '}\n                Expense{' '}\n              </li>\n            </ul>\n          </div>\n        )}\n        <div>\n          {type === 'EXPENSE' && (\n            <div className={s.inputContainer}>\n              <Select\n                name=\"category\"\n                //className={s.selectExpense}\n                options={categoriesValues}\n                defaultValue={defaultValue ? defaultValue : categoriesValues[0]}\n                onChange={handleChange}\n                isDisabled={typeForm === 'edit'}\n              />\n            {errors['category'] && <span>{errors['category'].message}</span>}\n            </div>\n          )}\n\n          <div className={s.boxDate}>\n            <FormInput\n              className={s.incomeInput}\n              name=\"amount\"\n              placeholder=\"0.00\"\n              errors={errors}\n              register={register}\n            />\n\n            <div className={s.inputContainer}>\n              <DatePicker\n                className={s.customInput}\n                selected={content ? content.transactionDate : startDate}\n                onChange={date => {\n                  setValue('transactionDate', date);\n                  setStartDate(date);\n                }}\n              />\n              {errors['transactionDate'] && (\n                <span>{errors['transactionDate'].message}</span>\n              )}\n            </div>\n          </div>\n          \n          <FormInput\n            className={s.comment}\n            name=\"comment\"\n            placeholder=\"Comment\"\n            errors={errors}\n            register={register}\n          />\n\n          <div className={s.btnBox}>\n            <button className={s.btn}>\n              {typeForm === 'add' ? 'ADD' : 'EDIT'}\n            </button>\n            <button type=\"button\" onClick={toggle} className={s.btn}>\n              CANCEL\n            </button>\n          </div>\n\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Form } from '../Form';\nimport { editTransactionThunk } from '../../../redux/transactions/operations';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function EditTransactionForm({ categories, editContent, toggle }) {\n  const dispatch = useDispatch();\n\n  const handleSubmit = data => {\n    dispatch(editTransactionThunk({ content:{...data}, id:editContent.id }))\n      .unwrap()\n      .then(data => {\n        toast.success(`Changed!`);\n        toggle()\n      })\n      .catch(err => {\n        toast.error('Credentials is not valid!');\n      });\n  };\n\n  return (\n    <Form\n      toggle={toggle}\n      content={editContent.content}\n      categories={categories}\n      onDataSubmit={handleSubmit}\n      typeForm=\"edit\"\n    />\n  );\n}\n","import React from 'react';\nimport { Form } from '../Form';\nimport { useDispatch } from 'react-redux';\nimport { addTransactionThunk } from '../../../redux/transactions/operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function AddTransactionForm({ categories, toggle }) {\n  const dispatch = useDispatch()\n  \n  const handleSubmit = data => {\n    dispatch(addTransactionThunk(data)).unwrap()\n      .then(() => {\n        toast.success(\"Transaction was successfully added\")   \n        toggle()\n      }) .catch(err => {\n        toast.error('Credentials is not valid!');\n      });\n  }\n  return (\n<Form  categories={categories} onDataSubmit={handleSubmit} toggle={toggle} typeForm=\"add\"/>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport {\n  fetchTransactionsDataThunk,\n  fetchTransactionCategoriesThunk,\n} from '../../redux/transactions/operations';\nimport {\n  selectTransactionCategories,\n  selectTransactions,\n} from '../../redux/transactions/transactionsSlice';\nimport TransactionsItem from './TransactionItem/TransactionsItem.jsx';\nimport s from './TransactionList.module.css';\nimport { useModal } from '../../hooks/useModal.jsx';\nimport Modal from '../Modal/Modal.jsx';\nimport { EditTransactionForm } from '../Form/EditTransactionForm/EditTransactionForm.jsx';\nimport { AddTransactionForm } from '../Form/AddTransactionForm/AddTransactionForm.jsx';\nimport sprite from '../../img/sprite.svg';\nimport { useDashboard } from '../../hooks/useDashboard';\n\nconst TransactionsList = () => {\n  const { isOpen, toggle } = useModal();\n  const [editContent, setEditContent] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionsDataThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchTransactionCategoriesThunk());\n  }, [dispatch]);\n\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectTransactionCategories);\n\n  const { isBigScreenOrTablet, isMobile } = useDashboard();\n\n  const handleEditItem = (content, id, name) => {\n    toggle();\n    setEditContent({ content, id, name });\n  };\n  const handleAddItem = () => {\n    toggle();\n    setEditContent(null);\n  };\n  return (\n    <section className={s.transactions_section}>\n      <div className={s.transactions_container}>\n        {isMobile && (\n          <ul className={s.transactions_list}>\n            {transactions.length > 0 ? (\n              transactions.map(transaction => (\n                <TransactionsItem\n                  key={transaction.id}\n                  transaction={transaction}\n                />\n              ))\n            ) : (\n              <div className={s.empty_transactions}>No transactions</div>\n            )}\n          </ul>\n        )}\n        {isBigScreenOrTablet && (\n          <>\n            {transactions.length > 0 ? (\n              <table className={s.transactions_table}>\n                <thead>\n                  <tr className={s.transaction_row_head}>\n                    <th>Date</th>\n                    <th style={{ textAlign: 'center' }}>Type</th>\n                    <th>Category</th>\n                    <th>Comment</th>\n                    <th style={{ textAlign: 'right' }}>Sum</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody className={s.table_body}>\n                  {transactions.map(transaction => (\n                    <TransactionsItem\n                      key={transaction.id}\n                      transaction={transaction}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <>\n                <table className={s.transactions_table}>\n                  <thead>\n                    <tr className={s.transaction_row_head}>\n                      <th>Date</th>\n                      <th style={{ textAlign: 'center' }}>Type</th>\n                      <th>Category</th>\n                      <th>Comment</th>\n                      <th style={{ textAlign: 'right' }}>Sum</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                </table>\n                <div className={s.empty_transactions}>No transactions</div>\n              </>\n            )}\n          </>\n        )}\n\n        <button className={s.btn_add}>\n          {' '}\n          <svg className={s.icon_plus}>\n            <use xlinkHref={`${sprite}#icon-plus`} />\n          </svg>\n        </button>\n      </div>\n      {isOpen && (\n        <Modal closeModal={toggle}>\n          {editContent ? (\n            <EditTransactionForm\n              editContent={editContent}\n              categories={categories}\n              toggle={toggle}\n            />\n          ) : (\n            <AddTransactionForm categories={categories} toggle={toggle} />\n          )}\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default TransactionsList;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport TransactionsList from '../../components/Transactions/TransactionsList';\nimport {\n  fetchTransactionCategoriesThunk,\n  fetchTransactionsDataThunk,\n} from '../../redux/transactions/operations';\n\nconst HomeTab = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionsDataThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchTransactionCategoriesThunk());\n  }, [dispatch]);\n\n  return <TransactionsList />;\n};\n\nexport default HomeTab;\n","import React, { useEffect } from 'react';\nimport Login from '../pages/Login/Login';\nimport { Route, Routes } from 'react-router-dom';\nimport { Layout } from './Layout';\nimport Register from '../pages/Register/Register';\nimport StatisticsTab from '../pages/StatisticsTab/StatisticsTab';\nimport 'modern-normalize';\nimport { refreshThunk } from '../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport HomeTab from '../pages/HomeTab/HomeTab';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(refreshThunk());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Hello</h1>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"register\" element={<Register />} />\n          <Route path=\"home\" element={<HomeTab />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport { authReducer } from './auth/authSlice';\nimport { transactionsReducer } from './transactions/transactionsSlice';\n\nconst persistConfig = {\n  key: 'auth',\n  version: 1,\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authReducer),\n    transactions: transactionsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store);\n\n// import { configureStore } from '@reduxjs/toolkit';\n// import { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n// import currencyReducer from './currencyRate/currencyRateSlice';\n\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n// };\n\n// const persistedReducer = persistReducer(persistConfig, currencyReducer);\n\n// export const store = configureStore({\n//   reducer: {\n//     currency: persistedReducer,\n//   },\n// });\n\n// export const persistor = persistStore(store);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './components/App';\n\nimport { persistor, store } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n        <ToastContainer autoClose={1500} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>\n);\n\n//<React.StrictMode></React.StrictMode>\n"],"names":["InputField","register","errors","name","placeholder","React","ProgressBar","password","PasswordStrengthBar","PassInputField","getValues","type","setType","useState","confPassword","setConfPassword","handleChange","e","value","AiFillEyeInvisible","AiFillEye","LoginRegisterForm","onDataSubmit","formType","schema","reset","handleSubmit","useForm","yupResolver","submit","data","s","NavLink","walletApi","axios","setToken","token","removeToken","registerThunk","createAsyncThunk","credentials","thunkAPI","error","loginThunk","logoutThunk","_","refreshThunk","thunkApi","savedToken","loginSchema","yup\n  .object","yup\n      .string","yup.string","Login","navigate","useNavigate","dispatch","useDispatch","values","initialState","slice","createSlice","state","builder","payload","isAnyOf","authReducer","selectIsLoggedIn","selectUser","selectToken","selectIsRefresh","logout","Exit","closeModal","onLogout","modalRoot","Modal","children","handleKeyDown","useCallback","useEffect","handleBackdropClick","ReactDOM","useModal","isOpen","setIsOpen","prev","Header","toggle","user","useSelector","index","userEmail","Layout","Outlet","registerSchema","yup.ref","Register","navigation","Login_RegisterForm","fetchTransactionsDataThunk","deleteTransactionThunk","id","addTransactionThunk","body","editTransactionThunk","fetchTransactionCategoriesThunk","transactionsSlice","transaction","transactionIndex","transactionsReducer","selectTransactions","selectIsLoading","selectIsError","selectTransactionCategories","sprite","useDashboard","isBigScreenOrTablet","useMediaQuery","isBigScreen","isTabletOrMobile","isMobile","isPortrait","isRetina","TransactionsItem","handleEditItem","transactionDate","categoryId","comment","amount","categories","getCategoryName","category","handleDeleteTransaction","signType","transactionBorderColor","transactionTextColor","TransactionSwitcher","onChange","isIncome","setIsIncome","handleSwitch","styles","addLeadingZero","number","formatDate","date","year","month","day","FormInput","className","Form","content","typeForm","setValue","selectedOption","setSelectedOption","startDate","setStartDate","categoriesValues","useMemo","defaultValue","option","toggleTransaction","Select","DatePicker","EditTransactionForm","editContent","toast","err","AddTransactionForm","TransactionsList","setEditContent","transactions","HomeTab","App","Routes","Route","persistConfig","storage","store","configureStore","persistReducer","getDefaultMiddleware","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","BrowserRouter","Provider","PersistGate","ToastContainer"],"mappings":"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"}