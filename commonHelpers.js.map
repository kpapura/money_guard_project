{"version":3,"file":"commonHelpers.js","sources":["../src/axiosConfig/walletApi.js","../src/redux/auth/operations.js","../src/redux/auth/authSlice.js","../src/authRoutes/PrivateRoute.jsx","../src/authRoutes/RestrictedRoute.jsx","../src/components/Exit/Exit.jsx","../src/components/Modal/Modal.jsx","../src/hooks/useModal.jsx","../src/components/Header/Header.jsx","../src/hooks/useResize.js","../src/components/NavBar/NavBar.jsx","../src/components/Layout.jsx","../src/components/LoginRegisterForm/InputField.jsx","../src/components/LoginRegisterForm/ProgressBar.jsx","../src/components/LoginRegisterForm/PassInputField.jsx","../src/components/LoginRegisterForm/LoginRegisterForm.jsx","../src/Schemas/loginShema.js","../src/pages/Login/Login.jsx","../src/Schemas/registerShema.js","../src/pages/Register/Register.jsx","../src/redux/transactions/operations.js","../src/hooks/useDashboard.jsx","../src/redux/transactions/transactionsSlice.js","../src/components/Form/TransactionSwitcher/TransactionSwitcher.jsx","../src/helpers/addLeadingzero.js","../src/components/Form/FormFields/FormFields.jsx","../src/components/Form/Form.jsx","../src/components/Form/EditTransactionForm/EditTransactionForm.jsx","../src/Schemas/addTransactionShema.js","../src/components/Form/AddTransactionForm/AddTransactionForm.jsx","../src/img/sprite.svg","../src/components/Transactions/TransactionItem/TransactionsItem.jsx","../src/components/Transactions/TransactionsList.jsx","../src/redux/currencyRate/operations.js","../src/redux/currencyRate/currencyRateSlice.js","../src/components/CurrencyRates/CurrenceRate.jsx","../src/pages/HomeTab/HomeTab.jsx","../src/components/Loader/Loader.jsx","../src/pages/StatisticsTab/StatisticsDashboard/StatisticsDashboard.jsx","../src/pages/StatisticsTab/StatisticsTable/StatisticsTable.jsx","../src/pages/StatisticsTab/Chart/Chart.jsx","../src/pages/StatisticsTab/StatisticsTab.jsx","../src/components/App.jsx","../src/redux/store.js","../src/index.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const walletApi = axios.create({\n  baseURL: 'https://wallet.b.goit.study/api/',\n});\n\nexport const setToken = token => {\n  walletApi.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\nexport const removeToken = () => {\n  walletApi.defaults.headers.common.Authorization = ``;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { walletApi, setToken, removeToken } from '../../axiosConfig/walletApi';\n\nexport const registerThunk = createAsyncThunk(\n  'register',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('auth/sign-up', credentials);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data.message);\n    }\n  }\n);\n\nexport const loginThunk = createAsyncThunk(\n  'login',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('auth/sign-in', credentials);\n      setToken(data.token);\n      return data;\n    } catch (error) {\n      console.log(error);\n      return thunkAPI.rejectWithValue(error.response.data.message);\n    }\n  }\n);\n\nexport const logoutThunk = createAsyncThunk('logout', async (_, thunkAPI) => {\n  try {\n    const { data } = await walletApi.delete('auth/sign-out');\n    removeToken();\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nexport const refreshThunk = createAsyncThunk('refresh', async (_, thunkApi) => {\n  const savedToken = thunkApi.getState().auth.token;\n  if (!savedToken) {\n    return thunkApi.rejectWithValue('Token is not exist!');\n  }\n  try {\n    setToken(savedToken);\n    const { data } = await walletApi.get('users/current');\n    console.log(data);\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  loginThunk,\n  logoutThunk,\n  refreshThunk,\n  registerThunk,\n} from './operations';\n\nconst initialState = {\n  user: {\n    username: '',\n    email: '',\n  },\n  token: null,\n  loading: false,\n  error: false,\n  isLoggedIn: false,\n  isRefresh: false,\n  balance: 0,\n};\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState,\n  selectors: {\n    selectUser: state => state.user,\n    selectIsLoggedIn: state => state.isLoggedIn,\n    selectToken: state => state.isLoggedIn,\n    selectIsRefresh: state => state.isRefresh,\n    selectBalance: state => state.balance,\n  },\n  reducers: {\n    logout: state => {\n      return initialState;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(logoutThunk.fulfilled, state => {\n        return initialState;\n      })\n      .addCase(refreshThunk.fulfilled, (state, { payload }) => {\n        state.user.username = payload.username;\n        state.user.email = payload.email;\n        state.balance = payload.balance;\n        state.isLoggedIn = true;\n        state.loading = false;\n        state.isRefresh = false;\n        state.loading = false;\n      })\n\n      .addMatcher(\n        isAnyOf(registerThunk.fulfilled, loginThunk.fulfilled),\n        (state, { payload }) => {\n          state.user.username = payload.user.username;\n          state.user.email = payload.user.email;\n          state.user.password = payload.user.password;\n          state.token = payload.token;\n          state.loading = false;\n          state.isLoggedIn = true;\n          state.loading = false;\n          state.isRefresh = false;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          registerThunk.pending,\n          loginThunk.pending,\n          refreshThunk.pending\n        ),\n        state => {\n          state.loading = true;\n          state.error = null;\n          state.isRefresh = true;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          registerThunk.rejected,\n          loginThunk.rejected,\n          refreshThunk.rejected\n        ),\n        (state, { payload }) => {\n          state.error = payload;\n          state.loading = false;\n          state.isRefresh = false;\n        }\n      );\n  },\n});\n\nexport const authReducer = slice.reducer;\nexport const {\n  selectIsLoggedIn,\n  selectUser,\n  selectToken,\n  selectIsRefresh,\n  selectBalance,\n  selectIsLoading,\n} = slice.selectors;\nexport const { logout } = slice.actions;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../redux/auth/authSlice';\n\nconst PrivateRoute = ({ component: Component, redirectTo = '/' }) => {\n\n  const isAuth = useSelector(selectIsLoggedIn);\n\n  return !isAuth ? <Navigate to={redirectTo} /> : <Component />;\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../redux/auth/authSlice';\n\nconst RestrictedRoute = ({ component: Component, redirectTo = '/' }) => {\n  const isAuth = useSelector(selectIsLoggedIn);\n\n  return isAuth ? <Navigate to={redirectTo} /> : <Component />;\n};\n\nexport default RestrictedRoute;\n","import React from 'react';\n\nimport s from './Exit.module.css';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../redux/auth/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { logoutThunk } from '../../redux/auth/operations';\n\nexport const Exit = ({ closeModal }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    dispatch(logoutThunk());\n    dispatch(logout());\n    closeModal();\n    navigate('/');\n  };\n  return (\n    <div className={s.wrap}>\n      <a href=\"\" className={s.logo}>\n        <svg width=\"36\" height=\"36\">\n          <use href=\"../../img/sprite.svg#icon-logo\"></use>\n        </svg>\n        Money Guard\n      </a>\n      <p className={s.text}>Are you sure you want to log out?</p>\n\n      <button className=\"modalButtonColor\" onClick={onLogout}>\n        Logout\n      </button>\n      <button className=\"modalButton\" onClick={closeModal}>\n        Cancel\n      </button>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal');\n\nconst Modal = ({ closeModal, children }) => {\n  const handleKeyDown = useCallback(\n    e => {\n      if (e.key === 'Escape') {\n        closeModal();\n      }\n    },\n    [closeModal]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal, handleKeyDown]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n  return ReactDOM.createPortal(\n    <div onClick={handleBackdropClick} className={s.modalWrapper}>\n      <div className={s.modalContent}>\n        <button className={s.closeButton} onClick={closeModal}>\n          <svg width=\"16\" height=\"16\">\n            <use href=\"../../img/sprite.svg#icon-close\"></use>\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react'\n\nexport const useModal = () => {\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst close = () => setIsOpen(false)\n\tconst open = () => setIsOpen(true)\n\tconst toggle = () => setIsOpen(prev => !prev)\n\treturn { isOpen, close, open, toggle }\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n\nimport { Exit } from '../Exit/Exit';\nimport Modal from '../Modal/Modal';\n\nimport { selectUser } from '../../redux/auth/authSlice';\nimport { useModal } from '../../hooks/useModal';\nimport s from './Header.module.css';\n\nexport const Header = () => {\n  const { isOpen, toggle } = useModal();\n\n  const user = useSelector(selectUser);\n\n  const index = user.email.indexOf('@');\n  const userEmail = user.email.slice(0, index);\n\n  return (\n    <header className={s.header}>\n      <div className={s.hederContainer}>\n        {/* <Link to=\"/\" className={s.logo}> */}\n        <a href=\"\" className={s.logo}>\n          <svg width=\"24\" height=\"23\">\n            <use href=\"../../img/sprite.svg#icon-logo\"></use>\n          </svg>\n          Money Guard\n        </a>\n        {/* </Link > */}\n        <div className={s.wrap}>\n          {' '}\n          <p className={s.user}>{userEmail}</p>\n          <button className={s.button} onClick={toggle}>\n            <svg width=\"18\" height=\"18\" className={s.icon}>\n              <use href=\"../../img/sprite.svg#icon-exit\"></use>\n            </svg>{' '}\n            Exit\n          </button>\n        </div>\n        {isOpen && (\n          <Modal closeModal={toggle}>\n            <Exit closeModal={toggle} />\n          </Modal>\n        )}\n      </div>\n    </header>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nconst useResize = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return { windowWidth };\n};\n\nexport default useResize;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport useResize from '../../hooks/useResize';\n\nconst NavBar = () => {\n    const screenWidth = useResize().windowWidth;\n\n\n\n    return (\n        <div>\n            <NavLink to='home'>Home</NavLink>\n            <NavLink to='statistics'>Statistics</NavLink>\n            {screenWidth < 768 && <NavLink to='/currency'>Currency</NavLink>}\n        </div>\n    )\n}\n\n\nexport default NavBar;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../redux/auth/authSlice';\n\nimport { Header } from './Header/Header';\nimport NavBar from './NavBar/NavBar';\n\nexport const Layout = () => {\n  const isAuth = useSelector(selectIsLoggedIn);\n\n\n  return !isAuth ? (<>\n  <Outlet />\n  </>) : \n  (\n    <>\n      <Header />\n      <NavBar/>\n      <Outlet />\n    </>\n  );\n};\n","import React from 'react';\nimport s from './LoginRegisterForm.module.css';\n\nconst InputField = ({ register, errors, name, placeholder, className }) => {\n  return (\n    <>\n      <div className={s.error_container}>\n        <label className={s.name_label}>\n          {name === 'username' ? (\n            <div className={s.name_user_icon}>\n              <svg width=\"20\" height=\"24\">\n                <use href=\"../../img/sprite.svg#icon-user\"></use>\n              </svg>{' '}\n            </div>\n          ) : (\n            <div className={s.icon_email_cont}>\n              <svg width=\"20\" height=\"24\">\n                <use href=\"../../img/sprite.svg#icon-email\"></use>\n              </svg>\n            </div>\n          )}\n          <input\n            className={s.name_input}\n            autoComplete=\"none\"\n            {...register(name)}\n            type=\"text\"\n            placeholder={placeholder}\n          />\n        </label>{' '}\n        {errors?.[name] && (\n          <span className={s[className]}>{errors[name].message}</span>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default InputField;\n","import React from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport s from './LoginRegisterForm.module.css';\n\nconst ProgressBar = ({ password }) => {\n  return (\n    <div className={s.porgress_container}>\n      <PasswordStrengthBar\n        password={password}\n        minLength={6}\n        scoreWordStyle={{ display: 'none' }}\n        className={s.strengthBar}\n      />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport { PiEyeClosedThin, PiEyeThin } from 'react-icons/pi';\nimport ProgressBar from './ProgressBar';\nimport s from './LoginRegisterForm.module.css';\n\nconst PassInputField = ({\n  register,\n  errors,\n  name,\n  placeholder,\n  getValues,\n  formType,\n  className,\n}) => {\n  const [type, setType] = useState('password');\n  const [confPassword, setConfPassword] = useState('');\n\n  function handleChange(e) {\n    setConfPassword(e.target.value);\n  }\n  return (\n    <>\n      <div className={s.error_container}>\n        <label className={s.password_label}>\n          <div className={s.password_icon}>\n            <svg width=\"20\" height=\"20\">\n              <use href=\"../../img/sprite.svg#icon-lock\"></use>\n            </svg>\n          </div>\n          <input\n            autoComplete={name}\n            {...register(name, {\n              required: 'Password is required',\n              validate: value =>\n                value === getValues('password') || 'Passwords do not match',\n            })}\n            type={type}\n            placeholder={placeholder}\n            onChange={handleChange}\n            className={s.password_input}\n          />{' '}\n          <div\n            className={s.eye}\n            onClick={() => {\n              setType(type === 'password' ? 'text' : 'password');\n            }}\n          >\n            {type === 'password' ? (\n              <PiEyeClosedThin style={{ color: 'rgba(255, 255, 255, 0.4)' }} />\n            ) : (\n              <PiEyeThin style={{ color: 'rgba(255, 255, 255, 0.6)' }} />\n            )}\n          </div>\n        </label>\n        {errors?.[name] && (\n          <span className={s[className]}>{errors[name].message}</span>\n        )}\n      </div>\n      {name === 'password' && formType !== 'login' && (\n        <ProgressBar password={confPassword} />\n      )}\n    </>\n  );\n};\n\nexport default PassInputField;\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { NavLink } from 'react-router-dom';\nimport s from './LoginRegisterForm.module.css';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputField from './InputField';\nimport PassInputField from './PassInputField';\n\nconst LoginRegisterForm = ({ onDataSubmit, formType, schema }) => {\n  const [size, setSize] = useState(0);\n  useEffect(() => {\n    const handleResize = () => {\n      setSize(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n  const submit = dataS => {\n    const { passwordConfirmation, ...data } = dataS;\n    onDataSubmit(data);\n    reset();\n  };\n\n  return (\n    <>\n      <section\n        className={\n          formType === 'login'\n            ? `${s.login_register_section}`\n            : `${s.register_login_section}`\n        }\n      >\n        {formType === 'login' ? (\n          <>\n            <div className={s.background_img_container_login}>\n              <div></div>\n              <div></div>\n            </div>\n            <div className={s.background_container_login}>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          </>\n        ) : (\n          <>\n            <div className={s.background_container_registration}>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n            <div className={s.background_img_container_registration}>\n              <div></div>\n              <div></div>\n            </div>\n          </>\n        )}\n\n        <div\n          className={s.form_container}\n          style={{\n            padding:\n              size < 768 && formType === 'login'\n                ? '98px 20px'\n                : size > 768 && formType === 'login'\n                ? '80px 62px'\n                : '40px 62px',\n          }}\n        >\n          <a\n            href=\"\"\n            className={s.logo_wrapper}\n            style={{ paddingBottom: formType === 'login' ? '11px' : '0px' }}\n          >\n            {size < 768 ? (\n              <svg width=\"25.5\" height=\"25.5\">\n                <use href=\"../../img/sprite.svg#icon-logo\"></use>\n              </svg>\n            ) : (\n              <svg width=\"36\" height=\"36\">\n                <use href=\"../../img/sprite.svg#icon-logo\"></use>\n              </svg>\n            )}\n            Money Guard\n          </a>\n          <form className={s.form} onSubmit={handleSubmit(submit)}>\n            {formType === 'register' && (\n              <InputField\n                register={register}\n                errors={errors}\n                name=\"username\"\n                placeholder=\"Name\"\n                className=\"username\"\n              />\n            )}\n            <InputField\n              register={register}\n              errors={errors}\n              name=\"email\"\n              placeholder=\"E-mail\"\n              className=\"email\"\n            />\n            <PassInputField\n              register={register}\n              errors={errors}\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={e => handleChange(e)}\n              formType={formType}\n              className=\"password\"\n            />\n            {formType === 'register' && (\n              <>\n                <PassInputField\n                  register={register}\n                  errors={errors}\n                  name=\"passwordConfirmation\"\n                  placeholder=\"Confirm password\"\n                  className=\"cpassword\"\n                />\n              </>\n            )}\n            {formType === 'login' ? (\n              <div className={s.button_cont}>\n                <button className={s.submit_btn} type=\"submit\">\n                  log in\n                </button>\n                <NavLink className={s.inactive_btn} to=\"/register\">\n                  register\n                </NavLink>\n              </div>\n            ) : (\n              <div className={s.button_cont}>\n                <button className={s.submit_btn} type=\"submit\">\n                  register\n                </button>\n                <NavLink className={s.inactive_btn} to=\"/login\">\n                  log in\n                </NavLink>\n              </div>\n            )}{' '}\n          </form>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default LoginRegisterForm;\n","import * as yup from 'yup';\n\nexport const loginSchema = yup\n  .object({\n    password: yup\n      .string()\n      .required()\n      .min(6, 'Must be more then 6 symbols')\n      .max(12, 'Must be less then 12 symbols'),\n    email: yup.string().required().email('Email is not valid'),\n  })\n  .required();\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport LoginRegisterForm from '../../components/LoginRegisterForm/LoginRegisterForm';\nimport { loginThunk } from '../../redux/auth/operations';\nimport { loginSchema } from '../../Schemas/loginShema';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = data => {\n    dispatch(loginThunk(data))\n      .unwrap()\n      .then(() => {\n        navigate('/home');\n      })\n      .catch(error => {\n        console.log(error.message);\n        toast(error);\n      });\n  };\n  const values = {\n    email: 'tomato9@gmail.com',\n    password: '0000000',\n  };\n  return (\n    <div>\n      <LoginRegisterForm\n        formType={'login'}\n        onDataSubmit={handleSubmit}\n        values={values}\n        schema={loginSchema}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n","import * as yup from 'yup';\n\nexport const registerSchema = yup\n  .object({\n    username: yup.string().required(),\n    password: yup\n      .string()\n      .required()\n      .min(6, 'Must be more then 6 symbols')\n      .max(12, 'Must be less then 12 symbols'),\n    email: yup.string().required().email('Email is not valid'),\n    passwordConfirmation: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'Passwords must match'),\n  })\n  .required();\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Login_RegisterForm from '../../components/LoginRegisterForm/LoginRegisterForm';\nimport { registerThunk } from '../../redux/auth/operations';\nimport { registerSchema } from '../../Schemas/registerShema';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from \"./Register.module.css\"\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigate();\n  const handleSubmit = data => {\n    dispatch(registerThunk(data))\n      .unwrap()\n      .then(() => {\n        navigation('/home');\n      })\n      .catch(error => {\n        console.log(error);\n        toast(error);\n      });\n  };\n\n  return (\n    <div className={s.registerWrapper}>\n      <Login_RegisterForm\n        onDataSubmit={handleSubmit}\n        formType={'register'}\n        schema={registerSchema}\n      />\n    </div>\n  );\n};\n\nexport default Register;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { walletApi } from '../../axiosConfig/walletApi';\n\nexport const fetchTransactionsDataThunk = createAsyncThunk(\n  'fetchTransactionsData',\n  async (_, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get('transactions');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const deleteTransactionThunk = createAsyncThunk(\n  'deleteTransaction',\n  async (id, thunkAPI) => {\n    try {\n      await walletApi.delete(`transactions/${id}`);\n      return id;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const addTransactionThunk = createAsyncThunk(\n  'addTransaction',\n  async (body, thunkAPI) => {\n    try {\n      const { data } = await walletApi.post('transactions', body);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const editTransactionThunk = createAsyncThunk(\n  'editTransaction',\n  async (body, thunkAPI) => {\n    try {\n      const { data } = await walletApi.patch(\n        `/transactions/${body.id}`,\n        body.content\n      );\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchTransactionCategoriesThunk = createAsyncThunk(\n  'fetchTransactionCategories',\n  async (_, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get('transaction-categories');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchTransactionSummaryControllerThunk = createAsyncThunk(\n  'fetchTransactionSummaryController',\n  async (query, thunkAPI) => {\n    try {\n      const { data } = await walletApi.get(\n        `transactions-summary?month=${query.month}&year=${query.year}`\n      );\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import React from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const useDashboard = () => {\n  const isBigScreenOrTablet = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 768px)' });\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' });\n  const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' });\n  return {\n    isBigScreenOrTablet,\n    isBigScreen,\n    isMobile,\n    isTabletOrMobile,\n    isPortrait,\n    isRetina,\n  };\n};\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport {\n  addTransactionThunk,\n  deleteTransactionThunk,\n  editTransactionThunk,\n  fetchTransactionCategoriesThunk,\n  fetchTransactionsDataThunk,\n  fetchTransactionSummaryControllerThunk,\n} from './operations';\n\nconst initialState = {\n  transactionsList: [],\n  transactionCategories: [],\n  categoriesSummary: [],\n  expenseSummary: 0,\n  incomeSummary: 0,\n  month: new Date().getMonth() + 1,\n  year: new Date().getFullYear(),\n  periodTotal: 0,\n  loading: false,\n  error: false,\n};\n\nconst transactionsSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  selectors: {\n    selectTransactions: state => state.transactionsList,\n    selectIsLoading: state => state.loading,\n    selectIsError: state => state.error,\n    selectTransactionCategories: state => state.transactionCategories,\n    selectMonth: state => state.month,\n    selectYear: state => state.year,\n    selectCategoriesSummary: state => state.categoriesSummary,\n    selectExpenseSummary: state => state.expenseSummary,\n    selectIncomeSummary: state => state.incomeSummary,\n    selectPeriodTotal: state => state.periodTotal,\n  },\n  reducers: {\n    selectedYear: (state, { payload }) => {\n      state.year = payload;\n    },\n    selectedMonth: (state, { payload }) => {\n      state.month = payload;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchTransactionsDataThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList = payload;\n        state.loading = false;\n      })\n      .addCase(deleteTransactionThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList = state.transactionsList.filter(\n          transaction => transaction.id !== payload\n        );\n        state.loading = false;\n      })\n      .addCase(addTransactionThunk.fulfilled, (state, { payload }) => {\n        state.transactionsList.push(payload);\n        state.loading = false;\n      })\n      .addCase(editTransactionThunk.fulfilled, (state, { payload }) => {\n        const transactionIndex = state.transactionsList.findIndex(\n          transaction => transaction.id === payload.id\n        );\n        state.transactionsList.splice(transactionIndex, 1, payload);\n        state.loading = false;\n      })\n      .addCase(\n        fetchTransactionCategoriesThunk.fulfilled,\n        (state, { payload }) => {\n          state.transactionCategories = payload;\n          state.loading = false;\n        }\n      )\n      .addCase(\n        fetchTransactionSummaryControllerThunk.fulfilled,\n        (state, { payload }) => {\n          state.categoriesSummary = payload.categoriesSummary;\n          state.expenseSummary = payload.expenseSummary;\n          state.incomeSummary = payload.incomeSummary;\n          state.periodTotal = payload.periodTotal;\n          state.loading = false;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          fetchTransactionsDataThunk.pending,\n          deleteTransactionThunk.pending,\n          addTransactionThunk.pending,\n          editTransactionThunk.pending,\n          fetchTransactionCategoriesThunk.pending,\n          fetchTransactionSummaryControllerThunk.pending\n        ),\n        (state, { payload }) => {\n          state.loading = true;\n          state.error = null;\n        }\n      )\n      .addMatcher(\n        isAnyOf(\n          fetchTransactionsDataThunk.rejected,\n          deleteTransactionThunk.rejected,\n          addTransactionThunk.rejected,\n          editTransactionThunk.rejected,\n          fetchTransactionCategoriesThunk.rejected,\n          fetchTransactionSummaryControllerThunk.rejected\n        ),\n        (state, { payload }) => {\n          state.error = payload;\n          state.loading = false;\n        }\n      );\n  },\n});\n\nexport const transactionsReducer = transactionsSlice.reducer;\nexport const { selectedYear, selectedMonth } = transactionsSlice.actions;\nexport const {\n  selectTransactions,\n  selectIsLoading,\n  selectIsError,\n  selectTransactionCategories,\n  selectYear,\n  selectMonth,\n  selectCategoriesSummary,\n  selectExpenseSummary,\n  selectIncomeSummary,\n  selectPeriodTotal,\n} = transactionsSlice.selectors;\n","import React, { useState } from 'react';\nimport styles from './TransactionSwitcher.module.css';\n\nconst TransactionSwitcher = ({ onChange }) => {\n  const [isIncome, setIsIncome] = useState(false);\n\n  const handleSwitch = () => {\n    setIsIncome(!isIncome);\n    onChange(!isIncome);\n  };\n  return (\n    <div className={styles['transaction-switcher']}>\n      <span className={ isIncome  ? styles.activeIncome : styles.labelIncome}>Income</span>\n\n      <label\n        className={`${styles.switch} ${\n          isIncome ? styles.income : styles.expense\n        }`}\n      >\n        <input type=\"checkbox\" onChange={handleSwitch} checked={!isIncome} />\n        <span className={`${styles.slider} ${styles.round}`}></span>\n      </label>\n      <span className={ !isIncome  ? styles.activeExpense : styles.labelExpense}>Expense</span>\n    </div>\n  );\n};\n\nexport default TransactionSwitcher;\n","\nconst addLeadingZero = number => {\n    return number < 10 ? '0' + number : number;\n  };\n  export const formatDate = (date)=>{\n  const year = date.getFullYear();\n  const month = addLeadingZero(date.getMonth() + 1);\n  const day = addLeadingZero(date.getDate());\n  const formattedDate = `${year}-${month}-${day}`;\n  return formattedDate\n  }\n\n","import React from 'react';\nimport s from \"../Form.module.css\"\n\nconst FormInput = ({ name, register, errors, placeholder, className }) => {\n  return (\n    <div className={s.inputContainer}>\n      <input\n        className={className}\n        {...register(name)}\n        placeholder={placeholder}\n      />\n      {errors[name] && <span>{errors[name].message}</span>}\n    </div>\n  );\n};\n\nexport default FormInput;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useForm } from 'react-hook-form';\nimport TransactionSwitcher from './TransactionSwitcher/TransactionSwitcher';\nimport s from './Form.module.css';\nimport { formatDate } from '../../helpers/addLeadingzero';\nimport Select from 'react-select';\nimport FormInput from './FormFields/FormFields';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDashboard } from '../../hooks/useDashboard';\n\nexport function Form({\n  content,\n  categories,\n  toggle,\n  typeForm,\n  onDataSubmit,\n  schema\n}) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    reset\n  } = useForm({ resolver: yupResolver(schema) });\n\n  const [selectedOption, setSelectedOption] = useState('');\n  const [type, setType] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n\n  useEffect(() => {\n    content ? setType(content.type) : setType('EXPENSE');\n  }, [content]);\n\n  useEffect(() => {\n    setValue('amount', content && content.amount);\n  }, [content, setValue]);\n\n  useEffect(() => {\n    setValue('comment', content && content.comment);\n  }, [content, setValue]);\n\n  const categoriesValues = useMemo(() => {\n    return categories.map(({ id, name }) => {\n      return { value: id, label: name };\n    });\n  }, [categories]);\n\n  const defaultValue = useMemo(() => {\n    return categoriesValues.find(option => {\n      return content?.categoryId === option.value;\n    });\n  }, [content, categoriesValues]);\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n  const submit = data => {\n    if (typeForm === 'add') {\n      onDataSubmit({\n        transactionDate: formatDate(startDate),\n        amount: +data.amount,\n        comment: data.comment,\n        type: type,\n        categoryId:\n          type === 'EXPENSE'\n            ? selectedOption.value || categoriesValues[0].value\n            : '063f1132-ba5d-42b4-951d-44011ca46262',\n      });\n      reset()\n    } else {\n      onDataSubmit({\n        transactionDate: formatDate(startDate),\n        amount: +data.amount,\n        comment: data.comment,\n      });\n      reset()\n    }\n    reset();\n\n  };\n  const toggleTransaction = type => {\n    if (type) {\n      setType('INCOME');\n    } else {\n      setType('EXPENSE');\n    }\n  };\n  return (\n    <div className={s.container}>\n      <form className={s.formWrapper} onSubmit={handleSubmit(submit)}>\n        <h1 className={s.header}>\n          {typeForm === 'add' ? 'Add transaction' : 'Edit transaction'}\n        </h1>\n        {typeForm === 'add' ? (\n          <TransactionSwitcher onChange={toggleTransaction} />\n        ) : (\n          <div>\n            <ul className={s.checkBox}>\n              <li\n                onClick={() => {\n                  if (!(typeForm === 'edit' && type === 'EXPENSE')) {\n                    toggleTransaction(true);\n                  }\n                }}\n                className={\n                  content.type === 'INCOME' || type === 'INCOME'\n                    ? s.activeIncome\n                    : ''\n                }\n                disabled={typeForm === 'edit' && type === 'EXPENSE'}\n              >\n                {' '}\n                Income\n              </li>\n              <span>/</span>\n              <li\n                onClick={() => {\n                  if (!(typeForm === 'edit' && type === 'INCOME')) {\n                    toggleTransaction(false);\n                  }\n                }}\n                className={type === 'EXPENSE' ? s.activeExpense : ''}\n                disabled={typeForm === 'edit' && type === 'INCOME'}\n              >\n                {' '}\n                Expense{' '}\n              </li>\n            </ul>\n          </div>\n        )}\n        <div className={s.secondContainer}>\n          {type === 'EXPENSE' && (\n            <div className={s.category}>\n              <Select\n                name=\"category\"\n                className=\"react-select-container\"\n                classNamePrefix=\"react-select\"\n                options={categoriesValues}\n                placeholder=\"Select category\"\n                defaultValue={defaultValue && defaultValue}\n                // categoriesValues[0]\n                onChange={handleChange}\n                isDisabled={typeForm === 'edit'}\n              />\n            {errors['category'] && <span>{errors['category'].message}</span>}\n            </div>\n          )}\n\n          <div className={s.boxDate}>\n            <FormInput\n              className={s.incomeInput}\n              name=\"amount\"\n              placeholder=\"0.00\"\n              errors={errors}\n              register={register}\n            />\n\n            <div className={s.svgBox}>\n              <DatePicker\n                className={s.customInput}\n                selected={content ? content.transactionDate : startDate}\n                onChange={date => {\n                  setValue('transactionDate', date);\n                  setStartDate(date);\n                }}\n              />\n              <svg width=\"36\" height=\"36\">\n          <use href=\"../../img/sprite.svg#icon-date\"></use>\n        </svg>\n              {errors['transactionDate'] && (\n                <span>{errors['transactionDate'].message}</span>\n              )}\n            </div>\n          </div>\n          \n          <FormInput\n            className={s.comment}\n            name=\"comment\"\n            placeholder=\"Comment\"\n            errors={errors}\n            register={register}\n          />\n\n          <div className={s.btnBox}>\n            <button className=\"modalButtonColor\">\n              {typeForm === 'add' ? 'ADD' : 'EDIT'}\n            </button>\n            <button type=\"button\" onClick={toggle} className=\"modalButton\">\n              CANCEL\n            </button>\n          </div>\n\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Form } from '../Form';\nimport { editTransactionThunk } from '../../../redux/transactions/operations';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function EditTransactionForm({ categories, editContent, toggle }) {\n  const dispatch = useDispatch();\n\n  const handleSubmit = data => {\n    dispatch(editTransactionThunk({ content:{...data}, id:editContent.id }))\n      .unwrap()\n      .then(data => {\n        toast.success(`Changed!`);\n        toggle()\n      })\n      .catch(err => {\n        toast.error('Credentials is not valid!');\n      });\n  };\n\n  return (\n    <Form\n      toggle={toggle}\n      content={editContent.content}\n      categories={categories}\n      onDataSubmit={handleSubmit}\n      typeForm=\"edit\"\n    />\n  );\n}\n","import * as yup from 'yup';\n\nexport const addTransactionShema = yup\n  .object({\n    comment: yup\n      .string()\n      .required(`Describe your transaction`)\n      .min(5, 'Give more details'),\n    transactionDate: yup.date().required('Please choose the date'),\n    // category: yup.string().required()\n    // category: yup.string().when('EXPENSE', {\n    //     is: true,\n    //     then: (schema)=>schema.required('Category is required for expenses'),\n    //     otherwise:(schema)=>schema.notRequired()\n    // }),\n    type: yup.string().oneOf(['INCOME', 'EXPENSE']).required(),\n    category: yup.string().when('type', {\n      is: 'EXPENSE',\n      then: yup.string().required('Category is required for expenses'),\n      otherwise: yup.string().notRequired(),\n    }),\n  })\n  .shape({\n    amount: yup\n      .number()\n      .typeError('Amount must be a number')\n      .required('Please enter the amount')\n      .when('type', {\n        is: 'EXPENSE',\n        then: yup.number().negative('The amount must be negative'),\n        otherwise: yup.number().positive('The amount must be positive'),\n      }),\n  })\n  .required();\n","import React from 'react';\nimport { Form } from '../Form';\nimport { useDispatch } from 'react-redux';\nimport { addTransactionThunk } from '../../../redux/transactions/operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addTransactionShema } from '../../../Schemas/addTransactionShema';\n\nexport function AddTransactionForm({ categories, toggle }) {\n  const dispatch = useDispatch()\n  \n  const handleSubmit = data => {\n    dispatch(addTransactionThunk(data)).unwrap()\n      .then(() => {\n        toast.success(\"Transaction was successfully added\")   \n        toggle()\n      }) .catch(err => {\n        toast.error('Credentials is not valid!');\n      });\n  }\n  return (\n<Form schema={addTransactionShema}  categories={categories} onDataSubmit={handleSubmit} toggle={toggle} typeForm=\"add\"/>\n  );\n}\n","export default \"__VITE_ASSET__4192010f__\"","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useDashboard } from '../../../hooks/useDashboard';\nimport { deleteTransactionThunk } from '../../../redux/transactions/operations';\nimport { selectTransactionCategories } from '../../../redux/transactions/transactionsSlice';\nimport sprite from '../../../img/sprite.svg';\nimport s from './TransactionsItem.module.css';\n\nconst TransactionsItem = ({ transaction, handleEditItem }) => {\n  const { id, transactionDate, type, categoryId, comment, amount } =\n    transaction;\n\n  const { isBigScreenOrTablet, isMobile } = useDashboard();\n\n  const dispatch = useDispatch();\n  const categories = useSelector(selectTransactionCategories);\n\n  function getCategoryName(id) {\n    const category = categories.find(category => category.id === id);\n    return category ? category.name : 'Unknown Category';\n  }\n\n  const handleDeleteTransaction = id => {\n    dispatch(deleteTransactionThunk(id));\n  };\n\n  const signType = type.toLowerCase() === 'income' ? '+' : '-';\n\n  const transactionBorderColor =\n    type.toLowerCase() === 'income' ? s.income_border : s.expense_border;\n\n  const transactionTextColor =\n    type.toLowerCase() === 'income' ? s.income_text : s.expense_text;\n\n  return (\n    <>\n      {isMobile && (\n        <li\n          key={id}\n          className={`${s.transaction_item} ${transactionBorderColor}`}\n        >\n          <table className={s.transactions_table_mobile}>\n            <tbody className={s.table_body}>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Date</td>\n                <td>{transactionDate}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Type</td>\n                <td>{signType}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Category</td>\n                <td>{getCategoryName(categoryId)}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Comment</td>\n                <td>{comment}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td className={s.transaction_first_column}>Sum</td>\n                <td className={transactionTextColor}>{amount}</td>\n              </tr>\n              <tr className={s.transaction_row_mobile}>\n                <td>\n                  <button\n                    className={s.btn_delete}\n                    onClick={() => handleDeleteTransaction(id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n                <td>\n                  <button\n                    onClick={() =>\n                      handleEditItem(\n                        { categoryId, type, amount, comment, transactionDate },\n                        id\n                      )\n                    }\n                    className={s.btn_edit}\n                  >\n                    <svg className={s.icon_edit}>\n                      <use xlinkHref={`${sprite}#icon-edit`} />\n                    </svg>{' '}\n                    Edit\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </li>\n      )}\n      {isBigScreenOrTablet && (\n        <tr className={s.transaction_row}>\n          <td className={s.transaction_colum}>{transactionDate}</td>\n          <td className={s.transaction_colum} style={{ textAlign: 'center' }}>\n            {signType}\n          </td>\n          <td className={s.transaction_colum}>{getCategoryName(categoryId)}</td>\n          <td className={s.transaction_colum}>{comment}</td>\n          <td\n            className={`${s.transaction_colum} ${transactionTextColor}`}\n            style={{ textAlign: 'right' }}\n          >\n            {amount}\n          </td>\n          <td className={s.transaction_colum}>\n            <div className={s.btn_wrapper}>\n              <button\n                onClick={() =>\n                  handleEditItem(\n                    { categoryId, type, amount, comment, transactionDate },\n                    id\n                  )\n                }\n                className={s.btn_edit}\n              >\n                Edit\n              </button>\n              <button\n                className={s.btn_delete}\n                onClick={() => handleDeleteTransaction(id)}\n              >\n                Delete\n              </button>\n            </div>\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nexport default TransactionsItem;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useModal } from '../../hooks/useModal.jsx';\nimport { useDashboard } from '../../hooks/useDashboard';\nimport {\n  selectTransactionCategories,\n  selectTransactions,\n} from '../../redux/transactions/transactionsSlice';\nimport Modal from '../Modal/Modal.jsx';\nimport { EditTransactionForm } from '../Form/EditTransactionForm/EditTransactionForm.jsx';\nimport { AddTransactionForm } from '../Form/AddTransactionForm/AddTransactionForm.jsx';\nimport TransactionsItem from './TransactionItem/TransactionsItem.jsx';\nimport sprite from '../../img/sprite.svg';\nimport s from './TransactionList.module.css';\n\nconst TransactionsList = () => {\n  const { isOpen, toggle } = useModal();\n  const [editContent, setEditContent] = useState('');\n\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectTransactionCategories);\n\n  const { isBigScreenOrTablet, isMobile } = useDashboard();\n\n  if (isOpen) {\n    document.body.classList.add('modal-open');\n  }\n  else {\n    document.body.classList.remove('modal-open');\n  }\n  const handleEditItem = (content, id, name) => {\n    toggle();\n    setEditContent({ content, id, name });\n    isOpen && document.body.classList.add('modal-open');\n\n  };\n\n  const handleAddItem = () => {\n    toggle();\n    setEditContent(null);\n\n  };\n\n  return (\n    <section className={s.transactions_section}>\n      <div className={s.transactions_container}>\n        {isMobile && (\n          <ul className={s.transactions_list}>\n            {transactions.length > 0 ? (\n              transactions.map(transaction => (\n                <TransactionsItem\n                  handleEditItem={handleEditItem}\n                  key={transaction.id}\n                  transaction={transaction}\n                />\n              ))\n            ) : (\n              <div className={s.empty_transactions}>No transactions</div>\n            )}\n          </ul>\n        )}\n        {isBigScreenOrTablet && (\n          <>\n            {transactions.length > 0 ? (\n              <table className={s.transactions_table}>\n                <thead>\n                  <tr className={s.transaction_row_head}>\n                    <th>Date</th>\n                    <th style={{ textAlign: 'center' }}>Type</th>\n                    <th>Category</th>\n                    <th>Comment</th>\n                    <th style={{ textAlign: 'right' }}>Sum</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody className={s.table_body}>\n                  {transactions.map(transaction => (\n                    <TransactionsItem\n                      handleEditItem={handleEditItem}\n                      key={transaction.id}\n                      transaction={transaction}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <>\n                <table className={s.transactions_table}>\n                  <thead>\n                    <tr className={s.transaction_row_head}>\n                      <th>Date</th>\n                      <th style={{ textAlign: 'center' }}>Type</th>\n                      <th>Category</th>\n                      <th>Comment</th>\n                      <th style={{ textAlign: 'right' }}>Sum</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                </table>\n                <div className={s.empty_transactions}>No transactions</div>\n              </>\n            )}\n          </>\n        )}\n        <button onClick={() => handleAddItem()} className={s.btn_add}>\n          {' '}\n          <svg className={s.icon_plus}>\n            <use xlinkHref={`${sprite}#icon-plus`} />\n          </svg>\n        </button>\n      </div>\n      {isOpen && (\n        <Modal closeModal={toggle}>\n          {editContent ? (\n            <EditTransactionForm\n              editContent={editContent}\n              categories={categories}\n              toggle={toggle}\n            />\n          ) : (\n            <AddTransactionForm categories={categories} toggle={toggle} />\n          )}\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default TransactionsList;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchCurrencyRate = createAsyncThunk('currency/fetchCurrencyRate', async () => {\n  const savedData = localStorage.getItem('currencyRate');\n  const savedTime = localStorage.getItem('lastFetchTime');\n\n  if (savedData && savedTime) {\n    const currentTime = new Date().getTime();\n    const timeDifference = (currentTime - savedTime) / (1000 * 60 * 60);\n\n    if (timeDifference < 1) {\n      return JSON.parse(savedData);\n    }\n  }\n\n  try {\n    const response = await axios.get('https://api.monobank.ua/bank/currency');\n\n    localStorage.setItem('currencyRate', JSON.stringify(response.data));\n    localStorage.setItem('lastFetchTime', new Date().getTime().toString());\n\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при виконанні запиту до Monobank:', error);\n  }\n});","import { createSlice } from '@reduxjs/toolkit';\nimport { fetchCurrencyRate } from './operations';\nconst initialState = {\n  usdRate: null,\n  eurRate: null,\n  lastFetchTime: null,\n};\nconst currencySlice = createSlice({\n  name: 'currency',\n  initialState,\n  selectors: {\n    selectUsdRate: state => state.usdRate,\n    selectEurRate: state => state.eurRate,\n    selectLastFetchTime: state => state.lastFetchTime,\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCurrencyRate.fulfilled, (state, { payload }) => {\n      state.usdRate = payload.find(\n        rate => rate.currencyCodeA === 840 && rate.currencyCodeB === 980\n      );\n      state.eurRate = payload.find(\n        rate => rate.currencyCodeA === 978 && rate.currencyCodeB === 980\n      );\n      state.lastFetchTime = new Date().getTime().toString();\n    });\n  },\n});\n\nexport const currencyReducer = currencySlice.reducer;\nexport const { selectUsdRate, selectEurRate, selectLastFetchTime } =\n  currencySlice.selectors;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useDashboard } from '../../hooks/useDashboard';\n\nimport {\n  selectUsdRate,\n  selectEurRate,\n  selectLastFetchTime,\n} from '../../redux/currencyRate/currencyRateSlice';\nimport {fetchCurrencyRate} from '../../redux/currencyRate/operations'\nimport s from './CurrenceRate.module.css';\n\nfunction CurrencyRates() {\n  const dispatch = useDispatch();\n  const usdRate = useSelector(selectUsdRate);\n  const eurRate = useSelector(selectEurRate);\n  const savedTime = useSelector(selectLastFetchTime);\n  \n  const { isDesktopOrLaptop, isBigScreen, isTabletOrMobile, isRetina } = useDashboard();\n\n  let imageSrc = \"../../img/images/currency_mobile.webp\";\n  let secondImageSrc = \"../../img/images/line_desc_mob_1x.webp\";\n\n  if (window.devicePixelRatio >= 2) {\n    if (isDesktopOrLaptop) {\n      imageSrc = \"../../img/images/currency_desk@2x.webp\";\n      secondImageSrc = \"../../img/images/line_desc_2x.webp\";\n    } else if (isBigScreen) {\n      imageSrc = \"../../img/images/currency_desk@2x.webp\";\n      secondImageSrc = \"../../img/images/line_desc_2x.webp\";\n    } else if (isTabletOrMobile) {\n      imageSrc = \"../../img/images/currency_tablet@2x.webp\";\n      secondImageSrc = \"../../img/images/line_desc_tab_2x.webp\";\n    }\n  } else {\n    if (isDesktopOrLaptop) {\n      imageSrc = \"../../img/images/currency_desk.webp\";\n      secondImageSrc = \"../../img/images/line_desc_1x.webp\";\n    } else if (isBigScreen) {\n      imageSrc = \"../../img/images/currency_desk.webp\";\n      secondImageSrc = \"../../img/images/line_desc_1x.webp\";\n    } else if (isTabletOrMobile) {\n      imageSrc = \"../../img/images/currency_tablet.webp\";\n      secondImageSrc = \"../../img/images/line_desc_tab_1x.webp\";\n    }\n  }\n\n  useEffect(() => {\n    const currentTime = new Date().getTime();\n    const timeDifference = (currentTime - savedTime) / (1000 * 60 * 60);\n\n    if (timeDifference > 1) {\n      dispatch(fetchCurrencyRate());\n    }\n  }, [dispatch, savedTime]);\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.secondwrapper}>\n      <ul className={s.title}>\n        <li className={s.titleItem}>Currency</li>\n        <li className={s.titleItem}>Purchase</li>\n        <li className={s.titleItem}>Sale</li>\n      </ul>\n      {usdRate && (\n  <ul className={s.row}>\n    <li className={s.rowItem}>USD</li>\n    <li className={s.rowItem}>{usdRate.rateBuy}</li>\n    <li className={s.rowItem}>{usdRate.rateSell}</li>\n  </ul>\n)}\n{eurRate && (\n  <ul className={s.row}>\n    <li className={s.rowItem}>EUR</li>\n    <li className={s.rowItem}>{eurRate.rateBuy}</li>\n    <li className={s.rowItem}>{eurRate.rateSell}</li>\n  </ul>\n)}\n        {isDesktopOrLaptop && (\n          <>\n            <p className={s.smallnumeur}> {eurRate.rateBuy}</p>\n            <p className={s.smallnumusd}> {usdRate.rateBuy}</p>\n          </>\n        )}\n        <img className={s.image} src={imageSrc} alt=\"Currency rate\" />\n        <img className={s.secondimage} src={secondImageSrc} alt=\"Currency rate\" />\n        \n        </div>\n    </div>\n  );\n}\n\nexport default CurrencyRates;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// працює в хром, але не в іншому браузері\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useDashboard } from '../../hooks/useDashboard';\n\n// import {\n//   selectUsdRate,\n//   selectEurRate,\n//   selectLastFetchTime,\n// } from '../../redux/currencyRate/currencyRateSlice';\n// import {fetchCurrencyRate} from '../../redux/currencyRate/operations'\n// import s from './CurrenceRate.module.css';\n\n// function CurrencyRates() {\n//   const dispatch = useDispatch();\n//   const usdRate = useSelector(selectUsdRate);\n//   const eurRate = useSelector(selectEurRate);\n//   const savedTime = useSelector(selectLastFetchTime);\n  \n//   const { isDesktopOrLaptop, isBigScreen, isTabletOrMobile, isRetina } = useDashboard();\n\n//   let imageSrc = \"../../img/images/currency_mobile.webp\";\n//   let secondImageSrc = \"../../img/images/line_desc_mob_1x.webp\";\n\n//   if (window.devicePixelRatio >= 2) {\n//     if (isDesktopOrLaptop) {\n//       imageSrc = \"../../img/images/currency_desk@2x.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_2x.webp\";\n//     } else if (isBigScreen) {\n//       imageSrc = \"../../img/images/currency_desk@2x.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_2x.webp\";\n//     } else if (isTabletOrMobile) {\n//       imageSrc = \"../../img/images/currency_tablet@2x.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_tab_2x.webp\";\n//     }\n//   } else {\n//     if (isDesktopOrLaptop) {\n//       imageSrc = \"../../img/images/currency_desk.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_1x.webp\";\n//     } else if (isBigScreen) {\n//       imageSrc = \"../../img/images/currency_desk.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_1x.webp\";\n//     } else if (isTabletOrMobile) {\n//       imageSrc = \"../../img/images/currency_tablet.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_tab_1x.webp\";\n//     }\n//   }\n\n//   useEffect(() => {\n//     const currentTime = new Date().getTime();\n//     const timeDifference = (currentTime - savedTime) / (1000 * 60 * 60);\n\n//     if (timeDifference > 1) {\n//       dispatch(fetchCurrencyRate());\n//     }\n//   }, [dispatch, savedTime]);\n\n//   return (\n//     <div className={s.wrapper}>\n//       <div className={s.secondwrapper}>\n//       <ul className={s.title}>\n//         <li className={s.titleItem}>Currency</li>\n//         <li className={s.titleItem}>Purchase</li>\n//         <li className={s.titleItem}>Sale</li>\n//       </ul>\n//       {usdRate && (\n//         <ul className={s.row}>\n//           <li className={s.rowItem}>USD</li>\n//           <li className={s.rowItem}>{usdRate.rateBuy}</li>\n//           <li className={s.rowItem}>{usdRate.rateSell}</li>\n//         </ul>\n//       )}\n//       {eurRate && (\n//         <ul className={s.row}>\n//           <li className={s.rowItem}>EUR</li>\n//           <li className={s.rowItem}>{eurRate.rateBuy}</li>\n//           <li className={s.rowItem}>{eurRate.rateSell}</li>\n//         </ul>\n//         )}\n//         {isDesktopOrLaptop && (\n//           <>\n//             <p> {eurRate.rateBuy}</p>\n//             <p> {usdRate.rateBuy}</p>\n//           </>\n//         )}\n//         <img className={s.image} src={imageSrc} alt=\"Currency rate\" />\n//         <img className={s.secondimage} src={secondImageSrc} alt=\"Currency rate\" />\n        \n//         </div>\n//     </div>\n//   );\n// }\n\n// export default CurrencyRates;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useDashboard } from '../../hooks/useDashboard';\n\n// import {\n//   selectUsdRate,\n//   selectEurRate,\n//   selectLastFetchTime,\n// } from '../../redux/currencyRate/currencyRateSlice';\n// import {fetchCurrencyRate} from '../../redux/currencyRate/operations'\n// import s from './CurrenceRate.module.css';\n\n// function CurrencyRates() {\n//   const dispatch = useDispatch();\n//   const usdRate = useSelector(selectUsdRate);\n//   const eurRate = useSelector(selectEurRate);\n//   const savedTime = useSelector(selectLastFetchTime);\n  \n//   const { isDesktopOrLaptop, isBigScreen, isTabletOrMobile, isRetina } = useDashboard();\n\n//   let imageSrc = \"../../img/images/currency_mobile.webp\";\n//   let secondImageSrc = \"../../img/images/line_desc_mob_1x.webp\";\n\n//   if (window.devicePixelRatio >= 2) {\n//     if (isDesktopOrLaptop) {\n//       imageSrc = \"../../img/images/currency_desk@2x.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_2x.webp\";\n//     } else if (isBigScreen) {\n//       imageSrc = \"../../img/images/currency_desk@2x.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_2x.webp\";\n//     } else if (isTabletOrMobile) {\n//       imageSrc = \"../../img/images/currency_tablet@2x.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_tab_2x.webp\";\n//     }\n//   } else {\n//     if (isDesktopOrLaptop) {\n//       imageSrc = \"../../img/images/currency_desk.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_1x.webp\";\n//     } else if (isBigScreen) {\n//       imageSrc = \"../../img/images/currency_desk.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_1x.webp\";\n//     } else if (isTabletOrMobile) {\n//       imageSrc = \"../../img/images/currency_tablet.webp\";\n//       secondImageSrc = \"../../img/images/line_desc_tab_1x.webp\";\n//     }\n//   }\n\n//   useEffect(() => {\n//     const currentTime = new Date().getTime();\n//     const timeDifference = (currentTime - savedTime) / (1000 * 60 * 60);\n\n//     if (timeDifference > 1) {\n//       dispatch(fetchCurrencyRate());\n//     }\n//   }, [dispatch, savedTime]);\n\n//   return (\n//     <div className={s.wrapper}>\n//       <div className={s.secondwrapper}>\n//       <ul className={s.title}>\n//         <li className={s.titleItem}>Currency</li>\n//         <li className={s.titleItem}>Purchase</li>\n//         <li className={s.titleItem}>Sale</li>\n//       </ul>\n//       {usdRate && (\n//         <ul className={s.row}>\n//           <li className={s.rowItem}>USD</li>\n//           <li className={s.rowItem}>{usdRate.rateBuy}</li>\n//           <li className={s.rowItem}>{usdRate.rateSell}</li>\n//         </ul>\n//       )}\n//       {eurRate && (\n//         <ul className={s.row}>\n//           <li className={s.rowItem}>EUR</li>\n//           <li className={s.rowItem}>{eurRate.rateBuy}</li>\n//           <li className={s.rowItem}>{eurRate.rateSell}</li>\n//         </ul>\n//       )}\n//         <img className={s.image} src={imageSrc} alt=\"Currency rate\" />\n//         <img className={s.secondimage} src={secondImageSrc} alt=\"Currency rate\" />\n      \n      \n      \n//         </div>\n//     </div>\n//   );\n// }\n\n// export default CurrencyRates;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useDashboard } from '../../hooks/useDashboard';\n\n// import {\n//   selectUsdRate,\n//   selectEurRate,\n//   selectLastFetchTime,\n//   // fetchCurrencyRate,\n// } from '../../redux/currencyRate/currencyRateSlice';\n// import {fetchCurrencyRate} from '../../redux/currencyRate/operations'\n// import s from './CurrenceRate.module.css';\n\n// function CurrencyRates() {\n//   const dispatch = useDispatch();\n//   const usdRate = useSelector(selectUsdRate);\n//   const eurRate = useSelector(selectEurRate);\n//   const savedTime = useSelector(selectLastFetchTime);\n  \n//   const { isDesktopOrLaptop, isBigScreen, isTabletOrMobile, isRetina } = useDashboard();\n\n//   let imageSrc = \"../../img/images/currency_mobile.webp\";\n//   let secondImageSrc = \"../../img/images/line_desc_mob_1x.webp\";\n\n//   if (isDesktopOrLaptop) {\n//     imageSrc = \"../../img/images/currency_desk.webp\";\n//     secondImageSrc = \"../../img/images/line_desc_1x.webp\";\n//   } else if (isBigScreen) {\n//     imageSrc = \"../../img/images/currency_desk@2x.webp\";\n//     secondImageSrc = \"../../img/images/line_desc_2x.webp\";\n//   } else if (isTabletOrMobile) {\n//     imageSrc = \"../../img/images/currency_tablet.webp\";\n//     secondImageSrc = \"../../img/images/line_desc_tab_1x.webp\";\n//   } else if (isRetina) {\n//     imageSrc = \"../../img/images/currency_tablet@2x.webp\";\n//     secondImageSrc = \"../../img/images/line_desc_tab_2x.webp\";\n//   }\n\n//   useEffect(() => {\n//     const currentTime = new Date().getTime();\n//     const timeDifference = (currentTime - savedTime) / (1000 * 60 * 60);\n\n//     if (timeDifference > 1) {\n//       dispatch(fetchCurrencyRate());\n//     }\n//   }, [dispatch, savedTime]);\n\n//   return (\n//     <div className={s.wrapper}>\n//       <div className={s.secondwrapper}>\n//       <ul className={s.title}>\n//         <li className={s.titleItem}>Currency</li>\n//         <li className={s.titleItem}>Purchase</li>\n//         <li className={s.titleItem}>Sale</li>\n//       </ul>\n//       {usdRate && (\n//         <ul className={s.row}>\n//           <li className={s.rowItem}>USD</li>\n//           <li className={s.rowItem}>{usdRate.rateBuy}</li>\n//           <li className={s.rowItem}>{usdRate.rateSell}</li>\n//         </ul>\n//       )}\n//       {eurRate && (\n//         <ul className={s.row}>\n//           <li className={s.rowItem}>EUR</li>\n//           <li className={s.rowItem}>{eurRate.rateBuy}</li>\n//           <li className={s.rowItem}>{eurRate.rateSell}</li>\n//         </ul>\n//       )}\n//         <img className={s.image} src={imageSrc} alt=\"Currency rate\" />\n//         <img className={s.secondimage} src={secondImageSrc} alt=\"Currency rate\" />\n      \n      \n      \n//         </div>\n//     </div>\n//   );\n// }\n\n// export default CurrencyRates;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// працює, але без хука dashboard\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n\n// import {\n//   selectUsdRate,\n//   selectEurRate,\n//   selectLastFetchTime,\n// } from '../../redux/currencyRate/currencyRateSlice';\n// import s from './CurrenceRate.module.css';\n\n// function CurrencyRates() {\n//   const usdRate = useSelector(selectUsdRate);\n//   const eurRate = useSelector(selectEurRate);\n\n//   return (\n//     <div className={s.wrapper}>\n//       <div className={s.secondwrapper}>\n//       <ul className={s.title}>\n//         <li className={s.titleItem}>Currency</li>\n//         <li className={s.titleItem}>Purchase</li>\n//         <li className={s.titleItem}>Sale</li>\n//       </ul>\n//       {usdRate && (\n//         <ul className={s.row}>\n//           <li className={s.rowItem}>USD</li>\n//           <li className={s.rowItem}>{usdRate.rateBuy}</li>\n//           <li className={s.rowItem}>{usdRate.rateSell}</li>\n//         </ul>\n//       )}\n//       {eurRate && (\n//         <ul className={s.row}>\n//           <li className={s.rowItem}>EUR</li>\n//           <li className={s.rowItem}>{eurRate.rateBuy}</li>\n//           <li className={s.rowItem}>{eurRate.rateSell}</li>\n//         </ul>\n//       )}\n      \n\n//         <img className={s.image} src=\"../../img/images/currency_mobile.webp\" alt=\"Currency rate\" />\n//         <img className={s.secondimage} src=\"../../img/images/line_desc_mob_1x.webp\" alt=\"Currency rate\" />\n      \n      \n      \n//         </div>\n//     </div>\n//   );\n// }\n\n// export default CurrencyRates;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  fetchTransactionCategoriesThunk,\n  fetchTransactionsDataThunk,\n} from '../../redux/transactions/operations';\nimport useResize from '../../hooks/useResize';\nimport TransactionsList from '../../components/Transactions/TransactionsList';\nimport CurrencyRates from '../../components/CurrencyRates/CurrenceRate';\n\nconst HomeTab = () => {\n  const screenWidth = useResize().windowWidth;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionsDataThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchTransactionCategoriesThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n    {screenWidth >= 768 && <CurrencyRates/>}\n    <TransactionsList />\n    </>\n  );\n};\n\nexport default HomeTab;\n","import React from 'react';\nimport s from './Loader.module.css';\n\nconst Loader = () => {\n\n  return (\n   \n    <div className={s.loaderWrapper}>\n      <div className={s.loader}>\n      <span className={s.loaderName}></span>\n    </div>\n    </div>\n    \n  );\n};\n\nexport default Loader;\n","// StatisticsDashboard.jsx\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactionSummaryControllerThunk } from '../../../redux/transactions/operations';\n\nconst StatisticsDashboard = ({ selectedMonth, selectedYear, onMonthChange, onYearChange }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionSummaryControllerThunk());\n  }, [dispatch]);\n\n  const handleMonthChange = (e) => {\n    onMonthChange(e);\n  };\n\n  const handleYearChange = (e) => {\n    onYearChange(e);\n  };\n\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n\n  const years = Array.from({ length: currentYear - 2019 }, (_, i) => currentYear - i).reverse();\n\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  return (\n    <div>\n      <select value={selectedMonth} onChange={handleMonthChange}>\n        {months.map((month, index) => (\n          <option key={index + 1} value={index + 1}>{month}</option>\n        ))}\n      </select>\n      <select value={selectedYear} onChange={handleYearChange}>\n        {years.map(year => (\n          <option key={year} value={year}>{year}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default StatisticsDashboard;\n","// StatisticsTable.jsx\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTransactionSummaryControllerThunk } from '../../../redux/transactions/operations';\n\nconst StatisticsTable = ({ selectedMonth, selectedYear }) => {\n  const dispatch = useDispatch();\n  const transactionsList = useSelector(state => state.transactions.transactionsList);\n  const incomeSummary = useSelector(state => state.transactions.transactionSummaryController?.incomeSummary);\n  const expenseSummary = useSelector(state => state.transactions.transactionSummaryController?.expenseSummary);\n\n  useEffect(() => {\n    dispatch(fetchTransactionSummaryControllerThunk());\n  }, [dispatch, selectedMonth, selectedYear]);\n\n  const generateRandomColor = () => {\n    return '#' + Math.floor(Math.random() * 16777215).toString(16);\n  };\n\n  const generateColorsForCategories = () => {\n    return transactionsList.map(transaction => ({\n      type: transaction.type,\n      color: generateRandomColor()\n    }));\n  };\n\n  const colorsForCategories = generateColorsForCategories();\n\n  const getColorForCategory = (category) => {\n    const colorObj = colorsForCategories.find(colorObj => colorObj.type === category);\n    return colorObj ? colorObj.color : '#000';\n  };\n\n  return (\n    <div>\n      <h2>Statistics Table</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Category</th>\n            <th>Sum</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactionsList.map((transaction, index) => (\n            <tr key={index}>\n              <td>\n                <div>\n                  <div style={{ width: '10px', height: '10px', backgroundColor: getColorForCategory(transaction.type) }}></div>\n                  {transaction.type}\n                </div>\n              </td>\n              <td>{transaction.total}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div>\n        <p>Expenses: {expenseSummary}</p>\n        <p>Income: {incomeSummary}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticsTable;\n","// Chart.jsx\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst Chart = ({ transactions }) => {\n  const getColorForCategory = (category) => {\n    const transaction = transactions.find(transaction => transaction.type === category);\n    if (transaction) {\n      return transaction.color;\n    } else {\n      return '#' + Math.floor(Math.random() * 16777215).toString(16);\n    }\n  };\n\n  const data = {\n    labels: transactions.map(transaction => transaction.type),\n    datasets: [{\n      data: transactions.map(transaction => transaction.total),\n      backgroundColor: transactions.map(transaction => getColorForCategory(transaction.type)),\n      hoverBackgroundColor: transactions.map(transaction => getColorForCategory(transaction.type))\n    }]\n  };\n\n  return (\n    <div>\n      <Doughnut data={data} />\n    </div>\n  );\n};\n\nexport default Chart;\n","// StatisticsTab.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { fetchTransactionSummaryControllerThunk } from '../../../redux/transactions/operations';\n// import Chart from './Chart'; // Імпорт компонента Chart\nimport StatisticsDashboard from './StatisticsDashboard/StatisticsDashboard';\nimport StatisticsTable from './StatisticsTable/StatisticsTable';\nimport { fetchTransactionSummaryControllerThunk } from '../../redux/transactions/operations';\nimport Chart from './Chart/Chart';\n\nconst StatisticsTab = () => {\n  const dispatch = useDispatch();\n  const transactionsList = useSelector(state => state.transactions.transactionsList);\n  const incomeSummary = useSelector(state => state.transactions.transactionSummaryController?.incomeSummary);\n  const expenseSummary = useSelector(state => state.transactions.transactionSummaryController?.expenseSummary);\n\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n\n  useEffect(() => {\n    dispatch(fetchTransactionSummaryControllerThunk());\n  }, [dispatch, selectedMonth, selectedYear]);\n\n  return (\n    <section>\n      <StatisticsTable selectedMonth={selectedMonth} selectedYear={selectedYear} />\n      <Chart transactions={transactionsList} />\n      <StatisticsDashboard setSelectedMonth={setSelectedMonth} setSelectedYear={setSelectedYear} />\n    </section>\n  );\n};\n\nexport default StatisticsTab;\n","import React, { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { selectIsLoggedIn, selectIsRefresh } from '../redux/auth/authSlice';\nimport { refreshThunk } from '../redux/auth/operations';\n\nimport PrivateRoute from '../../src/authRoutes/PrivateRoute'\nimport RestrictedRoute from '../../src/authRoutes/RestrictedRoute'\n\nimport { Layout } from './Layout';\nimport Login from '../pages/Login/Login';\nimport Register from '../pages/Register/Register';\nimport HomeTab from '../pages/HomeTab/HomeTab';\nimport Loader from '../components/Loader/Loader';\n\nimport 'modern-normalize';\nimport CurrencyRates from './CurrencyRates/CurrenceRate';\nimport StatisticsTab from '../pages/StatisticsTab/StatisticsTab';\n\nfunction App() {\n  const isAuth = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefresh);\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(refreshThunk());\n  // }, [dispatch]);\n\n  return isRefreshing ? (<Loader/>) : (\n    <>\n      <Suspense fallback={<Loader />}>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<RestrictedRoute component={Login} redirectTo='/home'/>} />\n          <Route path=\"register\" element={<RestrictedRoute component={Register} redirectTo='/home'/>} />\n          <Route path=\"/home\" element={<PrivateRoute component={HomeTab} redirectTo='/'/>} />\n          <Route path=\"/statistics\" element={<PrivateRoute component={StatisticsTab} redirectTo='/'/>} />\n          <Route path=\"/currency\" element={<PrivateRoute component={CurrencyRates} redirectTo='/'/>} />\n        </Route>\n          <Route path='*' element={!isAuth ? <Navigate to='/'/> : <Navigate to='/home'/>}/>\n      </Routes>\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n\n","import { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport { authReducer } from './auth/authSlice';\nimport { transactionsReducer } from './transactions/transactionsSlice';\nimport { currencyReducer } from '../redux/currencyRate/currencyRateSlice';\n\nconst persistConfig = {\n  key: 'auth',\n  version: 1,\n  storage,\n  whitelist: ['token'],\n};\n\nconst currencyPersistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authReducer),\n    transactions: transactionsReducer,\n     currency:  persistReducer(\n  currencyPersistConfig,\n  currencyReducer\n),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store)","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './components/App';\n\nimport { persistor, store } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n        <ToastContainer autoClose={1500} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>\n);\n\n//<React.StrictMode></React.StrictMode>\n"],"names":["walletApi","axios","setToken","token","removeToken","registerThunk","createAsyncThunk","credentials","thunkAPI","data","error","loginThunk","logoutThunk","_","refreshThunk","thunkApi","savedToken","initialState","slice","createSlice","state","builder","payload","isAnyOf","authReducer","selectIsLoggedIn","selectUser","selectToken","selectIsRefresh","selectBalance","selectIsLoading","logout","PrivateRoute","Component","redirectTo","useSelector","React","Navigate","RestrictedRoute","Exit","closeModal","navigate","useNavigate","dispatch","useDispatch","onLogout","s","modalRoot","Modal","children","handleKeyDown","useCallback","e","useEffect","handleBackdropClick","ReactDOM","useModal","isOpen","setIsOpen","useState","prev","Header","toggle","user","index","userEmail","useResize","windowWidth","setWindowWidth","handleResize","NavBar","screenWidth","NavLink","Layout","Outlet","InputField","register","errors","name","placeholder","className","ProgressBar","password","PasswordStrengthBar","PassInputField","getValues","formType","type","setType","confPassword","setConfPassword","handleChange","value","PiEyeClosedThin","PiEyeThin","LoginRegisterForm","onDataSubmit","schema","size","setSize","reset","handleSubmit","useForm","yupResolver","submit","dataS","passwordConfirmation","loginSchema","yup\n  .object","yup\n      .string","yup.string","Login","toast","values","registerSchema","yup.ref","Register","navigation","Login_RegisterForm","fetchTransactionsDataThunk","deleteTransactionThunk","id","addTransactionThunk","body","editTransactionThunk","fetchTransactionCategoriesThunk","fetchTransactionSummaryControllerThunk","query","useDashboard","isBigScreenOrTablet","useMediaQuery","isBigScreen","isTabletOrMobile","isMobile","isPortrait","isRetina","transactionsSlice","transaction","transactionIndex","transactionsReducer","selectTransactions","selectIsError","selectTransactionCategories","selectYear","selectMonth","selectCategoriesSummary","selectExpenseSummary","selectIncomeSummary","selectPeriodTotal","TransactionSwitcher","onChange","isIncome","setIsIncome","handleSwitch","styles","addLeadingZero","number","formatDate","date","year","month","day","FormInput","Form","content","categories","typeForm","setValue","selectedOption","setSelectedOption","startDate","setStartDate","categoriesValues","useMemo","defaultValue","option","toggleTransaction","Select","DatePicker","EditTransactionForm","editContent","err","addTransactionShema","yup.date","yup\n      .number","yup.number","AddTransactionForm","sprite","TransactionsItem","handleEditItem","transactionDate","categoryId","comment","amount","getCategoryName","category","handleDeleteTransaction","signType","transactionBorderColor","transactionTextColor","TransactionsList","setEditContent","transactions","handleAddItem","fetchCurrencyRate","savedData","savedTime","response","currencySlice","rate","currencyReducer","selectUsdRate","selectEurRate","selectLastFetchTime","CurrencyRates","usdRate","eurRate","isDesktopOrLaptop","imageSrc","secondImageSrc","HomeTab","Loader","StatisticsDashboard","selectedMonth","selectedYear","onMonthChange","onYearChange","handleMonthChange","handleYearChange","currentYear","years","i","months","StatisticsTable","transactionsList","incomeSummary","_a","expenseSummary","generateRandomColor","colorsForCategories","getColorForCategory","colorObj","Chart","Doughnut","StatisticsTab","setSelectedMonth","setSelectedYear","App","isAuth","isRefreshing","Suspense","Routes","Route","persistConfig","storage","currencyPersistConfig","store","configureStore","persistReducer","getDefaultMiddleware","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","BrowserRouter","Provider","PersistGate","ToastContainer"],"mappings":"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"}